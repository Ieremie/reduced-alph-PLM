%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: esm-lddt-CASP14-alphabets-select-aa-from-cluster=first.pdf
%%Creator: (Adobe Acrobat 23.1.0)
%%For: ioan
%%CreationDate: 15/08/2023, 13:49
%%BoundingBox: 0 0 502 302
%%HiResBoundingBox: 0 0 501.1125 301.0464
%%CropBox: 0 0 501.1125 301.0464
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 575 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 9.1-c001 79.2a0d8d9, 2023/03/14-11:19:46        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2023-08-15T13:47:52+01:00"
   xmp:CreatorTool="Matplotlib v3.5.2, https://matplotlib.org"
   pdf:Producer="Matplotlib pdf backend v3.5.2"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -301.046 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 301.046 li
501.113 301.046 li
501.113 0 li
cp
clp
0 301.046 mo
501.113 301.046 li
501.113 0 li
0 0 li
cp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
f
47.5125 228.96 mo
493.913 228.96 li
493.913 7.20001 li
47.5125 7.20001 li
cp
f
21.5688 281.439 mo
22.3749 280.633 li
25.8878 284.146 li
26.4988 284.757 26.9146 285.325 27.1352 285.817 cv
27.3558 286.31 27.3897 286.853 27.254 287.43 cv
27.1097 288.015 26.7449 288.601 26.1679 289.178 cv
25.5909 289.755 25.0308 290.128 24.4793 290.289 cv
23.9277 290.467 23.3932 290.442 22.8671 290.221 cv
22.341 290.001 21.7555 289.568 21.1106 288.923 cv
17.5977 285.41 li
18.3953 284.613 li
21.8998 288.117 li
22.4343 288.652 22.8671 288.999 23.215 289.144 cv
23.5714 289.296 23.9277 289.313 24.3011 289.212 cv
24.6745 289.11 25.0308 288.889 25.3872 288.533 cv
25.9727 287.947 26.2612 287.404 26.2442 286.878 cv
26.2273 286.352 25.8369 285.707 25.0733 284.943 cv
21.5688 281.439 li
cp
1 /0 /CSD get_res sepcs
.85 sep
f
29.7741 285.385 mo
23.6986 279.309 li
24.5217 278.486 li
32.4809 280.064 li
27.7122 275.296 li
28.4843 274.524 li
34.5598 280.599 li
33.7367 281.422 li
25.7691 279.835 li
30.5463 284.613 li
29.7741 285.385 li
cp
f
36.0447 279.114 mo
29.9693 273.039 li
30.7754 272.232 li
36.8508 278.308 li
36.0447 279.114 li
cp
f
38.2679 276.891 mo
32.1924 270.815 li
34.4834 268.524 li
34.8822 268.126 35.2132 267.846 35.4677 267.659 cv
35.8156 267.413 36.1635 267.269 36.5029 267.201 cv
36.8423 267.133 37.1987 267.167 37.5806 267.294 cv
37.9539 267.43 38.2933 267.633 38.5903 267.93 cv
39.1164 268.457 39.3794 269.059 39.4049 269.746 cv
39.4304 270.434 39.0146 271.206 38.1576 272.063 cv
36.6048 273.616 li
39.074 276.085 li
38.2679 276.891 li
cp
35.892 272.903 mo
37.4618 271.333 li
37.9794 270.815 38.2509 270.357 38.2764 269.941 cv
38.3018 269.526 38.1406 269.144 37.7842 268.787 cv
37.5297 268.533 37.2496 268.389 36.9357 268.329 cv
36.6217 268.287 36.3332 268.338 36.0702 268.482 cv
35.9005 268.584 35.629 268.821 35.2726 269.178 cv
33.7198 270.731 li
35.892 272.903 li
cp
f
43.9446 271.214 mo
37.8691 265.139 li
40.559 262.449 li
41.102 261.906 41.5687 261.558 41.959 261.388 cv
42.3494 261.219 42.7736 261.185 43.2149 261.286 cv
43.6561 261.388 44.0464 261.609 44.3773 261.94 cv
44.8186 262.381 45.0392 262.89 45.0477 263.459 cv
45.0646 264.036 44.8186 264.655 44.3179 265.308 cv
44.6319 265.198 44.8949 265.139 45.1071 265.13 cv
45.5653 265.113 46.0489 265.156 46.5835 265.266 cv
49.2903 265.868 li
48.2806 266.878 li
46.2186 266.412 li
45.6247 266.293 45.1495 266.208 44.8016 266.165 cv
44.4537 266.123 44.1822 266.123 43.987 266.165 cv
43.7919 266.208 43.6137 266.284 43.4609 266.369 cv
43.3506 266.445 43.1809 266.581 42.9773 266.785 cv
42.0439 267.718 li
44.7422 270.417 li
43.9446 271.214 li
cp
41.3481 267.022 mo
43.0791 265.291 li
43.444 264.927 43.6985 264.604 43.8258 264.324 cv
43.9531 264.044 43.9955 263.764 43.9361 263.484 cv
43.8682 263.213 43.7494 262.975 43.5458 262.771 cv
43.2658 262.491 42.9179 262.364 42.5276 262.381 cv
42.1287 262.406 41.7045 262.644 41.2632 263.085 cv
39.3371 265.011 li
41.3481 267.022 li
cp
f
46.8466 262.39 mo
45.8453 261.388 45.3277 260.328 45.2938 259.208 cv
45.2683 258.096 45.6756 257.112 46.5326 256.255 cv
47.0926 255.695 47.729 255.33 48.4503 255.152 cv
49.1715 254.973 49.8928 254.999 50.6055 255.236 cv
51.3268 255.482 51.9886 255.907 52.5911 256.509 cv
53.2105 257.129 53.6348 257.807 53.8724 258.537 cv
54.11 259.284 54.1269 259.997 53.9148 260.701 cv
53.7027 261.405 53.3378 262.008 52.8117 262.534 cv
52.2347 263.111 51.5898 263.484 50.8686 263.662 cv
50.1388 263.849 49.4261 263.815 48.7218 263.569 cv
48.009 263.331 47.3896 262.933 46.8466 262.39 cv
cp
47.6951 261.575 mo
48.4248 262.305 49.197 262.686 50.0116 262.72 cv
50.8262 262.754 51.5304 262.457 52.1244 261.863 cv
52.7269 261.261 53.0154 260.548 52.9814 259.734 cv
52.9475 258.919 52.5402 258.121 51.7595 257.341 cv
51.2674 256.849 50.7498 256.501 50.2067 256.297 cv
49.6722 256.102 49.1461 256.051 48.62 256.17 cv
48.0939 256.289 47.6272 256.552 47.2369 256.942 cv
46.6599 257.519 46.3629 258.206 46.3459 259.004 cv
46.329 259.801 46.7787 260.659 47.6951 261.575 cv
cp
f
58.1999 256.959 mo
52.8457 251.605 li
50.8431 253.607 li
50.1219 252.886 li
54.9415 248.066 li
55.6628 248.788 li
53.6518 250.799 li
59.006 256.153 li
58.1999 256.959 li
cp
f
64.742 248.991 mo
65.4547 249.704 li
61.4412 253.718 li
61.2545 253.548 61.1187 253.344 61.0169 253.107 cv
60.8472 252.733 60.7454 252.309 60.6945 251.817 cv
60.652 251.333 60.6775 250.697 60.7454 249.916 cv
60.8727 248.72 60.8896 247.854 60.8048 247.294 cv
60.7199 246.751 60.5417 246.335 60.2532 246.047 cv
59.9647 245.758 59.5999 245.614 59.1841 245.623 cv
58.7683 245.631 58.395 245.801 58.0555 246.14 cv
57.6992 246.497 57.521 246.895 57.521 247.32 cv
57.521 247.761 57.7077 248.168 58.0895 248.55 cv
57.241 249.229 li
56.7234 248.609 56.4858 247.982 56.5197 247.337 cv
56.5621 246.7 56.8761 246.081 57.4531 245.504 cv
58.0301 244.927 58.6665 244.63 59.3283 244.613 cv
59.9902 244.596 60.5587 244.825 61.0339 245.3 cv
61.28 245.546 61.4666 245.835 61.6024 246.174 cv
61.7382 246.514 61.823 246.921 61.8485 247.405 cv
61.8824 247.897 61.857 248.635 61.7721 249.619 cv
61.6957 250.442 61.6618 250.985 61.6703 251.248 cv
61.6788 251.511 61.7127 251.749 61.7636 251.97 cv
64.742 248.991 li
cp
f
63.2655 245.903 mo
62.5528 245.19 62.0436 244.545 61.7551 243.951 cv
61.4581 243.366 61.3394 242.806 61.3903 242.279 cv
61.4412 241.753 61.6957 241.261 62.137 240.82 cv
62.4594 240.498 62.8158 240.277 63.1976 240.167 cv
63.571 240.065 63.9613 240.048 64.3686 240.133 cv
64.7759 240.218 65.2002 240.387 65.6499 240.65 cv
66.0911 240.922 66.6257 241.355 67.2197 241.949 cv
67.9324 242.661 68.433 243.315 68.73 243.9 cv
69.027 244.486 69.1373 245.037 69.0864 245.563 cv
69.0355 246.089 68.7725 246.573 68.3312 247.014 cv
67.7373 247.608 67.0754 247.863 66.3287 247.778 cv
65.4293 247.676 64.411 247.048 63.2655 245.903 cv
cp
64.0292 245.139 mo
65.0305 246.14 65.8026 246.692 66.3711 246.785 cv
66.9312 246.887 67.3809 246.76 67.7203 246.42 cv
68.0597 246.081 68.187 245.631 68.0936 245.063 cv
68.0003 244.494 67.4572 243.713 66.456 242.712 cv
65.4547 241.711 64.6741 241.168 64.1056 241.075 cv
63.5455 240.99 63.0873 241.108 62.7479 241.448 cv
62.4 241.796 62.2727 242.212 62.3576 242.704 cv
62.4764 243.332 63.0364 244.146 64.0292 245.139 cv
cp
f
71.1688 281.439 mo
71.9749 280.633 li
75.4878 284.146 li
76.0988 284.757 76.5146 285.325 76.7352 285.817 cv
76.9558 286.31 76.9897 286.853 76.854 287.43 cv
76.7097 288.015 76.3449 288.601 75.7679 289.178 cv
75.1909 289.755 74.6308 290.128 74.0793 290.289 cv
73.5278 290.467 72.9932 290.442 72.4671 290.221 cv
71.941 290.001 71.3555 289.568 70.7106 288.923 cv
67.1977 285.41 li
67.9953 284.613 li
71.4998 288.117 li
72.0343 288.652 72.4671 288.999 72.815 289.144 cv
73.1714 289.296 73.5278 289.313 73.9011 289.212 cv
74.2745 289.11 74.6308 288.889 74.9872 288.533 cv
75.5727 287.947 75.8612 287.404 75.8442 286.878 cv
75.8273 286.352 75.4369 285.707 74.6733 284.943 cv
71.1688 281.439 li
cp
f
79.3741 285.385 mo
73.2986 279.309 li
74.1217 278.486 li
82.0809 280.064 li
77.3122 275.296 li
78.0843 274.524 li
84.1598 280.599 li
83.3367 281.422 li
75.3691 279.835 li
80.1463 284.613 li
79.3741 285.385 li
cp
f
85.6447 279.114 mo
79.5693 273.039 li
80.3754 272.232 li
86.4508 278.308 li
85.6447 279.114 li
cp
f
87.8679 276.891 mo
81.7924 270.815 li
84.0834 268.524 li
84.4822 268.126 84.8132 267.846 85.0677 267.659 cv
85.4156 267.413 85.7635 267.269 86.1029 267.201 cv
86.4423 267.133 86.7987 267.167 87.1806 267.294 cv
87.5539 267.43 87.8933 267.633 88.1903 267.93 cv
88.7164 268.457 88.9794 269.059 89.0049 269.746 cv
89.0304 270.434 88.6146 271.206 87.7576 272.063 cv
86.2048 273.616 li
88.674 276.085 li
87.8679 276.891 li
cp
85.492 272.903 mo
87.0618 271.333 li
87.5794 270.815 87.8509 270.357 87.8764 269.941 cv
87.9018 269.526 87.7406 269.144 87.3842 268.787 cv
87.1297 268.533 86.8496 268.389 86.5357 268.329 cv
86.2217 268.287 85.9332 268.338 85.6702 268.482 cv
85.5005 268.584 85.229 268.821 84.8726 269.178 cv
83.3198 270.731 li
85.492 272.903 li
cp
f
93.5446 271.214 mo
87.4691 265.139 li
90.159 262.449 li
90.702 261.906 91.1687 261.558 91.559 261.388 cv
91.9494 261.219 92.3736 261.185 92.8149 261.286 cv
93.2561 261.388 93.6464 261.609 93.9773 261.94 cv
94.4186 262.381 94.6392 262.89 94.6477 263.459 cv
94.6647 264.036 94.4186 264.655 93.9179 265.308 cv
94.2319 265.198 94.4949 265.139 94.7071 265.13 cv
95.1653 265.113 95.6489 265.156 96.1835 265.266 cv
98.8903 265.868 li
97.8806 266.878 li
95.8186 266.412 li
95.2247 266.293 94.7495 266.208 94.4016 266.165 cv
94.0537 266.123 93.7822 266.123 93.587 266.165 cv
93.3919 266.208 93.2137 266.284 93.0609 266.369 cv
92.9506 266.445 92.7809 266.581 92.5773 266.785 cv
91.6439 267.718 li
94.3422 270.417 li
93.5446 271.214 li
cp
90.9481 267.022 mo
92.6791 265.291 li
93.044 264.927 93.2985 264.604 93.4258 264.324 cv
93.5531 264.044 93.5955 263.764 93.5361 263.484 cv
93.4682 263.213 93.3494 262.975 93.1458 262.771 cv
92.8658 262.491 92.5179 262.364 92.1276 262.381 cv
91.7287 262.406 91.3045 262.644 90.8632 263.085 cv
88.9371 265.011 li
90.9481 267.022 li
cp
f
96.4466 262.39 mo
95.4453 261.388 94.9277 260.328 94.8938 259.208 cv
94.8683 258.096 95.2756 257.112 96.1326 256.255 cv
96.6926 255.695 97.329 255.33 98.0503 255.152 cv
98.7715 254.973 99.4928 254.999 100.206 255.236 cv
100.927 255.482 101.589 255.907 102.191 256.509 cv
102.811 257.129 103.235 257.807 103.472 258.537 cv
103.71 259.284 103.727 259.997 103.515 260.701 cv
103.303 261.405 102.938 262.008 102.412 262.534 cv
101.835 263.111 101.19 263.484 100.469 263.662 cv
99.7388 263.849 99.0261 263.815 98.3218 263.569 cv
97.609 263.331 96.9896 262.933 96.4466 262.39 cv
cp
97.2951 261.575 mo
98.0248 262.305 98.797 262.686 99.6116 262.72 cv
100.426 262.754 101.13 262.457 101.724 261.863 cv
102.327 261.261 102.615 260.548 102.581 259.734 cv
102.547 258.919 102.14 258.121 101.36 257.341 cv
100.867 256.849 100.35 256.501 99.8067 256.297 cv
99.2722 256.102 98.7461 256.051 98.22 256.17 cv
97.6939 256.289 97.2272 256.552 96.8369 256.942 cv
96.2599 257.519 95.9629 258.206 95.9459 259.004 cv
95.929 259.801 96.3787 260.659 97.2951 261.575 cv
cp
f
107.8 256.959 mo
102.446 251.605 li
100.443 253.607 li
99.7219 252.886 li
104.542 248.066 li
105.263 248.788 li
103.252 250.799 li
108.606 256.153 li
107.8 256.959 li
cp
f
113.952 250.807 mo
113.205 251.554 li
108.453 246.802 li
108.436 247.158 108.377 247.574 108.258 248.032 cv
108.139 248.491 108.003 248.881 107.859 249.195 cv
107.138 248.474 li
107.359 247.863 107.486 247.26 107.52 246.666 cv
107.554 246.089 107.503 245.597 107.367 245.19 cv
107.851 244.706 li
113.952 250.807 li
cp
f
113.714 244.46 mo
113.29 244.664 112.899 244.732 112.535 244.672 cv
112.178 244.621 111.856 244.435 111.559 244.138 cv
111.118 243.696 110.905 243.179 110.922 242.551 cv
110.939 241.923 111.211 241.346 111.737 240.82 cv
112.263 240.294 112.857 240.022 113.485 240.005 cv
114.113 239.988 114.647 240.201 115.089 240.642 cv
115.377 240.93 115.547 241.253 115.606 241.601 cv
115.666 241.965 115.606 242.347 115.411 242.763 cv
115.903 242.509 116.378 242.424 116.845 242.5 cv
117.312 242.576 117.736 242.797 118.109 243.17 cv
118.636 243.696 118.882 244.316 118.865 245.029 cv
118.848 245.758 118.534 246.412 117.94 247.006 cv
117.337 247.608 116.684 247.922 115.963 247.931 cv
115.25 247.948 114.63 247.685 114.096 247.15 cv
113.706 246.76 113.468 246.335 113.4 245.86 cv
113.332 245.402 113.443 244.935 113.714 244.46 cv
cp
112.297 243.349 mo
112.585 243.637 112.916 243.781 113.281 243.773 cv
113.655 243.773 113.977 243.62 114.274 243.323 cv
114.563 243.035 114.707 242.721 114.707 242.347 cv
114.715 241.982 114.588 241.668 114.325 241.405 cv
114.053 241.134 113.723 241.007 113.349 241.007 cv
112.976 241.007 112.645 241.151 112.365 241.431 cv
112.076 241.719 111.932 242.05 111.924 242.415 cv
111.924 242.789 112.042 243.094 112.297 243.349 cv
cp
114.86 246.386 mo
115.08 246.607 115.335 246.76 115.632 246.853 cv
115.937 246.955 116.234 246.963 116.548 246.87 cv
116.854 246.785 117.117 246.624 117.346 246.395 cv
117.702 246.038 117.88 245.64 117.889 245.173 cv
117.889 244.715 117.711 244.299 117.354 243.943 cv
116.998 243.586 116.591 243.416 116.115 243.416 cv
115.64 243.416 115.216 243.603 114.86 243.96 cv
114.503 244.316 114.333 244.723 114.333 245.181 cv
114.342 245.648 114.52 246.047 114.86 246.386 cv
cp
f
136.074 278.285 mo
129.998 272.21 li
130.804 271.404 li
133.299 273.898 li
136.455 270.742 li
133.961 268.247 li
134.767 267.441 li
140.842 273.516 li
140.036 274.323 li
137.177 271.463 li
134.02 274.62 li
136.88 277.479 li
136.074 278.285 li
cp
f
139.951 270.504 mo
140.639 269.681 li
140.978 269.953 141.318 270.122 141.648 270.182 cv
141.971 270.25 142.327 270.199 142.726 270.037 cv
143.116 269.885 143.49 269.63 143.838 269.282 cv
144.143 268.977 144.364 268.671 144.508 268.34 cv
144.661 268.018 144.703 267.721 144.661 267.441 cv
144.618 267.178 144.5 266.94 144.313 266.754 cv
144.126 266.567 143.897 266.457 143.643 266.423 cv
143.396 266.397 143.099 266.457 142.743 266.609 cv
142.514 266.703 142.064 266.966 141.368 267.39 cv
140.673 267.814 140.155 268.077 139.816 268.179 cv
139.374 268.315 138.967 268.349 138.602 268.273 cv
138.237 268.196 137.915 268.009 137.626 267.721 cv
137.321 267.416 137.126 267.051 137.032 266.601 cv
136.939 266.168 136.99 265.71 137.194 265.235 cv
137.389 264.768 137.686 264.318 138.093 263.911 cv
138.543 263.461 139.018 263.139 139.502 262.944 cv
139.985 262.749 140.469 262.689 140.936 262.783 cv
141.411 262.884 141.818 263.105 142.192 263.444 cv
141.479 264.276 li
141.054 263.937 140.63 263.784 140.189 263.818 cv
139.756 263.86 139.298 264.115 138.831 264.581 cv
138.339 265.074 138.085 265.515 138.042 265.914 cv
138 266.312 138.102 266.635 138.356 266.889 cv
138.577 267.11 138.831 267.212 139.12 267.195 cv
139.417 267.186 139.968 266.923 140.774 266.423 cv
141.581 265.922 142.158 265.6 142.505 265.455 cv
143.023 265.277 143.49 265.218 143.906 265.294 cv
144.33 265.379 144.703 265.583 145.026 265.905 cv
145.348 266.228 145.56 266.626 145.662 267.102 cv
145.764 267.577 145.713 268.069 145.526 268.561 cv
145.331 269.062 145.017 269.528 144.584 269.961 cv
144.033 270.513 143.498 270.894 142.972 271.115 cv
142.446 271.336 141.912 271.378 141.377 271.268 cv
140.842 271.158 140.367 270.903 139.951 270.504 cv
cp
f
147.834 266.524 mo
141.759 260.449 li
143.855 258.353 li
144.321 257.886 144.712 257.564 145.017 257.36 cv
145.45 257.097 145.9 256.953 146.349 256.911 cv
146.943 256.86 147.529 256.97 148.106 257.225 cv
148.683 257.496 149.243 257.886 149.786 258.43 cv
150.253 258.896 150.601 259.363 150.855 259.821 cv
151.101 260.288 151.262 260.721 151.322 261.119 cv
151.39 261.527 151.381 261.892 151.313 262.231 cv
151.245 262.57 151.11 262.91 150.897 263.258 cv
150.677 263.614 150.388 263.97 150.024 264.335 cv
147.834 266.524 li
cp
147.928 265.006 mo
149.226 263.707 li
149.625 263.309 149.905 262.961 150.057 262.655 cv
150.202 262.358 150.278 262.061 150.278 261.79 cv
150.278 261.416 150.176 261.009 149.956 260.585 cv
149.735 260.16 149.404 259.711 148.946 259.253 cv
148.309 258.616 147.707 258.234 147.164 258.099 cv
146.621 257.963 146.137 257.988 145.721 258.166 cv
145.424 258.311 145.034 258.616 144.559 259.091 cv
143.286 260.364 li
147.928 265.006 li
cp
f
153.935 260.424 mo
147.86 254.348 li
149.073 253.135 li
154.809 256.003 li
155.352 256.274 155.743 256.478 155.997 256.614 cv
155.844 256.325 155.632 255.892 155.344 255.315 cv
152.578 249.63 li
153.655 248.553 li
159.731 254.628 li
158.959 255.4 li
153.876 250.318 li
157.194 257.165 li
156.472 257.886 li
149.548 254.475 li
154.716 259.643 li
153.935 260.424 li
cp
f
163.54 250.818 mo
162.794 251.565 li
158.042 246.813 li
158.025 247.17 157.966 247.585 157.847 248.044 cv
157.728 248.502 157.592 248.892 157.448 249.206 cv
156.727 248.485 li
156.947 247.874 157.075 247.271 157.109 246.677 cv
157.143 246.1 157.092 245.608 156.956 245.201 cv
157.44 244.717 li
163.54 250.818 li
cp
f
160.214 243.589 mo
159.493 242.868 li
163.43 238.93 li
164.016 239.516 li
164.041 240.322 164.202 241.264 164.508 242.316 cv
164.805 243.377 165.212 244.378 165.721 245.294 cv
166.078 245.956 166.544 246.61 167.113 247.246 cv
166.341 248.018 li
165.874 247.534 165.39 246.864 164.89 246.007 cv
164.389 245.15 163.99 244.242 163.702 243.275 cv
163.413 242.308 163.244 241.425 163.193 240.61 cv
160.214 243.589 li
cp
f
172.906 291.053 mo
166.83 284.977 li
168.044 283.764 li
173.78 286.632 li
174.323 286.904 174.713 287.107 174.968 287.243 cv
174.815 286.955 174.603 286.522 174.314 285.945 cv
171.548 280.26 li
172.626 279.182 li
178.701 285.257 li
177.929 286.03 li
172.846 280.947 li
176.164 287.795 li
175.443 288.516 li
168.519 285.105 li
173.687 290.272 li
172.906 291.053 li
cp
f
179.974 283.985 mo
173.899 277.909 li
175.112 276.696 li
180.848 279.564 li
181.391 279.835 181.781 280.039 182.036 280.175 cv
181.883 279.886 181.671 279.454 181.383 278.877 cv
178.616 273.191 li
179.694 272.114 li
185.769 278.189 li
184.997 278.962 li
179.915 273.879 li
183.232 280.726 li
182.511 281.448 li
175.587 278.037 li
180.755 283.204 li
179.974 283.985 li
cp
f
184.845 275.211 mo
185.532 274.388 li
185.871 274.66 186.211 274.829 186.542 274.889 cv
186.864 274.956 187.22 274.906 187.619 274.744 cv
188.01 274.592 188.383 274.337 188.731 273.989 cv
189.036 273.684 189.257 273.378 189.401 273.047 cv
189.554 272.725 189.596 272.428 189.554 272.148 cv
189.511 271.885 189.393 271.647 189.206 271.461 cv
189.019 271.274 188.79 271.164 188.536 271.13 cv
188.29 271.104 187.993 271.164 187.636 271.316 cv
187.407 271.41 186.957 271.673 186.262 272.097 cv
185.566 272.521 185.048 272.784 184.709 272.886 cv
184.268 273.022 183.86 273.056 183.495 272.979 cv
183.131 272.903 182.808 272.716 182.52 272.428 cv
182.214 272.122 182.019 271.758 181.926 271.308 cv
181.832 270.875 181.883 270.417 182.087 269.942 cv
182.282 269.475 182.579 269.025 182.986 268.618 cv
183.436 268.168 183.911 267.846 184.395 267.651 cv
184.878 267.456 185.362 267.396 185.829 267.489 cv
186.304 267.591 186.711 267.812 187.085 268.151 cv
186.372 268.983 li
185.948 268.643 185.523 268.491 185.082 268.525 cv
184.649 268.567 184.191 268.822 183.724 269.288 cv
183.232 269.78 182.978 270.222 182.935 270.621 cv
182.893 271.019 182.995 271.342 183.249 271.596 cv
183.47 271.817 183.724 271.919 184.013 271.902 cv
184.31 271.893 184.861 271.63 185.668 271.13 cv
186.474 270.629 187.051 270.307 187.399 270.162 cv
187.916 269.984 188.383 269.925 188.799 270.001 cv
189.223 270.086 189.596 270.29 189.919 270.612 cv
190.241 270.934 190.453 271.333 190.555 271.808 cv
190.657 272.284 190.606 272.776 190.419 273.268 cv
190.224 273.769 189.91 274.235 189.477 274.668 cv
188.926 275.22 188.391 275.601 187.865 275.822 cv
187.339 276.043 186.805 276.085 186.27 275.975 cv
185.735 275.864 185.26 275.61 184.845 275.211 cv
cp
f
192.744 271.214 mo
186.669 265.139 li
191.064 260.744 li
191.786 261.465 li
188.196 265.054 li
190.055 266.912 li
193.415 263.552 li
194.127 264.265 li
190.767 267.625 li
192.838 269.696 li
196.563 265.971 li
197.276 266.683 li
192.744 271.214 li
cp
f
202.341 260.311 mo
202.978 260.2 203.504 260.048 203.937 259.853 cv
204.25 260.642 li
203.648 260.922 202.969 261.108 202.214 261.202 cv
202.002 261.906 201.629 262.517 201.085 263.06 cv
200.534 263.612 199.906 263.985 199.193 264.172 cv
198.48 264.358 197.759 264.333 197.046 264.095 cv
196.334 263.858 195.672 263.433 195.061 262.822 cv
194.467 262.228 194.034 261.558 193.788 260.82 cv
193.534 260.09 193.508 259.369 193.703 258.665 cv
193.898 257.96 194.263 257.324 194.823 256.764 cv
195.383 256.204 196.02 255.839 196.741 255.661 cv
197.462 255.483 198.184 255.508 198.896 255.746 cv
199.609 255.983 200.271 256.408 200.873 257.01 cv
201.374 257.511 201.747 258.037 201.993 258.588 cv
202.239 259.14 202.358 259.717 202.341 260.311 cv
cp
199.541 261.057 mo
200.135 260.735 200.712 260.548 201.272 260.497 cv
201.315 259.59 200.907 258.707 200.042 257.842 cv
199.55 257.349 199.041 257.01 198.497 256.806 cv
197.963 256.611 197.437 256.56 196.911 256.679 cv
196.385 256.798 195.918 257.061 195.519 257.46 cv
194.917 258.062 194.628 258.775 194.645 259.573 cv
194.662 260.37 195.078 261.176 195.892 261.991 cv
196.69 262.788 197.488 263.196 198.302 263.23 cv
199.117 263.264 199.813 262.975 200.424 262.364 cv
200.712 262.076 200.933 261.753 201.077 261.388 cv
200.661 261.482 200.279 261.626 199.931 261.838 cv
199.541 261.057 li
cp
f
202.766 257.29 mo
203.453 256.467 li
203.792 256.738 204.132 256.908 204.463 256.968 cv
204.785 257.035 205.141 256.985 205.54 256.823 cv
205.931 256.671 206.304 256.416 206.652 256.068 cv
206.957 255.763 207.178 255.457 207.322 255.126 cv
207.475 254.804 207.517 254.507 207.475 254.227 cv
207.432 253.964 207.314 253.726 207.127 253.539 cv
206.94 253.353 206.711 253.243 206.457 253.209 cv
206.211 253.183 205.914 253.243 205.557 253.395 cv
205.328 253.489 204.878 253.752 204.183 254.176 cv
203.487 254.6 202.969 254.863 202.63 254.965 cv
202.189 255.101 201.781 255.135 201.416 255.058 cv
201.052 254.982 200.729 254.795 200.441 254.507 cv
200.135 254.201 199.94 253.836 199.847 253.387 cv
199.753 252.954 199.804 252.496 200.008 252.021 cv
200.203 251.554 200.5 251.104 200.907 250.697 cv
201.357 250.247 201.832 249.925 202.316 249.73 cv
202.799 249.534 203.283 249.475 203.75 249.568 cv
204.225 249.67 204.632 249.891 205.006 250.23 cv
204.293 251.062 li
203.869 250.722 203.444 250.57 203.003 250.604 cv
202.57 250.646 202.112 250.901 201.646 251.367 cv
201.153 251.859 200.899 252.301 200.856 252.699 cv
200.814 253.098 200.916 253.421 201.17 253.675 cv
201.391 253.896 201.646 253.998 201.934 253.981 cv
202.231 253.972 202.783 253.709 203.589 253.209 cv
204.395 252.708 204.972 252.386 205.32 252.241 cv
205.837 252.063 206.304 252.004 206.72 252.08 cv
207.144 252.165 207.517 252.369 207.84 252.691 cv
208.162 253.013 208.374 253.412 208.476 253.887 cv
208.578 254.363 208.527 254.855 208.34 255.347 cv
208.145 255.847 207.831 256.314 207.399 256.747 cv
206.847 257.298 206.312 257.68 205.786 257.901 cv
205.26 258.122 204.726 258.164 204.191 258.054 cv
203.657 257.943 203.181 257.689 202.766 257.29 cv
cp
f
213.16 250.799 mo
212.413 251.545 li
207.662 246.794 li
207.645 247.15 207.585 247.566 207.466 248.024 cv
207.348 248.482 207.212 248.873 207.068 249.187 cv
206.346 248.465 li
206.567 247.854 206.694 247.252 206.728 246.658 cv
206.762 246.081 206.711 245.589 206.576 245.181 cv
207.059 244.698 li
213.16 250.799 li
cp
f
213.466 247.286 mo
214.11 246.437 li
214.62 246.777 215.069 246.938 215.46 246.921 cv
215.85 246.904 216.198 246.743 216.495 246.446 cv
216.843 246.098 217.021 245.682 217.012 245.198 cv
217.012 244.723 216.834 244.291 216.478 243.934 cv
216.138 243.595 215.731 243.425 215.29 243.425 cv
214.849 243.425 214.441 243.595 214.102 243.934 cv
213.958 244.078 213.813 244.291 213.661 244.545 cv
213.092 243.807 li
213.219 243.697 li
213.533 243.383 213.746 243.018 213.83 242.593 cv
213.915 242.169 213.788 241.787 213.44 241.439 cv
213.169 241.168 212.855 241.041 212.49 241.049 cv
212.125 241.058 211.794 241.202 211.505 241.49 cv
211.217 241.779 211.064 242.118 211.047 242.492 cv
211.039 242.873 211.192 243.264 211.497 243.671 cv
210.623 244.291 li
210.207 243.705 210.029 243.103 210.08 242.509 cv
210.131 241.915 210.385 241.372 210.869 240.888 cv
211.2 240.557 211.582 240.328 212.006 240.192 cv
212.422 240.065 212.829 240.048 213.219 240.133 cv
213.618 240.226 213.958 240.413 214.229 240.684 cv
214.501 240.956 214.662 241.27 214.738 241.618 cv
214.815 241.983 214.772 242.364 214.62 242.755 cv
215.061 242.483 215.511 242.39 215.969 242.441 cv
216.435 242.5 216.868 242.729 217.258 243.12 cv
217.785 243.646 218.039 244.291 218.014 245.046 cv
217.997 245.809 217.691 246.471 217.106 247.057 cv
216.563 247.6 215.969 247.888 215.298 247.914 cv
214.628 247.956 214.026 247.744 213.466 247.286 cv
cp
f
236.673 276.885 mo
228.986 272.422 li
229.809 271.599 li
234.713 274.654 li
235.239 274.976 235.74 275.307 236.224 275.638 cv
235.732 274.84 235.443 274.382 235.375 274.246 cv
232.422 268.986 li
233.39 268.018 li
237.335 270.216 li
238.311 270.767 239.185 271.336 239.957 271.904 cv
239.652 271.446 239.312 270.903 238.939 270.275 cv
235.986 265.422 li
236.801 264.607 li
241.205 272.354 li
240.432 273.126 li
234.527 269.783 li
234.026 269.503 233.729 269.325 233.627 269.257 cv
233.839 269.605 234.018 269.902 234.162 270.148 cv
237.497 276.062 li
236.673 276.885 li
cp
f
242.66 270.899 mo
238.901 262.507 li
239.767 261.641 li
248.328 265.23 li
247.42 266.138 li
244.866 265.01 li
242.329 267.547 li
243.5 270.059 li
242.66 270.899 li
cp
241.905 266.664 mo
243.967 264.603 li
241.65 263.559 li
240.946 263.245 240.378 262.965 239.953 262.727 cv
240.267 263.194 240.547 263.695 240.793 264.212 cv
241.905 266.664 li
cp
f
246.75 262.905 mo
247.437 262.082 li
247.777 262.354 248.116 262.524 248.447 262.583 cv
248.77 262.651 249.126 262.6 249.525 262.439 cv
249.915 262.286 250.288 262.031 250.636 261.684 cv
250.942 261.378 251.162 261.073 251.307 260.742 cv
251.459 260.419 251.502 260.122 251.459 259.842 cv
251.417 259.579 251.298 259.342 251.112 259.155 cv
250.925 258.968 250.696 258.858 250.441 258.824 cv
250.195 258.799 249.898 258.858 249.542 259.011 cv
249.313 259.104 248.863 259.367 248.167 259.791 cv
247.471 260.216 246.954 260.479 246.614 260.58 cv
246.173 260.716 245.766 260.75 245.401 260.674 cv
245.036 260.597 244.714 260.411 244.425 260.122 cv
244.12 259.817 243.925 259.452 243.831 259.002 cv
243.738 258.569 243.789 258.111 243.992 257.636 cv
244.188 257.169 244.485 256.72 244.892 256.312 cv
245.342 255.863 245.817 255.54 246.3 255.345 cv
246.784 255.15 247.268 255.09 247.734 255.184 cv
248.21 255.286 248.617 255.506 248.99 255.846 cv
248.277 256.677 li
247.853 256.338 247.429 256.185 246.988 256.219 cv
246.555 256.261 246.097 256.516 245.63 256.983 cv
245.138 257.475 244.883 257.916 244.841 258.315 cv
244.799 258.714 244.9 259.036 245.155 259.291 cv
245.376 259.511 245.63 259.613 245.919 259.596 cv
246.216 259.588 246.767 259.325 247.573 258.824 cv
248.379 258.323 248.956 258.001 249.304 257.857 cv
249.822 257.678 250.288 257.619 250.704 257.695 cv
251.129 257.78 251.502 257.984 251.824 258.306 cv
252.147 258.629 252.359 259.028 252.461 259.503 cv
252.563 259.978 252.512 260.47 252.325 260.962 cv
252.13 261.463 251.816 261.93 251.383 262.362 cv
250.832 262.914 250.297 263.296 249.771 263.516 cv
249.245 263.737 248.71 263.779 248.176 263.669 cv
247.641 263.559 247.166 263.304 246.75 262.905 cv
cp
f
252.41 257.246 mo
253.097 256.423 li
253.437 256.694 253.776 256.864 254.107 256.923 cv
254.429 256.991 254.786 256.94 255.185 256.779 cv
255.575 256.626 255.948 256.372 256.296 256.024 cv
256.602 255.718 256.822 255.413 256.966 255.082 cv
257.119 254.759 257.162 254.463 257.119 254.183 cv
257.077 253.919 256.958 253.682 256.771 253.495 cv
256.585 253.309 256.356 253.198 256.101 253.164 cv
255.855 253.139 255.558 253.198 255.202 253.351 cv
254.972 253.444 254.523 253.707 253.827 254.132 cv
253.131 254.556 252.614 254.819 252.274 254.921 cv
251.833 255.056 251.426 255.09 251.061 255.014 cv
250.696 254.938 250.373 254.751 250.085 254.463 cv
249.779 254.157 249.584 253.792 249.491 253.342 cv
249.398 252.91 249.449 252.452 249.652 251.976 cv
249.847 251.51 250.144 251.06 250.552 250.653 cv
251.001 250.203 251.476 249.88 251.96 249.685 cv
252.444 249.49 252.927 249.431 253.394 249.524 cv
253.869 249.626 254.277 249.847 254.65 250.186 cv
253.937 251.017 li
253.513 250.678 253.089 250.525 252.647 250.559 cv
252.215 250.602 251.757 250.856 251.29 251.323 cv
250.798 251.815 250.543 252.256 250.501 252.655 cv
250.458 253.054 250.56 253.376 250.815 253.631 cv
251.035 253.852 251.29 253.953 251.578 253.936 cv
251.875 253.928 252.427 253.665 253.233 253.164 cv
254.039 252.664 254.616 252.341 254.964 252.197 cv
255.482 252.019 255.948 251.959 256.364 252.036 cv
256.788 252.121 257.162 252.324 257.484 252.647 cv
257.807 252.969 258.019 253.368 258.12 253.843 cv
258.222 254.318 258.171 254.81 257.985 255.303 cv
257.79 255.803 257.476 256.27 257.043 256.703 cv
256.491 257.254 255.957 257.636 255.431 257.857 cv
254.905 258.077 254.37 258.12 253.835 258.009 cv
253.301 257.899 252.826 257.645 252.41 257.246 cv
cp
f
262.804 250.754 mo
262.058 251.501 li
257.306 246.749 li
257.289 247.106 257.23 247.521 257.111 247.98 cv
256.992 248.438 256.856 248.828 256.712 249.142 cv
255.991 248.421 li
256.211 247.81 256.339 247.208 256.373 246.614 cv
256.407 246.037 256.356 245.544 256.22 245.137 cv
256.703 244.653 li
262.804 250.754 li
cp
f
263.11 247.241 mo
263.755 246.393 li
264.264 246.732 264.714 246.894 265.104 246.877 cv
265.494 246.86 265.842 246.698 266.139 246.401 cv
266.487 246.054 266.665 245.638 266.657 245.154 cv
266.657 244.679 266.479 244.246 266.122 243.89 cv
265.783 243.55 265.375 243.381 264.934 243.381 cv
264.493 243.381 264.086 243.55 263.746 243.89 cv
263.602 244.034 263.458 244.246 263.305 244.501 cv
262.737 243.763 li
262.864 243.652 li
263.178 243.338 263.39 242.973 263.475 242.549 cv
263.56 242.125 263.432 241.743 263.084 241.395 cv
262.813 241.124 262.499 240.996 262.134 241.005 cv
261.769 241.013 261.438 241.158 261.15 241.446 cv
260.861 241.735 260.709 242.074 260.692 242.447 cv
260.683 242.829 260.836 243.219 261.141 243.627 cv
260.267 244.246 li
259.852 243.661 259.673 243.058 259.724 242.464 cv
259.775 241.87 260.03 241.327 260.513 240.844 cv
260.844 240.513 261.226 240.284 261.65 240.148 cv
262.066 240.021 262.473 240.004 262.864 240.088 cv
263.263 240.182 263.602 240.368 263.874 240.64 cv
264.145 240.911 264.306 241.225 264.383 241.573 cv
264.459 241.938 264.417 242.32 264.264 242.71 cv
264.705 242.439 265.155 242.345 265.613 242.396 cv
266.08 242.456 266.512 242.685 266.903 243.075 cv
267.429 243.601 267.683 244.246 267.658 245.001 cv
267.641 245.765 267.336 246.427 266.75 247.012 cv
266.207 247.555 265.613 247.844 264.943 247.869 cv
264.272 247.912 263.67 247.7 263.11 247.241 cv
cp
f
288.757 270.499 mo
289.444 269.676 li
289.784 269.947 290.123 270.117 290.454 270.176 cv
290.776 270.244 291.133 270.193 291.532 270.032 cv
291.922 269.879 292.295 269.625 292.643 269.277 cv
292.949 268.971 293.169 268.666 293.314 268.335 cv
293.466 268.012 293.509 267.715 293.466 267.435 cv
293.424 267.172 293.305 266.935 293.118 266.748 cv
292.932 266.561 292.703 266.451 292.448 266.417 cv
292.202 266.392 291.905 266.451 291.549 266.604 cv
291.32 266.697 290.87 266.96 290.174 267.385 cv
289.478 267.809 288.961 268.072 288.621 268.174 cv
288.18 268.309 287.773 268.343 287.408 268.267 cv
287.043 268.191 286.721 268.004 286.432 267.715 cv
286.127 267.41 285.931 267.045 285.838 266.595 cv
285.745 266.163 285.796 265.704 285.999 265.229 cv
286.194 264.763 286.491 264.313 286.899 263.906 cv
287.348 263.456 287.824 263.133 288.307 262.938 cv
288.791 262.743 289.275 262.684 289.741 262.777 cv
290.216 262.879 290.624 263.099 290.997 263.439 cv
290.284 264.27 li
289.86 263.931 289.436 263.778 288.995 263.812 cv
288.562 263.855 288.104 264.109 287.637 264.576 cv
287.145 265.068 286.89 265.509 286.848 265.908 cv
286.805 266.307 286.907 266.629 287.162 266.884 cv
287.382 267.104 287.637 267.206 287.925 267.189 cv
288.222 267.181 288.774 266.918 289.58 266.417 cv
290.386 265.917 290.963 265.594 291.311 265.45 cv
291.829 265.272 292.295 265.212 292.711 265.289 cv
293.135 265.373 293.509 265.577 293.831 265.9 cv
294.154 266.222 294.366 266.621 294.468 267.096 cv
294.569 267.571 294.519 268.063 294.332 268.555 cv
294.137 269.056 293.823 269.523 293.39 269.956 cv
292.838 270.507 292.304 270.889 291.778 271.11 cv
291.252 271.33 290.717 271.373 290.183 271.262 cv
289.648 271.152 289.173 270.897 288.757 270.499 cv
cp
f
296.64 266.519 mo
290.564 260.443 li
292.66 258.348 li
293.127 257.881 293.517 257.558 293.823 257.355 cv
294.256 257.092 294.705 256.948 295.155 256.905 cv
295.749 256.854 296.334 256.964 296.911 257.219 cv
297.488 257.491 298.048 257.881 298.592 258.424 cv
299.058 258.891 299.406 259.357 299.661 259.816 cv
299.907 260.282 300.068 260.715 300.127 261.114 cv
300.195 261.521 300.187 261.886 300.119 262.225 cv
300.051 262.565 299.915 262.904 299.703 263.252 cv
299.482 263.608 299.194 263.965 298.829 264.33 cv
296.64 266.519 li
cp
296.733 265 mo
298.031 263.702 li
298.43 263.303 298.71 262.955 298.863 262.65 cv
299.007 262.353 299.084 262.056 299.084 261.784 cv
299.084 261.411 298.982 261.003 298.761 260.579 cv
298.541 260.155 298.21 259.705 297.751 259.247 cv
297.115 258.611 296.513 258.229 295.97 258.093 cv
295.426 257.957 294.943 257.983 294.527 258.161 cv
294.23 258.305 293.84 258.611 293.365 259.086 cv
292.092 260.359 li
296.733 265 li
cp
f
302.741 260.418 mo
296.665 254.343 li
297.879 253.129 li
303.615 255.997 li
304.158 256.269 304.548 256.472 304.803 256.608 cv
304.65 256.32 304.438 255.887 304.149 255.31 cv
301.383 249.625 li
302.461 248.547 li
308.536 254.623 li
307.764 255.395 li
302.681 250.312 li
305.999 257.16 li
305.278 257.881 li
298.354 254.47 li
303.521 259.637 li
302.741 260.418 li
cp
f
312.346 250.813 mo
311.599 251.559 li
306.848 246.808 li
306.831 247.164 306.771 247.58 306.652 248.038 cv
306.534 248.496 306.398 248.887 306.254 249.201 cv
305.532 248.479 li
305.753 247.868 305.88 247.266 305.914 246.672 cv
305.948 246.095 305.897 245.603 305.762 245.195 cv
306.245 244.712 li
312.346 250.813 li
cp
f
317.454 244.279 mo
318.167 244.992 li
314.153 249.005 li
313.967 248.836 313.831 248.632 313.729 248.394 cv
313.559 248.021 313.458 247.597 313.407 247.105 cv
313.364 246.621 313.39 245.985 313.458 245.204 cv
313.585 244.008 313.602 243.142 313.517 242.582 cv
313.432 242.039 313.254 241.623 312.966 241.335 cv
312.677 241.046 312.312 240.902 311.896 240.91 cv
311.481 240.919 311.107 241.089 310.768 241.428 cv
310.411 241.784 310.233 242.183 310.233 242.607 cv
310.233 243.049 310.42 243.456 310.802 243.838 cv
309.953 244.517 li
309.436 243.897 309.198 243.269 309.232 242.624 cv
309.274 241.988 309.588 241.369 310.165 240.792 cv
310.742 240.215 311.379 239.918 312.041 239.901 cv
312.702 239.884 313.271 240.113 313.746 240.588 cv
313.992 240.834 314.179 241.123 314.315 241.462 cv
314.45 241.801 314.535 242.209 314.561 242.692 cv
314.595 243.184 314.569 243.923 314.484 244.907 cv
314.408 245.73 314.374 246.273 314.383 246.536 cv
314.391 246.799 314.425 247.037 314.476 247.257 cv
317.454 244.279 li
cp
f
339.16 268.83 mo
338.447 268.117 li
341.018 265.546 li
343.267 267.795 li
343.199 268.508 343.029 269.152 342.758 269.729 cv
342.486 270.306 342.138 270.807 341.697 271.248 cv
341.095 271.851 340.433 272.275 339.695 272.504 cv
338.948 272.742 338.218 272.742 337.488 272.504 cv
336.75 272.275 336.088 271.851 335.494 271.257 cv
334.9 270.663 334.468 269.992 334.213 269.229 cv
333.95 268.474 333.925 267.735 334.137 267.014 cv
334.349 266.31 334.756 265.648 335.367 265.037 cv
335.8 264.604 336.275 264.282 336.767 264.061 cv
337.268 263.849 337.735 263.773 338.193 263.824 cv
338.651 263.875 339.135 264.053 339.652 264.35 cv
339.126 265.283 li
338.727 265.071 338.371 264.935 338.057 264.893 cv
337.752 264.859 337.412 264.91 337.047 265.054 cv
336.691 265.207 336.36 265.419 336.054 265.724 cv
335.681 266.098 335.427 266.471 335.265 266.853 cv
335.113 267.243 335.045 267.6 335.062 267.939 cv
335.079 268.295 335.147 268.618 335.282 268.923 cv
335.503 269.449 335.834 269.933 336.275 270.374 cv
336.818 270.917 337.361 271.274 337.913 271.452 cv
338.464 271.63 339.007 271.63 339.542 271.452 cv
340.076 271.274 340.535 270.985 340.942 270.578 cv
341.281 270.239 341.553 269.831 341.748 269.365 cv
341.943 268.898 342.062 268.508 342.088 268.177 cv
340.95 267.04 li
339.16 268.83 li
cp
f
345.269 267.489 mo
339.194 261.414 li
341.477 259.131 li
341.935 258.673 342.376 258.368 342.775 258.206 cv
343.182 258.054 343.589 258.02 344.005 258.113 cv
344.412 258.215 344.769 258.402 345.04 258.673 cv
345.303 258.936 345.473 259.259 345.566 259.623 cv
345.651 259.997 345.626 260.396 345.482 260.811 cv
345.957 260.557 346.424 260.463 346.882 260.514 cv
347.34 260.582 347.747 260.786 348.095 261.134 cv
348.384 261.422 348.587 261.762 348.706 262.118 cv
348.833 262.483 348.867 262.822 348.833 263.128 cv
348.791 263.442 348.664 263.756 348.468 264.087 cv
348.265 264.426 347.976 264.782 347.586 265.173 cv
345.269 267.489 li
cp
342.554 263.162 mo
343.869 261.847 li
344.226 261.49 344.463 261.219 344.565 261.015 cv
344.709 260.752 344.76 260.497 344.718 260.251 cv
344.684 260.014 344.565 259.776 344.353 259.564 cv
344.149 259.36 343.92 259.233 343.674 259.174 cv
343.42 259.123 343.182 259.157 342.945 259.276 cv
342.707 259.411 342.368 259.683 341.935 260.116 cv
340.721 261.329 li
342.554 263.162 li
cp
345.363 265.97 mo
346.873 264.46 li
347.128 264.205 347.306 264.01 347.391 263.875 cv
347.535 263.662 347.637 263.459 347.688 263.255 cv
347.73 263.06 347.722 262.848 347.654 262.61 cv
347.594 262.381 347.467 262.169 347.264 261.965 cv
347.043 261.745 346.788 261.609 346.5 261.558 cv
346.211 261.507 345.931 261.55 345.66 261.685 cv
345.388 261.821 345.057 262.084 344.667 262.475 cv
343.267 263.875 li
345.363 265.97 li
cp
f
350.938 261.821 mo
344.862 255.746 li
346.076 254.532 li
351.812 257.4 li
352.355 257.672 352.745 257.875 353 258.011 cv
352.847 257.723 352.635 257.29 352.346 256.713 cv
349.58 251.028 li
350.658 249.95 li
356.733 256.026 li
355.961 256.798 li
350.878 251.715 li
354.196 258.563 li
353.475 259.284 li
346.551 255.873 li
351.718 261.04 li
350.938 261.821 li
cp
f
358.048 254.71 mo
351.973 248.635 li
354.663 245.945 li
355.206 245.402 355.672 245.054 356.063 244.885 cv
356.453 244.715 356.877 244.681 357.319 244.783 cv
357.76 244.885 358.15 245.105 358.481 245.436 cv
358.922 245.877 359.143 246.386 359.151 246.955 cv
359.168 247.532 358.922 248.151 358.422 248.805 cv
358.736 248.694 358.999 248.635 359.211 248.627 cv
359.669 248.61 360.153 248.652 360.687 248.762 cv
363.394 249.365 li
362.384 250.374 li
360.322 249.908 li
359.728 249.789 359.253 249.704 358.905 249.662 cv
358.557 249.619 358.286 249.619 358.091 249.662 cv
357.896 249.704 357.717 249.781 357.565 249.865 cv
357.454 249.942 357.285 250.078 357.081 250.281 cv
356.148 251.215 li
358.846 253.913 li
358.048 254.71 li
cp
355.452 250.519 mo
357.183 248.788 li
357.548 248.423 357.802 248.1 357.93 247.82 cv
358.057 247.54 358.099 247.26 358.04 246.98 cv
357.972 246.709 357.853 246.471 357.649 246.268 cv
357.369 245.988 357.022 245.86 356.631 245.877 cv
356.232 245.903 355.808 246.14 355.367 246.582 cv
353.441 248.508 li
355.452 250.519 li
cp
f
358.625 243.578 mo
357.904 242.857 li
361.841 238.919 li
362.427 239.505 li
362.452 240.311 362.613 241.253 362.919 242.305 cv
363.216 243.366 363.623 244.367 364.132 245.283 cv
364.489 245.945 364.955 246.599 365.524 247.235 cv
364.752 248.007 li
364.285 247.523 363.801 246.853 363.301 245.996 cv
362.8 245.139 362.401 244.231 362.113 243.264 cv
361.824 242.297 361.655 241.414 361.604 240.599 cv
358.625 243.578 li
cp
f
387.484 274.875 mo
379.797 270.411 li
380.62 269.588 li
385.524 272.643 li
386.05 272.965 386.551 273.296 387.035 273.627 cv
386.542 272.83 386.254 272.371 386.186 272.236 cv
383.233 266.975 li
384.2 266.007 li
388.146 268.205 li
389.122 268.757 389.996 269.325 390.768 269.894 cv
390.463 269.435 390.123 268.892 389.75 268.264 cv
386.797 263.411 li
387.612 262.596 li
392.015 270.343 li
391.243 271.116 li
385.338 267.772 li
384.837 267.492 384.54 267.314 384.438 267.246 cv
384.65 267.594 384.828 267.891 384.973 268.137 cv
388.307 274.051 li
387.484 274.875 li
cp
f
395.494 266.864 mo
387.807 262.401 li
388.63 261.578 li
393.534 264.633 li
394.06 264.955 394.561 265.286 395.045 265.617 cv
394.553 264.819 394.264 264.361 394.196 264.226 cv
391.243 258.965 li
392.211 257.997 li
396.156 260.195 li
397.132 260.747 398.006 261.315 398.778 261.884 cv
398.473 261.425 398.133 260.882 397.76 260.254 cv
394.807 255.401 li
395.622 254.586 li
400.026 262.333 li
399.253 263.105 li
393.348 259.762 li
392.847 259.482 392.55 259.304 392.448 259.236 cv
392.66 259.584 392.838 259.881 392.983 260.127 cv
396.317 266.041 li
395.494 266.864 li
cp
f
402.418 259.94 mo
396.343 253.865 li
397.556 252.652 li
403.292 255.52 li
403.835 255.791 404.226 255.995 404.48 256.131 cv
404.328 255.842 404.115 255.409 403.827 254.832 cv
401.061 249.147 li
402.138 248.07 li
408.214 254.145 li
407.442 254.917 li
402.359 249.834 li
405.677 256.682 li
404.955 257.403 li
398.031 253.992 li
403.199 259.16 li
402.418 259.94 li
cp
f
407.382 251.532 mo
408.002 250.708 li
408.485 251.158 408.901 251.387 409.223 251.404 cv
409.546 251.421 409.843 251.294 410.123 251.014 cv
410.318 250.819 410.445 250.607 410.505 250.361 cv
410.556 250.123 410.53 249.894 410.428 249.673 cv
410.327 249.47 410.106 249.181 409.75 248.825 cv
405.566 244.642 li
406.364 243.844 li
410.505 247.985 li
411.014 248.494 411.345 248.961 411.498 249.351 cv
411.659 249.75 411.676 250.157 411.557 250.564 cv
411.421 250.972 411.184 251.362 410.827 251.718 cv
410.293 252.253 409.741 252.516 409.156 252.49 cv
408.562 252.473 407.976 252.159 407.382 251.532 cv
cp
f
411.862 247.306 mo
412.584 246.466 li
413.016 246.797 413.441 246.95 413.839 246.924 cv
414.247 246.907 414.595 246.746 414.892 246.449 cv
415.248 246.093 415.418 245.651 415.401 245.125 cv
415.375 244.608 415.146 244.124 414.697 243.674 cv
414.272 243.25 413.814 243.046 413.33 243.038 cv
412.847 243.029 412.405 243.216 412.024 243.598 cv
411.786 243.835 411.625 244.115 411.54 244.421 cv
411.455 244.726 411.438 245.015 411.506 245.286 cv
410.717 245.906 li
408.18 242.198 li
411.201 239.177 li
411.913 239.89 li
409.495 242.308 li
410.793 244.268 li
410.904 243.649 411.158 243.14 411.557 242.741 cv
412.083 242.215 412.719 241.952 413.449 241.952 cv
414.187 241.96 414.841 242.24 415.418 242.817 cv
415.969 243.369 416.283 244.005 416.36 244.726 cv
416.461 245.609 416.173 246.373 415.494 247.051 cv
414.943 247.603 414.34 247.9 413.687 247.942 cv
413.025 247.993 412.422 247.781 411.862 247.306 cv
cp
f
438.36 268.83 mo
437.647 268.117 li
440.218 265.546 li
442.467 267.795 li
442.399 268.508 442.229 269.152 441.958 269.729 cv
441.686 270.306 441.338 270.807 440.897 271.248 cv
440.295 271.851 439.633 272.275 438.895 272.504 cv
438.148 272.742 437.418 272.742 436.688 272.504 cv
435.95 272.275 435.288 271.851 434.694 271.257 cv
434.1 270.663 433.668 269.992 433.413 269.229 cv
433.15 268.474 433.125 267.735 433.337 267.014 cv
433.549 266.31 433.956 265.648 434.567 265.037 cv
435 264.604 435.475 264.282 435.967 264.061 cv
436.468 263.849 436.935 263.773 437.393 263.824 cv
437.851 263.875 438.335 264.053 438.852 264.35 cv
438.326 265.283 li
437.927 265.071 437.571 264.935 437.257 264.893 cv
436.952 264.859 436.612 264.91 436.247 265.054 cv
435.891 265.207 435.56 265.419 435.254 265.724 cv
434.881 266.098 434.627 266.471 434.465 266.853 cv
434.313 267.243 434.245 267.6 434.262 267.939 cv
434.279 268.295 434.347 268.618 434.482 268.923 cv
434.703 269.449 435.034 269.933 435.475 270.374 cv
436.018 270.917 436.561 271.274 437.113 271.452 cv
437.664 271.63 438.207 271.63 438.742 271.452 cv
439.277 271.274 439.735 270.985 440.142 270.578 cv
440.481 270.239 440.753 269.831 440.948 269.365 cv
441.143 268.898 441.262 268.508 441.288 268.177 cv
440.15 267.04 li
438.36 268.83 li
cp
f
444.469 267.489 mo
438.394 261.414 li
440.677 259.131 li
441.135 258.673 441.576 258.368 441.975 258.206 cv
442.382 258.054 442.789 258.02 443.205 258.113 cv
443.613 258.215 443.969 258.402 444.24 258.673 cv
444.503 258.936 444.673 259.259 444.766 259.623 cv
444.851 259.997 444.826 260.396 444.682 260.811 cv
445.157 260.557 445.624 260.463 446.082 260.514 cv
446.54 260.582 446.947 260.786 447.295 261.134 cv
447.584 261.422 447.787 261.762 447.906 262.118 cv
448.033 262.483 448.067 262.822 448.033 263.128 cv
447.991 263.442 447.864 263.756 447.668 264.087 cv
447.465 264.426 447.176 264.782 446.786 265.173 cv
444.469 267.489 li
cp
441.754 263.162 mo
443.069 261.847 li
443.426 261.49 443.663 261.219 443.765 261.015 cv
443.909 260.752 443.96 260.497 443.918 260.251 cv
443.884 260.014 443.765 259.776 443.553 259.564 cv
443.349 259.36 443.12 259.233 442.874 259.174 cv
442.62 259.123 442.382 259.157 442.145 259.276 cv
441.907 259.411 441.568 259.683 441.135 260.116 cv
439.921 261.329 li
441.754 263.162 li
cp
444.563 265.97 mo
446.073 264.46 li
446.328 264.205 446.506 264.01 446.591 263.875 cv
446.735 263.662 446.837 263.459 446.888 263.255 cv
446.93 263.06 446.922 262.848 446.854 262.61 cv
446.794 262.381 446.667 262.169 446.464 261.965 cv
446.243 261.745 445.988 261.609 445.7 261.558 cv
445.411 261.507 445.131 261.55 444.86 261.685 cv
444.588 261.821 444.257 262.084 443.867 262.475 cv
442.467 263.875 li
444.563 265.97 li
cp
f
450.138 261.821 mo
444.062 255.746 li
445.276 254.532 li
451.012 257.4 li
451.555 257.672 451.945 257.875 452.2 258.011 cv
452.047 257.723 451.835 257.29 451.546 256.713 cv
448.78 251.028 li
449.858 249.95 li
455.933 256.026 li
455.161 256.798 li
450.078 251.715 li
453.396 258.563 li
452.675 259.284 li
445.751 255.873 li
450.918 261.04 li
450.138 261.821 li
cp
f
457.248 254.71 mo
451.173 248.635 li
453.863 245.945 li
454.406 245.402 454.872 245.054 455.263 244.885 cv
455.653 244.715 456.077 244.681 456.519 244.783 cv
456.96 244.885 457.35 245.105 457.681 245.436 cv
458.122 245.877 458.343 246.386 458.351 246.955 cv
458.368 247.532 458.122 248.151 457.622 248.805 cv
457.936 248.694 458.199 248.635 458.411 248.627 cv
458.869 248.61 459.353 248.652 459.887 248.762 cv
462.594 249.365 li
461.584 250.374 li
459.522 249.908 li
458.928 249.789 458.453 249.704 458.105 249.662 cv
457.757 249.619 457.486 249.619 457.291 249.662 cv
457.096 249.704 456.917 249.781 456.765 249.865 cv
456.654 249.942 456.485 250.078 456.281 250.281 cv
455.348 251.215 li
458.046 253.913 li
457.248 254.71 li
cp
454.652 250.519 mo
456.383 248.788 li
456.748 248.423 457.002 248.1 457.13 247.82 cv
457.257 247.54 457.299 247.26 457.24 246.98 cv
457.172 246.709 457.053 246.471 456.85 246.268 cv
456.57 245.988 456.222 245.86 455.831 245.877 cv
455.432 245.903 455.008 246.14 454.567 246.582 cv
452.641 248.508 li
454.652 250.519 li
cp
f
465.445 246.514 mo
463.994 245.063 li
461.364 247.693 li
460.676 247.006 li
459.505 240.302 li
460.116 239.692 li
464.054 243.629 li
464.877 242.806 li
465.564 243.493 li
464.741 244.316 li
466.192 245.767 li
465.445 246.514 li
cp
463.307 244.375 mo
460.566 241.635 li
461.406 246.276 li
463.307 244.375 li
cp
f
gsave
47.5125 228.96 mo
493.913 228.96 li
493.913 7.20001 li
47.5125 7.20001 li
cp
clp
1 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
47.5125 205.293 mo
493.913 205.293 li
1 /0 /CSD get_res sepcs
.2 sep
@
grestore
30.7048 208.581 mo
30.7048 209.589 li
25.0288 209.589 li
25.0168 209.337 25.0648 209.097 25.1608 208.857 cv
25.3048 208.473 25.5328 208.101 25.8448 207.717 cv
26.1568 207.345 26.6248 206.913 27.2248 206.409 cv
28.1608 205.653 28.7848 205.053 29.1208 204.597 cv
29.4448 204.153 29.6128 203.733 29.6128 203.325 cv
29.6128 202.917 29.4568 202.557 29.1568 202.269 cv
28.8568 201.981 28.4728 201.837 27.9928 201.837 cv
27.4888 201.837 27.0808 201.993 26.7808 202.293 cv
26.4688 202.605 26.3128 203.025 26.3128 203.565 cv
25.2328 203.445 li
25.3048 202.641 25.5808 202.029 26.0608 201.597 cv
26.5408 201.177 27.2008 200.961 28.0168 200.961 cv
28.8328 200.961 29.4928 201.201 29.9728 201.657 cv
30.4528 202.113 30.6928 202.677 30.6928 203.349 cv
30.6928 203.697 30.6208 204.033 30.4768 204.369 cv
30.3328 204.705 30.1048 205.053 29.7808 205.413 cv
29.4568 205.785 28.9168 206.289 28.1608 206.925 cv
27.5248 207.453 27.1168 207.813 26.9368 208.005 cv
26.7568 208.197 26.6128 208.389 26.4928 208.581 cv
30.7048 208.581 li
cp
f
31.8447 205.353 mo
31.8447 204.345 31.9407 203.529 32.1567 202.905 cv
32.3607 202.281 32.6728 201.801 33.0808 201.465 cv
33.4887 201.129 34.0167 200.961 34.6407 200.961 cv
35.0967 200.961 35.5048 201.057 35.8528 201.249 cv
36.1887 201.441 36.4768 201.705 36.7047 202.053 cv
36.9327 202.401 37.1127 202.821 37.2447 203.325 cv
37.3647 203.829 37.4368 204.513 37.4368 205.353 cv
37.4368 206.361 37.3287 207.177 37.1247 207.801 cv
36.9207 208.425 36.6088 208.893 36.2008 209.229 cv
35.7927 209.565 35.2647 209.721 34.6407 209.721 cv
33.8007 209.721 33.1527 209.433 32.6848 208.845 cv
32.1207 208.137 31.8447 206.973 31.8447 205.353 cv
cp
32.9247 205.353 mo
32.9247 206.769 33.0808 207.705 33.4167 208.173 cv
33.7408 208.641 34.1487 208.869 34.6287 208.869 cv
35.1088 208.869 35.5167 208.641 35.8528 208.173 cv
36.1887 207.705 36.3567 206.769 36.3567 205.353 cv
36.3567 203.937 36.1887 203.001 35.8528 202.533 cv
35.5167 202.077 35.1088 201.837 34.6287 201.837 cv
34.1368 201.837 33.7527 202.041 33.4647 202.449 cv
33.1047 202.977 32.9247 203.949 32.9247 205.353 cv
cp
f
gsave
47.5125 228.96 mo
493.913 228.96 li
493.913 7.20001 li
47.5125 7.20001 li
cp
clp
1 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
47.5125 156.976 mo
493.913 156.976 li
1 /0 /CSD get_res sepcs
.2 sep
@
grestore
28.5448 161.273 mo
28.5448 159.221 li
24.8248 159.221 li
24.8248 158.249 li
28.7368 152.681 li
29.6008 152.681 li
29.6008 158.249 li
30.7648 158.249 li
30.7648 159.221 li
29.6008 159.221 li
29.6008 161.273 li
28.5448 161.273 li
cp
28.5448 158.249 mo
28.5448 154.373 li
25.8568 158.249 li
28.5448 158.249 li
cp
f
31.8447 157.037 mo
31.8447 156.029 31.9407 155.213 32.1567 154.589 cv
32.3607 153.965 32.6728 153.485 33.0808 153.149 cv
33.4887 152.813 34.0167 152.645 34.6407 152.645 cv
35.0967 152.645 35.5048 152.741 35.8528 152.933 cv
36.1887 153.125 36.4768 153.389 36.7047 153.737 cv
36.9327 154.085 37.1127 154.505 37.2447 155.009 cv
37.3647 155.513 37.4368 156.197 37.4368 157.037 cv
37.4368 158.045 37.3287 158.861 37.1247 159.485 cv
36.9207 160.109 36.6088 160.577 36.2008 160.913 cv
35.7927 161.249 35.2647 161.405 34.6407 161.405 cv
33.8007 161.405 33.1527 161.117 32.6848 160.529 cv
32.1207 159.821 31.8447 158.657 31.8447 157.037 cv
cp
32.9247 157.037 mo
32.9247 158.453 33.0808 159.389 33.4167 159.857 cv
33.7408 160.325 34.1487 160.553 34.6287 160.553 cv
35.1088 160.553 35.5167 160.325 35.8528 159.857 cv
36.1887 159.389 36.3567 158.453 36.3567 157.037 cv
36.3567 155.621 36.1887 154.685 35.8528 154.217 cv
35.5167 153.761 35.1088 153.521 34.6287 153.521 cv
34.1368 153.521 33.7527 153.725 33.4647 154.133 cv
33.1047 154.661 32.9247 155.633 32.9247 157.037 cv
cp
f
gsave
47.5125 228.96 mo
493.913 228.96 li
493.913 7.20001 li
47.5125 7.20001 li
cp
clp
1 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
47.5125 108.66 mo
493.913 108.66 li
1 /0 /CSD get_res sepcs
.2 sep
@
grestore
30.6448 106.465 mo
29.5888 106.549 li
29.4928 106.141 29.3608 105.841 29.1928 105.649 cv
28.9048 105.361 28.5448 105.205 28.1368 105.205 cv
27.8008 105.205 27.5008 105.301 27.2488 105.481 cv
26.9128 105.721 26.6608 106.081 26.4688 106.537 cv
26.2768 107.005 26.1688 107.665 26.1688 108.529 cv
26.4208 108.145 26.7328 107.869 27.1048 107.677 cv
27.4648 107.485 27.8488 107.389 28.2568 107.389 cv
28.9528 107.389 29.5528 107.653 30.0448 108.169 cv
30.5368 108.685 30.7888 109.357 30.7888 110.173 cv
30.7888 110.713 30.6688 111.217 30.4408 111.673 cv
30.2008 112.141 29.8888 112.489 29.4808 112.729 cv
29.0728 112.969 28.6168 113.089 28.1008 113.089 cv
27.2128 113.089 26.5048 112.777 25.9528 112.129 cv
25.4008 111.493 25.1248 110.425 25.1248 108.937 cv
25.1248 107.281 25.4248 106.081 26.0368 105.313 cv
26.5648 104.665 27.2848 104.329 28.1968 104.329 cv
28.8688 104.329 29.4328 104.521 29.8648 104.905 cv
30.2968 105.289 30.5488 105.805 30.6448 106.465 cv
cp
26.3368 110.173 mo
26.3368 110.533 26.4088 110.881 26.5648 111.217 cv
26.7088 111.553 26.9248 111.805 27.2128 111.973 cv
27.4888 112.153 27.7768 112.237 28.0888 112.237 cv
28.5208 112.237 28.9048 112.057 29.2288 111.697 cv
29.5408 111.337 29.7088 110.857 29.7088 110.233 cv
29.7088 109.645 29.5408 109.177 29.2288 108.829 cv
28.9168 108.493 28.5208 108.313 28.0408 108.313 cv
27.5608 108.313 27.1648 108.493 26.8288 108.829 cv
26.4928 109.177 26.3368 109.621 26.3368 110.173 cv
cp
f
31.8447 108.721 mo
31.8447 107.713 31.9407 106.897 32.1567 106.273 cv
32.3607 105.649 32.6728 105.169 33.0808 104.833 cv
33.4887 104.497 34.0167 104.329 34.6407 104.329 cv
35.0967 104.329 35.5048 104.425 35.8528 104.617 cv
36.1887 104.809 36.4768 105.073 36.7047 105.421 cv
36.9327 105.769 37.1127 106.189 37.2447 106.693 cv
37.3647 107.197 37.4368 107.881 37.4368 108.721 cv
37.4368 109.729 37.3287 110.545 37.1247 111.169 cv
36.9207 111.793 36.6088 112.261 36.2008 112.597 cv
35.7927 112.933 35.2647 113.089 34.6407 113.089 cv
33.8007 113.089 33.1527 112.801 32.6848 112.213 cv
32.1207 111.505 31.8447 110.341 31.8447 108.721 cv
cp
32.9247 108.721 mo
32.9247 110.137 33.0808 111.073 33.4167 111.541 cv
33.7408 112.009 34.1487 112.237 34.6287 112.237 cv
35.1088 112.237 35.5167 112.009 35.8528 111.541 cv
36.1887 111.073 36.3567 110.137 36.3567 108.721 cv
36.3567 107.305 36.1887 106.369 35.8528 105.901 cv
35.5167 105.445 35.1088 105.205 34.6287 105.205 cv
34.1368 105.205 33.7527 105.409 33.4647 105.817 cv
33.1047 106.345 32.9247 107.317 32.9247 108.721 cv
cp
f
gsave
47.5125 228.96 mo
493.913 228.96 li
493.913 7.20001 li
47.5125 7.20001 li
cp
clp
1 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
47.5125 60.3432 mo
493.913 60.3432 li
1 /0 /CSD get_res sepcs
.2 sep
@
grestore
26.7928 59.9841 mo
26.3488 59.8281 26.0248 59.6001 25.8088 59.3001 cv
25.5928 59.0121 25.4968 58.6521 25.4968 58.2321 cv
25.4968 57.6081 25.7128 57.0921 26.1688 56.6601 cv
26.6248 56.2281 27.2248 56.0121 27.9688 56.0121 cv
28.7128 56.0121 29.3248 56.2401 29.7808 56.6721 cv
30.2368 57.1041 30.4648 57.6321 30.4648 58.2561 cv
30.4648 58.6641 30.3568 59.0121 30.1528 59.3001 cv
29.9368 59.6001 29.6248 59.8281 29.1928 59.9841 cv
29.7208 60.1521 30.1168 60.4281 30.3928 60.8121 cv
30.6688 61.1961 30.8128 61.6521 30.8128 62.1801 cv
30.8128 62.9241 30.5488 63.5361 30.0328 64.0281 cv
29.5048 64.5321 28.8208 64.7721 27.9808 64.7721 cv
27.1288 64.7721 26.4448 64.5321 25.9288 64.0281 cv
25.4128 63.5361 25.1608 62.9121 25.1608 62.1561 cv
25.1608 61.6041 25.2928 61.1361 25.5808 60.7521 cv
25.8568 60.3801 26.2648 60.1281 26.7928 59.9841 cv
cp
26.5768 58.1961 mo
26.5768 58.6041 26.7088 58.9401 26.9728 59.1921 cv
27.2368 59.4561 27.5728 59.5761 27.9928 59.5761 cv
28.4008 59.5761 28.7248 59.4561 28.9888 59.1921 cv
29.2528 58.9401 29.3848 58.6281 29.3848 58.2561 cv
29.3848 57.8721 29.2408 57.5481 28.9768 57.2841 cv
28.7128 57.0201 28.3768 56.8881 27.9808 56.8881 cv
27.5728 56.8881 27.2368 57.0201 26.9728 57.2721 cv
26.7088 57.5361 26.5768 57.8361 26.5768 58.1961 cv
cp
26.2408 62.1561 mo
26.2408 62.4681 26.3128 62.7561 26.4568 63.0321 cv
26.6008 63.3201 26.8048 63.5361 27.0928 63.6921 cv
27.3688 63.8481 27.6688 63.9201 27.9928 63.9201 cv
28.4968 63.9201 28.9048 63.7641 29.2408 63.4401 cv
29.5648 63.1161 29.7328 62.6961 29.7328 62.1921 cv
29.7328 61.6881 29.5648 61.2801 29.2288 60.9441 cv
28.8928 60.6081 28.4608 60.4401 27.9568 60.4401 cv
27.4528 60.4401 27.0448 60.6081 26.7208 60.9321 cv
26.3968 61.2681 26.2408 61.6761 26.2408 62.1561 cv
cp
f
31.8447 60.4041 mo
31.8447 59.3961 31.9407 58.5801 32.1567 57.9561 cv
32.3607 57.3321 32.6728 56.8521 33.0808 56.5161 cv
33.4887 56.1801 34.0167 56.0121 34.6407 56.0121 cv
35.0967 56.0121 35.5048 56.1081 35.8528 56.3001 cv
36.1887 56.4921 36.4768 56.7561 36.7047 57.1041 cv
36.9327 57.4521 37.1127 57.8721 37.2447 58.3761 cv
37.3647 58.8801 37.4368 59.5641 37.4368 60.4041 cv
37.4368 61.4121 37.3287 62.2281 37.1247 62.8521 cv
36.9207 63.4761 36.6088 63.9441 36.2008 64.2801 cv
35.7927 64.6161 35.2647 64.7721 34.6407 64.7721 cv
33.8007 64.7721 33.1527 64.4841 32.6848 63.8961 cv
32.1207 63.1881 31.8447 62.0241 31.8447 60.4041 cv
cp
32.9247 60.4041 mo
32.9247 61.8201 33.0808 62.7561 33.4167 63.2241 cv
33.7408 63.6921 34.1487 63.9201 34.6287 63.9201 cv
35.1088 63.9201 35.5167 63.6921 35.8528 63.2241 cv
36.1887 62.7561 36.3567 61.8201 36.3567 60.4041 cv
36.3567 58.9881 36.1887 58.0521 35.8528 57.5841 cv
35.5167 57.1281 35.1088 56.8881 34.6287 56.8881 cv
34.1368 56.8881 33.7527 57.0921 33.4647 57.5001 cv
33.1047 58.0281 32.9247 59.0001 32.9247 60.4041 cv
cp
f
gsave
47.5125 228.96 mo
493.913 228.96 li
493.913 7.20001 li
47.5125 7.20001 li
cp
clp
1 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
47.5125 12.0268 mo
493.913 12.0268 li
1 /0 /CSD get_res sepcs
.2 sep
@
grestore
22.4729 16.3237 mo
21.4169 16.3237 li
21.4169 9.6037 li
21.1529 9.8437 20.8169 10.0957 20.4089 10.3357 cv
20.0009 10.5757 19.6289 10.7557 19.3049 10.8757 cv
19.3049 9.8557 li
19.8929 9.5797 20.4089 9.2437 20.8529 8.8477 cv
21.2849 8.4637 21.5969 8.0797 21.7889 7.6957 cv
22.4729 7.6957 li
22.4729 16.3237 li
cp
f
25.1729 12.0877 mo
25.1729 11.0797 25.2689 10.2637 25.4849 9.6397 cv
25.6889 9.0157 26.0009 8.5357 26.4089 8.1997 cv
26.8169 7.8637 27.3449 7.6957 27.9689 7.6957 cv
28.4249 7.6957 28.8329 7.7917 29.1809 7.9837 cv
29.5169 8.1757 29.8049 8.4397 30.0329 8.7877 cv
30.2609 9.1357 30.4409 9.5557 30.5729 10.0597 cv
30.6929 10.5637 30.7649 11.2477 30.7649 12.0877 cv
30.7649 13.0957 30.6569 13.9117 30.4529 14.5357 cv
30.2489 15.1597 29.9369 15.6277 29.5289 15.9637 cv
29.1209 16.2997 28.5929 16.4557 27.9689 16.4557 cv
27.1289 16.4557 26.4809 16.1677 26.0129 15.5797 cv
25.4489 14.8717 25.1729 13.7077 25.1729 12.0877 cv
cp
26.2529 12.0877 mo
26.2529 13.5037 26.4089 14.4397 26.7449 14.9077 cv
27.0689 15.3757 27.4769 15.6037 27.9569 15.6037 cv
28.4369 15.6037 28.8449 15.3757 29.1809 14.9077 cv
29.5169 14.4397 29.6849 13.5037 29.6849 12.0877 cv
29.6849 10.6717 29.5169 9.7357 29.1809 9.2677 cv
28.8449 8.8117 28.4369 8.5717 27.9569 8.5717 cv
27.4649 8.5717 27.0809 8.7757 26.7929 9.1837 cv
26.4329 9.7117 26.2529 10.6837 26.2529 12.0877 cv
cp
f
31.8449 12.0877 mo
31.8449 11.0797 31.9409 10.2637 32.1569 9.6397 cv
32.3609 9.0157 32.6729 8.5357 33.0809 8.1997 cv
33.4889 7.8637 34.0169 7.6957 34.6409 7.6957 cv
35.0969 7.6957 35.5049 7.7917 35.8529 7.9837 cv
36.1889 8.1757 36.4769 8.4397 36.7049 8.7877 cv
36.9329 9.1357 37.1129 9.5557 37.2449 10.0597 cv
37.3649 10.5637 37.4369 11.2477 37.4369 12.0877 cv
37.4369 13.0957 37.3289 13.9117 37.1249 14.5357 cv
36.9209 15.1597 36.6089 15.6277 36.2009 15.9637 cv
35.7929 16.2997 35.2649 16.4557 34.6409 16.4557 cv
33.8009 16.4557 33.1529 16.1677 32.6849 15.5797 cv
32.1209 14.8717 31.8449 13.7077 31.8449 12.0877 cv
cp
32.9249 12.0877 mo
32.9249 13.5037 33.0809 14.4397 33.4169 14.9077 cv
33.7409 15.3757 34.1489 15.6037 34.6289 15.6037 cv
35.1089 15.6037 35.5169 15.3757 35.8529 14.9077 cv
36.1889 14.4397 36.3569 13.5037 36.3569 12.0877 cv
36.3569 10.6717 36.1889 9.7357 35.8529 9.2677 cv
35.5169 8.8117 35.1089 8.5717 34.6289 8.5717 cv
34.1369 8.5717 33.7529 8.7757 33.4649 9.1837 cv
33.1049 9.7117 32.9249 10.6837 32.9249 12.0877 cv
cp
f
16.4031 147.558 mo
6.37913 147.558 li
6.37913 146.228 li
15.2271 146.228 li
15.2271 141.286 li
16.4031 141.286 li
16.4031 147.558 li
cp
f
16.4031 139.716 mo
6.37913 139.716 li
6.37913 136.258 li
6.37913 135.488 6.43513 134.9 6.51913 134.48 cv
6.65913 133.906 6.91113 133.416 7.24713 133.01 cv
7.69513 132.478 8.26913 132.086 8.95513 131.82 cv
9.65513 131.568 10.4391 131.428 11.3351 131.428 cv
12.1051 131.428 12.7771 131.526 13.3651 131.694 cv
13.9531 131.876 14.4431 132.1 14.8211 132.38 cv
15.2131 132.66 15.5071 132.968 15.7311 133.304 cv
15.9551 133.64 16.1231 134.032 16.2351 134.494 cv
16.3471 134.97 16.4031 135.502 16.4031 136.104 cv
16.4031 139.716 li
cp
15.2271 138.386 mo
15.2271 136.244 li
15.2271 135.586 15.1711 135.068 15.0451 134.69 cv
14.9191 134.326 14.7371 134.018 14.5131 133.794 cv
14.2051 133.486 13.7851 133.234 13.2531 133.066 cv
12.7211 132.898 12.0771 132.8 11.3211 132.8 cv
10.2711 132.8 9.45913 132.982 8.89913 133.318 cv
8.33913 133.654 7.96113 134.074 7.76513 134.564 cv
7.63913 134.928 7.56913 135.502 7.56913 136.286 cv
7.56913 138.386 li
15.2271 138.386 li
cp
f
16.4031 129.606 mo
6.37913 129.606 li
6.37913 126.148 li
6.37913 125.378 6.43513 124.79 6.51913 124.37 cv
6.65913 123.796 6.91113 123.306 7.24713 122.9 cv
7.69513 122.368 8.26913 121.976 8.95513 121.71 cv
9.65513 121.458 10.4391 121.318 11.3351 121.318 cv
12.1051 121.318 12.7771 121.416 13.3651 121.584 cv
13.9531 121.766 14.4431 121.99 14.8211 122.27 cv
15.2131 122.55 15.5071 122.858 15.7311 123.194 cv
15.9551 123.53 16.1231 123.922 16.2351 124.384 cv
16.3471 124.86 16.4031 125.392 16.4031 125.994 cv
16.4031 129.606 li
cp
15.2271 128.276 mo
15.2271 126.134 li
15.2271 125.476 15.1711 124.958 15.0451 124.58 cv
14.9191 124.216 14.7371 123.908 14.5131 123.684 cv
14.2051 123.376 13.7851 123.124 13.2531 122.956 cv
12.7211 122.788 12.0771 122.69 11.3211 122.69 cv
10.2711 122.69 9.45913 122.872 8.89913 123.208 cv
8.33913 123.544 7.96113 123.964 7.76513 124.454 cv
7.63913 124.818 7.56913 125.392 7.56913 126.176 cv
7.56913 128.276 li
15.2271 128.276 li
cp
f
16.4031 116.947 mo
7.56913 116.947 li
7.56913 120.251 li
6.37913 120.251 li
6.37913 112.299 li
7.56913 112.299 li
7.56913 115.617 li
16.4031 115.617 li
16.4031 116.947 li
cp
f
13.3931 111.573 mo
12.1611 111.573 li
12.1611 107.793 li
13.3931 107.793 li
13.3931 111.573 li
cp
f
12.8891 99.1273 mo
13.2251 97.7973 li
14.3171 98.0773 15.1571 98.5813 15.7171 99.3093 cv
16.2771 100.037 16.5571 100.919 16.5571 101.955 cv
16.5571 103.033 16.3471 103.915 15.9131 104.587 cv
15.4791 105.273 14.8491 105.791 14.0091 106.141 cv
13.1691 106.491 12.2731 106.659 11.3211 106.659 cv
10.2851 106.659 9.37513 106.463 8.59113 106.071 cv
7.80713 105.679 7.21913 105.105 6.81313 104.363 cv
6.42113 103.635 6.21113 102.823 6.21113 101.927 cv
6.21113 100.933 6.47713 100.093 6.98113 99.4073 cv
7.48513 98.7213 8.19913 98.2453 9.12313 97.9793 cv
9.43113 99.2813 li
8.70313 99.5193 8.18513 99.8553 7.84913 100.289 cv
7.51313 100.737 7.34513 101.283 7.34513 101.955 cv
7.34513 102.739 7.54113 103.383 7.90513 103.901 cv
8.26913 104.419 8.77313 104.783 9.38913 104.993 cv
10.0051 105.203 10.6491 105.301 11.3071 105.301 cv
12.1751 105.301 12.9171 105.175 13.5471 104.923 cv
14.1911 104.671 14.6671 104.293 14.9751 103.761 cv
15.2831 103.243 15.4371 102.683 15.4371 102.067 cv
15.4371 101.325 15.2271 100.695 14.7931 100.177 cv
14.3731 99.6733 13.7291 99.3233 12.8891 99.1273 cv
cp
f
12.8471 91.523 mo
11.2651 91.509 li
10.2011 91.509 9.65513 91.915 9.64113 92.7269 cv
9.64113 93.343 9.89313 93.8329 10.3971 94.1969 cv
11.0271 94.673 11.7551 94.995 12.5811 95.149 cv
13.5891 95.345 14.3311 95.331 14.8071 95.079 cv
15.2971 94.827 15.5351 94.4209 15.5351 93.8609 cv
15.5351 93.259 15.0591 92.6989 14.0791 92.1809 cv
12.8471 91.523 li
cp
8.57713 92.5169 mo
8.54913 91.0889 9.27713 90.3889 10.7471 90.4029 cv
10.7471 90.4029 10.0891 90.053 8.74513 89.3389 cv
8.74513 88.219 li
12.9031 90.4309 li
14.3871 90.4449 li
14.6111 90.4449 14.8211 90.3889 15.0031 90.263 cv
15.2271 90.123 15.3391 89.983 15.3391 89.829 cv
15.3391 89.2269 li
16.4031 89.4229 li
16.4031 90.193 li
16.4031 90.6269 16.2211 90.9909 15.8291 91.299 cv
15.6331 91.439 15.3391 91.523 14.9471 91.523 cv
15.4371 91.831 15.8851 92.2229 16.2911 92.7269 cv
16.4731 92.979 16.5571 93.427 16.5571 94.0709 cv
16.5431 95.135 16.2071 95.8629 15.5351 96.2549 cv
14.8351 96.647 13.8411 96.731 12.5811 96.479 cv
11.2371 96.2269 10.2431 95.7369 9.62713 95.037 cv
8.94113 94.2669 8.59113 93.427 8.57713 92.5169 cv
cp
f
gsave
47.5125 228.96 mo
493.913 228.96 li
493.913 7.20001 li
47.5125 7.20001 li
cp
clp
52.4725 147.778 mo
92.1525 147.778 li
92.1525 39.0369 li
52.4725 39.0369 li
52.4725 147.778 li
cp
/1 
[/DeviceCMYK] /CSA add_res
.719814 .521752 .154269 .00848402 cmyk
f
1.5 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
52.4725 147.778 mo
92.1525 147.778 li
92.1525 39.0369 li
52.4725 39.0369 li
52.4725 147.778 li
cp
1 /0 /CSD get_res sepcs
.713725 sep
@
grestore
102.073 179.133 mo
141.753 179.133 li
141.753 63.2397 li
102.073 63.2397 li
102.073 179.133 li
cp
.185275 .508537 .65127 .0171817 cmyk
f
1.5 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
102.073 179.133 mo
141.753 179.133 li
141.753 63.2397 li
102.073 63.2397 li
102.073 179.133 li
cp
1 /0 /CSD get_res sepcs
.713725 sep
@
151.673 159.762 mo
191.353 159.762 li
191.353 55.7226 li
151.673 55.7226 li
151.673 159.762 li
cp
.66775 .185733 .711757 .0232242 cmyk
f
151.673 159.762 mo
191.353 159.762 li
191.353 55.7226 li
151.673 55.7226 li
151.673 159.762 li
cp
1 /0 /CSD get_res sepcs
.713725 sep
@
201.273 176.805 mo
240.953 176.805 li
240.953 54.4581 li
201.273 54.4581 li
201.273 176.805 li
cp
.243503 .734279 .551598 .0673228 cmyk
f
201.273 176.805 mo
240.953 176.805 li
240.953 54.4581 li
201.273 54.4581 li
201.273 176.805 li
cp
1 /0 /CSD get_res sepcs
.713725 sep
@
250.873 193.452 mo
290.553 193.452 li
290.553 108.092 li
250.873 108.092 li
250.873 193.452 li
cp
.526665 .539269 .101045 0 cmyk
f
250.873 193.452 mo
290.553 193.452 li
290.553 108.092 li
250.873 108.092 li
250.873 193.452 li
cp
1 /0 /CSD get_res sepcs
.713725 sep
@
300.473 165.433 mo
340.153 165.433 li
340.153 59.1979 li
300.473 59.1979 li
300.473 165.433 li
cp
.429511 .473579 .580407 .124544 cmyk
f
300.473 165.433 mo
340.153 165.433 li
340.153 59.1979 li
300.473 59.1979 li
300.473 165.433 li
cp
1 /0 /CSD get_res sepcs
.713725 sep
@
350.073 201.994 mo
389.753 201.994 li
389.753 173.857 li
350.073 173.857 li
350.073 201.994 li
cp
.159854 .476875 .0191348 0 cmyk
f
350.073 201.994 mo
389.753 201.994 li
389.753 173.857 li
350.073 173.857 li
350.073 201.994 li
cp
1 /0 /CSD get_res sepcs
.713725 sep
@
399.673 205.954 mo
439.353 205.954 li
439.353 191.352 li
399.673 191.352 li
399.673 205.954 li
cp
1 /0 /CSD get_res sepcs
.45098 sep
f
399.673 205.954 mo
439.353 205.954 li
439.353 191.352 li
399.673 191.352 li
399.673 205.954 li
cp
1 /0 /CSD get_res sepcs
.713725 sep
@
gsave
47.5125 228.96 mo
493.913 228.96 li
493.913 7.20001 li
47.5125 7.20001 li
cp
clp
449.273 204.356 mo
488.953 204.356 li
488.953 179.066 li
449.273 179.066 li
449.273 204.356 li
cp
.261265 .243992 .579156 .00234989 cmyk
f
449.273 204.356 mo
488.953 204.356 li
488.953 179.066 li
449.273 179.066 li
449.273 204.356 li
cp
1 /0 /CSD get_res sepcs
.713725 sep
@
grestore
1 lc
1 lj
72.3125 147.778 mo
72.3125 190.26 li
@
72.3125 39.0369 mo
72.3125 17.28 li
@
62.3925 190.26 mo
82.2325 190.26 li
@
62.3925 17.28 mo
82.2325 17.28 li
@
121.913 179.133 mo
121.913 206.843 li
@
121.913 63.2397 mo
121.913 32.1508 li
@
111.993 206.843 mo
131.833 206.843 li
@
111.993 32.1508 mo
131.833 32.1508 li
@
171.513 159.762 mo
171.513 209.381 li
@
171.513 55.7226 mo
171.513 22.8269 li
@
161.593 209.381 mo
181.433 209.381 li
@
161.593 22.8269 mo
181.433 22.8269 li
@
221.113 176.805 mo
221.113 204.128 li
@
221.113 54.4581 mo
221.113 24.0668 li
@
211.193 204.128 mo
231.033 204.128 li
@
211.193 24.0668 mo
231.033 24.0668 li
@
270.713 193.452 mo
270.713 213.262 li
@
270.713 108.092 mo
270.713 50.3654 li
@
260.793 213.262 mo
280.633 213.262 li
@
260.793 50.3654 mo
280.633 50.3654 li
@
320.313 165.433 mo
320.313 209.879 li
@
320.313 59.1979 mo
320.313 27.7212 li
@
310.393 209.879 mo
330.233 209.879 li
@
310.393 27.7212 mo
330.233 27.7212 li
@
369.913 201.994 mo
369.913 216.072 li
@
369.913 173.857 mo
369.913 132.636 li
@
359.993 216.072 mo
379.833 216.072 li
@
359.993 132.636 mo
379.833 132.636 li
@
419.513 205.954 mo
419.513 218.88 li
@
419.513 191.352 mo
419.513 174.234 li
@
409.593 218.88 mo
429.433 218.88 li
@
409.593 174.234 mo
429.433 174.234 li
@
469.113 204.356 mo
469.113 218.784 li
@
469.113 179.066 mo
469.113 150.596 li
@
459.193 218.784 mo
479.033 218.784 li
@
459.193 150.596 mo
479.033 150.596 li
@
52.4725 63.4955 mo
92.1525 63.4955 li
@
102.073 106.15 mo
141.753 106.15 li
@
151.673 76.355 mo
191.353 76.355 li
@
201.273 133.434 mo
240.953 133.434 li
@
250.873 171.308 mo
290.553 171.308 li
@
300.473 89.64 mo
340.153 89.64 li
@
350.073 192.057 mo
389.753 192.057 li
@
399.673 198.94 mo
439.353 198.94 li
@
449.273 193.887 mo
488.953 193.887 li
@
1.25 lw
2 lc
0 lj
47.5125 228.96 mo
47.5125 7.20001 li
1 /0 /CSD get_res sepcs
.2 sep
@
493.913 228.96 mo
493.913 7.20001 li
@
47.5125 228.96 mo
493.913 228.96 li
@
47.5125 7.20001 mo
493.913 7.20001 li
@
69.7941 63.0385 mo
70.3245 63.0385 70.8333 62.8278 71.2083 62.4527 cv
71.5834 62.0777 71.7941 61.5689 71.7941 61.0385 cv
71.7941 60.5081 71.5834 59.9994 71.2083 59.6243 cv
70.8333 59.2493 70.3245 59.0385 69.7941 59.0385 cv
69.2637 59.0385 68.7549 59.2493 68.3799 59.6243 cv
68.0048 59.9994 67.7941 60.5081 67.7941 61.0385 cv
67.7941 61.5689 68.0048 62.0777 68.3799 62.4527 cv
68.7549 62.8278 69.2637 63.0385 69.7941 63.0385 cv
cp
1 /0 /CSD get_res sepcs
.498039 sep
f
75.956 42.5844 mo
76.4864 42.5844 76.9952 42.3737 77.3702 41.9987 cv
77.7453 41.6236 77.956 41.1149 77.956 40.5844 cv
77.956 40.054 77.7453 39.5453 77.3702 39.1702 cv
76.9952 38.7952 76.4864 38.5844 75.956 38.5844 cv
75.4256 38.5844 74.9169 38.7952 74.5418 39.1702 cv
74.1668 39.5453 73.956 40.054 73.956 40.5844 cv
73.956 41.1149 74.1668 41.6236 74.5418 41.9987 cv
74.9169 42.3737 75.4256 42.5844 75.956 42.5844 cv
cp
f
72.5297 40.5211 mo
73.0601 40.5211 73.5689 40.3104 73.9439 39.9353 cv
74.319 39.5603 74.5297 39.0515 74.5297 38.5211 cv
74.5297 37.9907 74.319 37.4819 73.9439 37.1069 cv
73.5689 36.7318 73.0601 36.5211 72.5297 36.5211 cv
71.9993 36.5211 71.4906 36.7318 71.1155 37.1069 cv
70.7405 37.4819 70.5297 37.9907 70.5297 38.5211 cv
70.5297 39.0515 70.7405 39.5603 71.1155 39.9353 cv
71.4906 40.3104 71.9993 40.5211 72.5297 40.5211 cv
cp
f
71.358 137.407 mo
71.8884 137.407 72.3971 137.196 72.7722 136.821 cv
73.1472 136.446 73.358 135.937 73.358 135.407 cv
73.358 134.877 73.1472 134.368 72.7722 133.993 cv
72.3971 133.618 71.8884 133.407 71.358 133.407 cv
70.8276 133.407 70.3188 133.618 69.9438 133.993 cv
69.5687 134.368 69.358 134.877 69.358 135.407 cv
69.358 135.937 69.5687 136.446 69.9438 136.821 cv
70.3188 137.196 70.8276 137.407 71.358 137.407 cv
cp
f
76.8979 30.5499 mo
77.4283 30.5499 77.9371 30.3392 78.3121 29.9641 cv
78.6872 29.5891 78.8979 29.0803 78.8979 28.5499 cv
78.8979 28.0195 78.6872 27.5107 78.3121 27.1357 cv
77.9371 26.7606 77.4283 26.5499 76.8979 26.5499 cv
76.3675 26.5499 75.8588 26.7606 75.4837 27.1357 cv
75.1087 27.5107 74.8979 28.0195 74.8979 28.5499 cv
74.8979 29.0803 75.1087 29.5891 75.4837 29.9641 cv
75.8588 30.3392 76.3675 30.5499 76.8979 30.5499 cv
cp
f
69.9095 142.065 mo
70.4399 142.065 70.9486 141.855 71.3237 141.48 cv
71.6987 141.105 71.9095 140.596 71.9095 140.065 cv
71.9095 139.535 71.6987 139.026 71.3237 138.651 cv
70.9486 138.276 70.4399 138.065 69.9095 138.065 cv
69.3791 138.065 68.8703 138.276 68.4953 138.651 cv
68.1202 139.026 67.9095 139.535 67.9095 140.065 cv
67.9095 140.596 68.1202 141.105 68.4953 141.48 cv
68.8703 141.855 69.3791 142.065 69.9095 142.065 cv
cp
f
76.2117 28.2092 mo
76.7421 28.2092 77.2509 27.9985 77.626 27.6234 cv
78.001 27.2484 78.2117 26.7396 78.2117 26.2092 cv
78.2117 25.6788 78.001 25.17 77.626 24.795 cv
77.2509 24.4199 76.7421 24.2092 76.2117 24.2092 cv
75.6813 24.2092 75.1726 24.4199 74.7975 24.795 cv
74.4225 25.17 74.2117 25.6788 74.2117 26.2092 cv
74.2117 26.7396 74.4225 27.2484 74.7975 27.6234 cv
75.1726 27.9985 75.6813 28.2092 76.2117 28.2092 cv
cp
f
75.1651 163.064 mo
75.6955 163.064 76.2043 162.853 76.5793 162.478 cv
76.9544 162.103 77.1651 161.595 77.1651 161.064 cv
77.1651 160.534 76.9544 160.025 76.5793 159.65 cv
76.2043 159.275 75.6955 159.064 75.1651 159.064 cv
74.6347 159.064 74.126 159.275 73.7509 159.65 cv
73.3758 160.025 73.1651 160.534 73.1651 161.064 cv
73.1651 161.595 73.3758 162.103 73.7509 162.478 cv
74.126 162.853 74.6347 163.064 75.1651 163.064 cv
cp
f
70.1127 70.2628 mo
70.6431 70.2628 71.1519 70.0521 71.5269 69.677 cv
71.902 69.302 72.1127 68.7932 72.1127 68.2628 cv
72.1127 67.7324 71.902 67.2236 71.5269 66.8486 cv
71.1519 66.4735 70.6431 66.2628 70.1127 66.2628 cv
69.5823 66.2628 69.0736 66.4735 68.6985 66.8486 cv
68.3235 67.2236 68.1127 67.7324 68.1127 68.2628 cv
68.1127 68.7932 68.3235 69.302 68.6985 69.677 cv
69.0736 70.0521 69.5823 70.2628 70.1127 70.2628 cv
cp
f
72.2298 152.349 mo
72.7602 152.349 73.269 152.138 73.644 151.763 cv
74.0191 151.388 74.2298 150.879 74.2298 150.349 cv
74.2298 149.818 74.0191 149.31 73.644 148.935 cv
73.269 148.56 72.7602 148.349 72.2298 148.349 cv
71.6994 148.349 71.1907 148.56 70.8156 148.935 cv
70.4406 149.31 70.2298 149.818 70.2298 150.349 cv
70.2298 150.879 70.4406 151.388 70.8156 151.763 cv
71.1907 152.138 71.6994 152.349 72.2298 152.349 cv
cp
f
75.7803 30.671 mo
76.3107 30.671 76.8195 30.4603 77.1946 30.0852 cv
77.5696 29.7102 77.7803 29.2014 77.7803 28.671 cv
77.7803 28.1406 77.5696 27.6319 77.1946 27.2568 cv
76.8195 26.8818 76.3107 26.671 75.7803 26.671 cv
75.2499 26.671 74.7412 26.8818 74.3661 27.2568 cv
73.9911 27.6319 73.7803 28.1406 73.7803 28.671 cv
73.7803 29.2014 73.9911 29.7102 74.3661 30.0852 cv
74.7412 30.4603 75.2499 30.671 75.7803 30.671 cv
cp
f
75.6356 165.631 mo
76.166 165.631 76.6747 165.42 77.0498 165.045 cv
77.4248 164.67 77.6356 164.161 77.6356 163.631 cv
77.6356 163.1 77.4248 162.591 77.0498 162.216 cv
76.6747 161.841 76.166 161.631 75.6356 161.631 cv
75.1052 161.631 74.5964 161.841 74.2214 162.216 cv
73.8463 162.591 73.6356 163.1 73.6356 163.631 cv
73.6356 164.161 73.8463 164.67 74.2214 165.045 cv
74.5964 165.42 75.1052 165.631 75.6356 165.631 cv
cp
f
67.4458 84.6617 mo
67.9763 84.6617 68.485 84.4509 68.8601 84.0759 cv
69.2351 83.7008 69.4458 83.1921 69.4458 82.6617 cv
69.4458 82.1313 69.2351 81.6225 68.8601 81.2474 cv
68.485 80.8724 67.9763 80.6617 67.4458 80.6617 cv
66.9154 80.6617 66.4067 80.8724 66.0316 81.2474 cv
65.6566 81.6225 65.4458 82.1313 65.4458 82.6617 cv
65.4458 83.1921 65.6566 83.7008 66.0316 84.0759 cv
66.4067 84.4509 66.9154 84.6617 67.4458 84.6617 cv
cp
f
75.0755 179.234 mo
75.6059 179.234 76.1146 179.024 76.4897 178.649 cv
76.8647 178.274 77.0755 177.765 77.0755 177.234 cv
77.0755 176.704 76.8647 176.195 76.4897 175.82 cv
76.1146 175.445 75.6059 175.234 75.0755 175.234 cv
74.5451 175.234 74.0363 175.445 73.6612 175.82 cv
73.2862 176.195 73.0755 176.704 73.0755 177.234 cv
73.0755 177.765 73.2862 178.274 73.6612 178.649 cv
74.0363 179.024 74.5451 179.234 75.0755 179.234 cv
cp
f
72.525 156.496 mo
73.0554 156.496 73.5641 156.285 73.9392 155.91 cv
74.3142 155.535 74.525 155.026 74.525 154.496 cv
74.525 153.965 74.3142 153.457 73.9392 153.082 cv
73.5641 152.707 73.0554 152.496 72.525 152.496 cv
71.9946 152.496 71.4858 152.707 71.1107 153.082 cv
70.7357 153.457 70.525 153.965 70.525 154.496 cv
70.525 155.026 70.7357 155.535 71.1107 155.91 cv
71.4858 156.285 71.9946 156.496 72.525 156.496 cv
cp
f
75.1297 163.642 mo
75.6602 163.642 76.1689 163.431 76.544 163.056 cv
76.919 162.681 77.1297 162.172 77.1297 161.642 cv
77.1297 161.112 76.919 160.603 76.544 160.228 cv
76.1689 159.853 75.6602 159.642 75.1297 159.642 cv
74.5993 159.642 74.0906 159.853 73.7155 160.228 cv
73.3405 160.603 73.1297 161.112 73.1297 161.642 cv
73.1297 162.172 73.3405 162.681 73.7155 163.056 cv
74.0906 163.431 74.5993 163.642 75.1297 163.642 cv
cp
f
75.7224 134.246 mo
76.2528 134.246 76.7616 134.036 77.1367 133.66 cv
77.5117 133.285 77.7224 132.777 77.7224 132.246 cv
77.7224 131.716 77.5117 131.207 77.1367 130.832 cv
76.7616 130.457 76.2528 130.246 75.7224 130.246 cv
75.192 130.246 74.6833 130.457 74.3082 130.832 cv
73.9332 131.207 73.7224 131.716 73.7224 132.246 cv
73.7224 132.777 73.9332 133.285 74.3082 133.66 cv
74.6833 134.036 75.192 134.246 75.7224 134.246 cv
cp
f
74.1669 171.682 mo
74.6973 171.682 75.2061 171.471 75.5811 171.096 cv
75.9562 170.721 76.1669 170.212 76.1669 169.682 cv
76.1669 169.152 75.9562 168.643 75.5811 168.268 cv
75.2061 167.893 74.6973 167.682 74.1669 167.682 cv
73.6365 167.682 73.1278 167.893 72.7527 168.268 cv
72.3777 168.643 72.1669 169.152 72.1669 169.682 cv
72.1669 170.212 72.3777 170.721 72.7527 171.096 cv
73.1278 171.471 73.6365 171.682 74.1669 171.682 cv
cp
f
67.5489 175.28 mo
68.0793 175.28 68.588 175.07 68.9631 174.695 cv
69.3382 174.32 69.5489 173.811 69.5489 173.28 cv
69.5489 172.75 69.3382 172.241 68.9631 171.866 cv
68.588 171.491 68.0793 171.28 67.5489 171.28 cv
67.0185 171.28 66.5097 171.491 66.1347 171.866 cv
65.7596 172.241 65.5489 172.75 65.5489 173.28 cv
65.5489 173.811 65.7596 174.32 66.1347 174.695 cv
66.5097 175.07 67.0185 175.28 67.5489 175.28 cv
cp
f
68.8333 192.26 mo
69.3637 192.26 69.8724 192.049 70.2475 191.674 cv
70.6225 191.299 70.8333 190.79 70.8333 190.26 cv
70.8333 189.73 70.6225 189.221 70.2475 188.846 cv
69.8724 188.471 69.3637 188.26 68.8333 188.26 cv
68.3029 188.26 67.7941 188.471 67.419 188.846 cv
67.044 189.221 66.8333 189.73 66.8333 190.26 cv
66.8333 190.79 67.044 191.299 67.419 191.674 cv
67.7941 192.049 68.3029 192.26 68.8333 192.26 cv
cp
f
71.0016 22.7724 mo
71.532 22.7724 72.0408 22.5617 72.4158 22.1866 cv
72.7909 21.8116 73.0016 21.3028 73.0016 20.7724 cv
73.0016 20.242 72.7909 19.7333 72.4158 19.3582 cv
72.0408 18.9832 71.532 18.7724 71.0016 18.7724 cv
70.4712 18.7724 69.9624 18.9832 69.5874 19.3582 cv
69.2123 19.7333 69.0016 20.242 69.0016 20.7724 cv
69.0016 21.3028 69.2123 21.8116 69.5874 22.1866 cv
69.9624 22.5617 70.4712 22.7724 71.0016 22.7724 cv
cp
f
72.151 27.7538 mo
72.6814 27.7538 73.1902 27.5431 73.5653 27.168 cv
73.9403 26.7929 74.151 26.2842 74.151 25.7538 cv
74.151 25.2234 73.9403 24.7146 73.5653 24.3396 cv
73.1902 23.9645 72.6814 23.7538 72.151 23.7538 cv
71.6206 23.7538 71.1119 23.9645 70.7368 24.3396 cv
70.3618 24.7146 70.151 25.2234 70.151 25.7538 cv
70.151 26.2842 70.3618 26.7929 70.7368 27.168 cv
71.1119 27.5431 71.6206 27.7538 72.151 27.7538 cv
cp
f
70.8717 59.0961 mo
71.4021 59.0961 71.9108 58.8854 72.2859 58.5103 cv
72.661 58.1353 72.8717 57.6265 72.8717 57.0961 cv
72.8717 56.5657 72.661 56.0569 72.2859 55.6819 cv
71.9108 55.3068 71.4021 55.0961 70.8717 55.0961 cv
70.3413 55.0961 69.8325 55.3068 69.4575 55.6819 cv
69.0824 56.0569 68.8717 56.5657 68.8717 57.0961 cv
68.8717 57.6265 69.0824 58.1353 69.4575 58.5103 cv
69.8325 58.8854 70.3413 59.0961 70.8717 59.0961 cv
cp
f
73.8317 45.0778 mo
74.3621 45.0778 74.8709 44.867 75.2459 44.492 cv
75.621 44.1169 75.8317 43.6082 75.8317 43.0778 cv
75.8317 42.5474 75.621 42.0386 75.2459 41.6635 cv
74.8709 41.2885 74.3621 41.0778 73.8317 41.0778 cv
73.3013 41.0778 72.7925 41.2885 72.4175 41.6635 cv
72.0424 42.0386 71.8317 42.5474 71.8317 43.0778 cv
71.8317 43.6082 72.0424 44.1169 72.4175 44.492 cv
72.7925 44.867 73.3013 45.0778 73.8317 45.0778 cv
cp
f
74.4043 66.5233 mo
74.9347 66.5233 75.4435 66.3126 75.8186 65.9376 cv
76.1936 65.5625 76.4043 65.0538 76.4043 64.5233 cv
76.4043 63.9929 76.1936 63.4842 75.8186 63.1091 cv
75.4435 62.7341 74.9347 62.5233 74.4043 62.5233 cv
73.8739 62.5233 73.3652 62.7341 72.9901 63.1091 cv
72.6151 63.4842 72.4043 63.9929 72.4043 64.5233 cv
72.4043 65.0538 72.6151 65.5625 72.9901 65.9376 cv
73.3652 66.3126 73.8739 66.5233 74.4043 66.5233 cv
cp
f
75.4099 55.402 mo
75.9403 55.402 76.4491 55.1913 76.8241 54.8162 cv
77.1992 54.4412 77.4099 53.9324 77.4099 53.402 cv
77.4099 52.8716 77.1992 52.3628 76.8241 51.9878 cv
76.4491 51.6127 75.9403 51.402 75.4099 51.402 cv
74.8795 51.402 74.3707 51.6127 73.9957 51.9878 cv
73.6206 52.3628 73.4099 52.8716 73.4099 53.402 cv
73.4099 53.9324 73.6206 54.4412 73.9957 54.8162 cv
74.3707 55.1913 74.8795 55.402 75.4099 55.402 cv
cp
f
77.1234 180.696 mo
77.6538 180.696 78.1625 180.486 78.5376 180.111 cv
78.9126 179.736 79.1234 179.227 79.1234 178.696 cv
79.1234 178.166 78.9126 177.657 78.5376 177.282 cv
78.1625 176.907 77.6538 176.696 77.1234 176.696 cv
76.593 176.696 76.0842 176.907 75.7092 177.282 cv
75.3341 177.657 75.1234 178.166 75.1234 178.696 cv
75.1234 179.227 75.3341 179.736 75.7092 180.111 cv
76.0842 180.486 76.593 180.696 77.1234 180.696 cv
cp
f
69.6768 47.2332 mo
70.2072 47.2332 70.716 47.0225 71.091 46.6474 cv
71.4661 46.2724 71.6768 45.7636 71.6768 45.2332 cv
71.6768 44.7028 71.4661 44.194 71.091 43.819 cv
70.716 43.4439 70.2072 43.2332 69.6768 43.2332 cv
69.1464 43.2332 68.6377 43.4439 68.2626 43.819 cv
67.8875 44.194 67.6768 44.7028 67.6768 45.2332 cv
67.6768 45.7636 67.8875 46.2724 68.2626 46.6474 cv
68.6377 47.0225 69.1464 47.2332 69.6768 47.2332 cv
cp
f
75.4684 102.374 mo
75.9988 102.374 76.5076 102.163 76.8826 101.788 cv
77.2577 101.413 77.4684 100.904 77.4684 100.374 cv
77.4684 99.8436 77.2577 99.3348 76.8826 98.9598 cv
76.5076 98.5847 75.9988 98.374 75.4684 98.374 cv
74.938 98.374 74.4292 98.5847 74.0542 98.9598 cv
73.6791 99.3348 73.4684 99.8436 73.4684 100.374 cv
73.4684 100.904 73.6791 101.413 74.0542 101.788 cv
74.4292 102.163 74.938 102.374 75.4684 102.374 cv
cp
f
70.4951 35.4911 mo
71.0255 35.4911 71.5343 35.2804 71.9093 34.9053 cv
72.2844 34.5303 72.4951 34.0215 72.4951 33.4911 cv
72.4951 32.9607 72.2844 32.4519 71.9093 32.0769 cv
71.5343 31.7018 71.0255 31.4911 70.4951 31.4911 cv
69.9647 31.4911 69.4559 31.7018 69.0809 32.0769 cv
68.7058 32.4519 68.4951 32.9607 68.4951 33.4911 cv
68.4951 34.0215 68.7058 34.5303 69.0809 34.9053 cv
69.4559 35.2804 69.9647 35.4911 70.4951 35.4911 cv
cp
f
69.5253 103.441 mo
70.0557 103.441 70.5645 103.23 70.9395 102.855 cv
71.3146 102.48 71.5253 101.971 71.5253 101.441 cv
71.5253 100.91 71.3146 100.401 70.9395 100.026 cv
70.5645 99.6513 70.0557 99.4406 69.5253 99.4406 cv
68.9949 99.4406 68.4861 99.6513 68.1111 100.026 cv
67.736 100.401 67.5253 100.91 67.5253 101.441 cv
67.5253 101.971 67.736 102.48 68.1111 102.855 cv
68.4861 103.23 68.9949 103.441 69.5253 103.441 cv
cp
f
70.7883 57.8887 mo
71.3187 57.8887 71.8275 57.678 72.2025 57.3029 cv
72.5776 56.9279 72.7883 56.4191 72.7883 55.8887 cv
72.7883 55.3583 72.5776 54.8495 72.2025 54.4745 cv
71.8275 54.0994 71.3187 53.8887 70.7883 53.8887 cv
70.2579 53.8887 69.7491 54.0994 69.3741 54.4745 cv
68.999 54.8495 68.7883 55.3583 68.7883 55.8887 cv
68.7883 56.4191 68.999 56.9279 69.3741 57.3029 cv
69.7491 57.678 70.2579 57.8887 70.7883 57.8887 cv
cp
f
70.2106 139.828 mo
70.741 139.828 71.2497 139.617 71.6248 139.242 cv
71.9998 138.867 72.2106 138.359 72.2106 137.828 cv
72.2106 137.298 71.9998 136.789 71.6248 136.414 cv
71.2497 136.039 70.741 135.828 70.2106 135.828 cv
69.6802 135.828 69.1714 136.039 68.7964 136.414 cv
68.4213 136.789 68.2106 137.298 68.2106 137.828 cv
68.2106 138.359 68.4213 138.867 68.7964 139.242 cv
69.1714 139.617 69.6802 139.828 70.2106 139.828 cv
cp
f
67.5825 44.1336 mo
68.1129 44.1336 68.6216 43.9229 68.9967 43.5479 cv
69.3718 43.1728 69.5825 42.664 69.5825 42.1336 cv
69.5825 41.6032 69.3718 41.0945 68.9967 40.7194 cv
68.6216 40.3444 68.1129 40.1336 67.5825 40.1336 cv
67.0521 40.1336 66.5433 40.3444 66.1683 40.7194 cv
65.7932 41.0945 65.5825 41.6032 65.5825 42.1336 cv
65.5825 42.664 65.7932 43.1728 66.1683 43.5479 cv
66.5433 43.9229 67.0521 44.1336 67.5825 44.1336 cv
cp
f
73.3989 184.463 mo
73.9293 184.463 74.4381 184.252 74.8131 183.877 cv
75.1882 183.502 75.3989 182.993 75.3989 182.463 cv
75.3989 181.933 75.1882 181.424 74.8131 181.049 cv
74.4381 180.674 73.9293 180.463 73.3989 180.463 cv
72.8685 180.463 72.3598 180.674 71.9847 181.049 cv
71.6097 181.424 71.3989 181.933 71.3989 182.463 cv
71.3989 182.993 71.6097 183.502 71.9847 183.877 cv
72.3598 184.252 72.8685 184.463 73.3989 184.463 cv
cp
f
67.8973 28.4079 mo
68.4277 28.4079 68.9364 28.1971 69.3115 27.8221 cv
69.6865 27.447 69.8973 26.9383 69.8973 26.4079 cv
69.8973 25.8775 69.6865 25.3687 69.3115 24.9937 cv
68.9364 24.6186 68.4277 24.4079 67.8973 24.4079 cv
67.3668 24.4079 66.8581 24.6186 66.483 24.9937 cv
66.108 25.3687 65.8973 25.8775 65.8973 26.4079 cv
65.8973 26.9383 66.108 27.447 66.483 27.8221 cv
66.8581 28.1971 67.3668 28.4079 67.8973 28.4079 cv
cp
f
68.6092 19.2801 mo
69.1396 19.2801 69.6484 19.0693 70.0234 18.6943 cv
70.3985 18.3192 70.6092 17.8105 70.6092 17.2801 cv
70.6092 16.7497 70.3985 16.2409 70.0234 15.8658 cv
69.6484 15.4908 69.1396 15.2801 68.6092 15.2801 cv
68.0788 15.2801 67.5701 15.4908 67.195 15.8658 cv
66.8199 16.2409 66.6092 16.7497 66.6092 17.2801 cv
66.6092 17.8105 66.8199 18.3192 67.195 18.6943 cv
67.5701 19.0693 68.0788 19.2801 68.6092 19.2801 cv
cp
f
67.6911 68.5581 mo
68.2215 68.5581 68.7302 68.3474 69.1053 67.9723 cv
69.4803 67.5973 69.6911 67.0885 69.6911 66.5581 cv
69.6911 66.0277 69.4803 65.5189 69.1053 65.1439 cv
68.7302 64.7688 68.2215 64.5581 67.6911 64.5581 cv
67.1607 64.5581 66.6519 64.7688 66.2768 65.1439 cv
65.9018 65.5189 65.6911 66.0277 65.6911 66.5581 cv
65.6911 67.0885 65.9018 67.5973 66.2768 67.9723 cv
66.6519 68.3474 67.1607 68.5581 67.6911 68.5581 cv
cp
f
74.7905 64.4676 mo
75.3209 64.4676 75.8297 64.2569 76.2047 63.8818 cv
76.5798 63.5068 76.7905 62.998 76.7905 62.4676 cv
76.7905 61.9372 76.5798 61.4285 76.2047 61.0534 cv
75.8297 60.6784 75.3209 60.4676 74.7905 60.4676 cv
74.2601 60.4676 73.7514 60.6784 73.3763 61.0534 cv
73.0013 61.4285 72.7905 61.9372 72.7905 62.4676 cv
72.7905 62.998 73.0013 63.5068 73.3763 63.8818 cv
73.7514 64.2569 74.2601 64.4676 74.7905 64.4676 cv
cp
f
67.979 181.697 mo
68.5094 181.697 69.0182 181.486 69.3932 181.111 cv
69.7683 180.736 69.979 180.227 69.979 179.697 cv
69.979 179.167 69.7683 178.658 69.3932 178.283 cv
69.0182 177.908 68.5094 177.697 67.979 177.697 cv
67.4486 177.697 66.9399 177.908 66.5648 178.283 cv
66.1898 178.658 65.979 179.167 65.979 179.697 cv
65.979 180.227 66.1898 180.736 66.5648 181.111 cv
66.9399 181.486 67.4486 181.697 67.979 181.697 cv
cp
f
67.8822 74.334 mo
68.4126 74.334 68.9213 74.1233 69.2964 73.7483 cv
69.6714 73.3732 69.8822 72.8645 69.8822 72.334 cv
69.8822 71.8036 69.6714 71.2949 69.2964 70.9198 cv
68.9213 70.5448 68.4126 70.334 67.8822 70.334 cv
67.3518 70.334 66.843 70.5448 66.468 70.9198 cv
66.0929 71.2949 65.8822 71.8036 65.8822 72.334 cv
65.8822 72.8645 66.0929 73.3732 66.468 73.7483 cv
66.843 74.1233 67.3518 74.334 67.8822 74.334 cv
cp
f
76.5683 26.2149 mo
77.0987 26.2149 77.6074 26.0041 77.9825 25.6291 cv
78.3575 25.254 78.5683 24.7453 78.5683 24.2149 cv
78.5683 23.6845 78.3575 23.1757 77.9825 22.8007 cv
77.6074 22.4256 77.0987 22.2149 76.5683 22.2149 cv
76.0379 22.2149 75.5291 22.4256 75.1541 22.8007 cv
74.779 23.1757 74.5683 23.6845 74.5683 24.2149 cv
74.5683 24.7453 74.779 25.254 75.1541 25.6291 cv
75.5291 26.0041 76.0379 26.2149 76.5683 26.2149 cv
cp
f
74.5514 28.676 mo
75.0818 28.676 75.5905 28.4653 75.9656 28.0902 cv
76.3406 27.7152 76.5514 27.2064 76.5514 26.676 cv
76.5514 26.1456 76.3406 25.6368 75.9656 25.2618 cv
75.5905 24.8867 75.0818 24.676 74.5514 24.676 cv
74.021 24.676 73.5122 24.8867 73.1371 25.2618 cv
72.7621 25.6368 72.5514 26.1456 72.5514 26.676 cv
72.5514 27.2064 72.7621 27.7152 73.1371 28.0902 cv
73.5122 28.4653 74.021 28.676 74.5514 28.676 cv
cp
f
72.0341 28.0704 mo
72.5645 28.0704 73.0732 27.8596 73.4483 27.4846 cv
73.8234 27.1095 74.0341 26.6008 74.0341 26.0704 cv
74.0341 25.54 73.8234 25.0312 73.4483 24.6562 cv
73.0732 24.2811 72.5645 24.0704 72.0341 24.0704 cv
71.5037 24.0704 70.9949 24.2811 70.6199 24.6562 cv
70.2448 25.0312 70.0341 25.54 70.0341 26.0704 cv
70.0341 26.6008 70.2448 27.1095 70.6199 27.4846 cv
70.9949 27.8596 71.5037 28.0704 72.0341 28.0704 cv
cp
f
69.0868 53.5768 mo
69.6172 53.5768 70.126 53.3661 70.501 52.991 cv
70.8761 52.616 71.0868 52.1072 71.0868 51.5768 cv
71.0868 51.0464 70.8761 50.5377 70.501 50.1626 cv
70.126 49.7875 69.6172 49.5768 69.0868 49.5768 cv
68.5564 49.5768 68.0477 49.7875 67.6726 50.1626 cv
67.2976 50.5377 67.0868 51.0464 67.0868 51.5768 cv
67.0868 52.1072 67.2976 52.616 67.6726 52.991 cv
68.0477 53.3661 68.5564 53.5768 69.0868 53.5768 cv
cp
f
71.4239 44.2246 mo
71.9543 44.2246 72.463 44.0139 72.8381 43.6389 cv
73.2131 43.2638 73.4239 42.755 73.4239 42.2246 cv
73.4239 41.6942 73.2131 41.1855 72.8381 40.8104 cv
72.463 40.4354 71.9543 40.2246 71.4239 40.2246 cv
70.8935 40.2246 70.3847 40.4354 70.0096 40.8104 cv
69.6346 41.1855 69.4239 41.6942 69.4239 42.2246 cv
69.4239 42.755 69.6346 43.2638 70.0096 43.6389 cv
70.3847 44.0139 70.8935 44.2246 71.4239 44.2246 cv
cp
f
74.2804 51.5696 mo
74.8108 51.5696 75.3196 51.3589 75.6946 50.9838 cv
76.0697 50.6088 76.2804 50.1 76.2804 49.5696 cv
76.2804 49.0392 76.0697 48.5304 75.6946 48.1554 cv
75.3196 47.7803 74.8108 47.5696 74.2804 47.5696 cv
73.75 47.5696 73.2412 47.7803 72.8662 48.1554 cv
72.4911 48.5304 72.2804 49.0392 72.2804 49.5696 cv
72.2804 50.1 72.4911 50.6088 72.8662 50.9838 cv
73.2412 51.3589 73.75 51.5696 74.2804 51.5696 cv
cp
f
69.9943 79.3377 mo
70.5247 79.3377 71.0335 79.1269 71.4085 78.7519 cv
71.7836 78.3768 71.9943 77.8681 71.9943 77.3377 cv
71.9943 76.8073 71.7836 76.2985 71.4085 75.9235 cv
71.0335 75.5484 70.5247 75.3377 69.9943 75.3377 cv
69.4639 75.3377 68.9552 75.5484 68.5801 75.9235 cv
68.2051 76.2985 67.9943 76.8073 67.9943 77.3377 cv
67.9943 77.8681 68.2051 78.3768 68.5801 78.7519 cv
68.9552 79.1269 69.4639 79.3377 69.9943 79.3377 cv
cp
f
74.7332 29.9702 mo
75.2636 29.9702 75.7724 29.7595 76.1474 29.3844 cv
76.5225 29.0093 76.7332 28.5006 76.7332 27.9702 cv
76.7332 27.4398 76.5225 26.931 76.1474 26.556 cv
75.7724 26.1809 75.2636 25.9702 74.7332 25.9702 cv
74.2028 25.9702 73.6941 26.1809 73.319 26.556 cv
72.944 26.931 72.7332 27.4398 72.7332 27.9702 cv
72.7332 28.5006 72.944 29.0093 73.319 29.3844 cv
73.6941 29.7595 74.2028 29.9702 74.7332 29.9702 cv
cp
f
71.3926 153.599 mo
71.923 153.599 72.4318 153.388 72.8068 153.013 cv
73.1819 152.638 73.3926 152.129 73.3926 151.599 cv
73.3926 151.068 73.1819 150.559 72.8068 150.184 cv
72.4318 149.809 71.923 149.599 71.3926 149.599 cv
70.8622 149.599 70.3534 149.809 69.9784 150.184 cv
69.6033 150.559 69.3926 151.068 69.3926 151.599 cv
69.3926 152.129 69.6033 152.638 69.9784 153.013 cv
70.3534 153.388 70.8622 153.599 71.3926 153.599 cv
cp
f
118.739 86.9726 mo
119.269 86.9726 119.778 86.7619 120.153 86.3868 cv
120.528 86.0118 120.739 85.503 120.739 84.9726 cv
120.739 84.4422 120.528 83.9335 120.153 83.5584 cv
119.778 83.1833 119.269 82.9726 118.739 82.9726 cv
118.208 82.9726 117.7 83.1833 117.325 83.5584 cv
116.95 83.9335 116.739 84.4422 116.739 84.9726 cv
116.739 85.503 116.95 86.0118 117.325 86.3868 cv
117.7 86.7619 118.208 86.9726 118.739 86.9726 cv
cp
f
120.914 49.8554 mo
121.444 49.8554 121.953 49.6447 122.328 49.2696 cv
122.703 48.8946 122.914 48.3858 122.914 47.8554 cv
122.914 47.325 122.703 46.8163 122.328 46.4412 cv
121.953 46.0662 121.444 45.8554 120.914 45.8554 cv
120.383 45.8554 119.874 46.0662 119.499 46.4412 cv
119.124 46.8163 118.914 47.325 118.914 47.8554 cv
118.914 48.3858 119.124 48.8946 119.499 49.2696 cv
119.874 49.6447 120.383 49.8554 120.914 49.8554 cv
cp
f
119.802 206.609 mo
120.332 206.609 120.841 206.398 121.216 206.023 cv
121.591 205.648 121.802 205.139 121.802 204.609 cv
121.802 204.078 121.591 203.57 121.216 203.195 cv
120.841 202.82 120.332 202.609 119.802 202.609 cv
119.272 202.609 118.763 202.82 118.388 203.195 cv
118.013 203.57 117.802 204.078 117.802 204.609 cv
117.802 205.139 118.013 205.648 118.388 206.023 cv
118.763 206.398 119.272 206.609 119.802 206.609 cv
cp
f
120.092 188.063 mo
120.622 188.063 121.131 187.852 121.506 187.477 cv
121.881 187.102 122.092 186.593 122.092 186.063 cv
122.092 185.532 121.881 185.023 121.506 184.648 cv
121.131 184.273 120.622 184.063 120.092 184.063 cv
119.561 184.063 119.053 184.273 118.678 184.648 cv
118.303 185.023 118.092 185.532 118.092 186.063 cv
118.092 186.593 118.303 187.102 118.678 187.477 cv
119.053 187.852 119.561 188.063 120.092 188.063 cv
cp
f
122.723 46.4202 mo
123.254 46.4202 123.762 46.2094 124.137 45.8344 cv
124.513 45.4593 124.723 44.9506 124.723 44.4202 cv
124.723 43.8898 124.513 43.381 124.137 43.006 cv
123.762 42.6309 123.254 42.4202 122.723 42.4202 cv
122.193 42.4202 121.684 42.6309 121.309 43.006 cv
120.934 43.381 120.723 43.8898 120.723 44.4202 cv
120.723 44.9506 120.934 45.4593 121.309 45.8344 cv
121.684 46.2094 122.193 46.4202 122.723 46.4202 cv
cp
f
125.664 183.162 mo
126.194 183.162 126.703 182.951 127.078 182.576 cv
127.453 182.201 127.664 181.692 127.664 181.162 cv
127.664 180.631 127.453 180.122 127.078 179.747 cv
126.703 179.372 126.194 179.162 125.664 179.162 cv
125.133 179.162 124.624 179.372 124.249 179.747 cv
123.874 180.122 123.664 180.631 123.664 181.162 cv
123.664 181.692 123.874 182.201 124.249 182.576 cv
124.624 182.951 125.133 183.162 125.664 183.162 cv
cp
f
123.51 76.425 mo
124.041 76.425 124.549 76.2142 124.924 75.8392 cv
125.299 75.4641 125.51 74.9554 125.51 74.425 cv
125.51 73.8946 125.299 73.3858 124.924 73.0108 cv
124.549 72.6357 124.041 72.425 123.51 72.425 cv
122.98 72.425 122.471 72.6357 122.096 73.0108 cv
121.721 73.3858 121.51 73.8946 121.51 74.425 cv
121.51 74.9554 121.721 75.4641 122.096 75.8392 cv
122.471 76.2142 122.98 76.425 123.51 76.425 cv
cp
f
120.64 174.294 mo
121.17 174.294 121.679 174.083 122.054 173.708 cv
122.429 173.333 122.64 172.825 122.64 172.294 cv
122.64 171.764 122.429 171.255 122.054 170.88 cv
121.679 170.505 121.17 170.294 120.64 170.294 cv
120.109 170.294 119.601 170.505 119.226 170.88 cv
118.85 171.255 118.64 171.764 118.64 172.294 cv
118.64 172.825 118.85 173.333 119.226 173.708 cv
119.601 174.083 120.109 174.294 120.64 174.294 cv
cp
f
121.773 99.74 mo
122.303 99.74 122.812 99.5293 123.187 99.1542 cv
123.562 98.7792 123.773 98.2704 123.773 97.74 cv
123.773 97.2096 123.562 96.7009 123.187 96.3258 cv
122.812 95.9508 122.303 95.74 121.773 95.74 cv
121.243 95.74 120.734 95.9508 120.359 96.3258 cv
119.984 96.7009 119.773 97.2096 119.773 97.74 cv
119.773 98.2704 119.984 98.7792 120.359 99.1542 cv
120.734 99.5293 121.243 99.74 121.773 99.74 cv
cp
f
125.651 112.862 mo
126.182 112.862 126.691 112.651 127.066 112.276 cv
127.441 111.901 127.651 111.392 127.651 110.862 cv
127.651 110.332 127.441 109.823 127.066 109.448 cv
126.691 109.073 126.182 108.862 125.651 108.862 cv
125.121 108.862 124.612 109.073 124.237 109.448 cv
123.862 109.823 123.651 110.332 123.651 110.862 cv
123.651 111.392 123.862 111.901 124.237 112.276 cv
124.612 112.651 125.121 112.862 125.651 112.862 cv
cp
f
123.074 63.2511 mo
123.605 63.2511 124.114 63.0404 124.489 62.6653 cv
124.864 62.2903 125.074 61.7815 125.074 61.2511 cv
125.074 60.7207 124.864 60.212 124.489 59.8369 cv
124.114 59.4619 123.605 59.2511 123.074 59.2511 cv
122.544 59.2511 122.035 59.4619 121.66 59.8369 cv
121.285 60.212 121.074 60.7207 121.074 61.2511 cv
121.074 61.7815 121.285 62.2903 121.66 62.6653 cv
122.035 63.0404 122.544 63.2511 123.074 63.2511 cv
cp
f
121.188 173.209 mo
121.718 173.209 122.227 172.998 122.602 172.623 cv
122.977 172.248 123.188 171.74 123.188 171.209 cv
123.188 170.679 122.977 170.17 122.602 169.795 cv
122.227 169.42 121.718 169.209 121.188 169.209 cv
120.658 169.209 120.149 169.42 119.774 169.795 cv
119.399 170.17 119.188 170.679 119.188 171.209 cv
119.188 171.74 119.399 172.248 119.774 172.623 cv
120.149 172.998 120.658 173.209 121.188 173.209 cv
cp
f
121.657 202.712 mo
122.187 202.712 122.696 202.501 123.071 202.126 cv
123.446 201.751 123.657 201.243 123.657 200.712 cv
123.657 200.182 123.446 199.673 123.071 199.298 cv
122.696 198.923 122.187 198.712 121.657 198.712 cv
121.127 198.712 120.618 198.923 120.243 199.298 cv
119.868 199.673 119.657 200.182 119.657 200.712 cv
119.657 201.243 119.868 201.751 120.243 202.126 cv
120.618 202.501 121.127 202.712 121.657 202.712 cv
cp
f
125.726 193.136 mo
126.257 193.136 126.766 192.925 127.141 192.55 cv
127.516 192.175 127.726 191.666 127.726 191.136 cv
127.726 190.606 127.516 190.097 127.141 189.722 cv
126.766 189.347 126.257 189.136 125.726 189.136 cv
125.196 189.136 124.687 189.347 124.312 189.722 cv
123.937 190.097 123.726 190.606 123.726 191.136 cv
123.726 191.666 123.937 192.175 124.312 192.55 cv
124.687 192.925 125.196 193.136 125.726 193.136 cv
cp
f
120.257 194.949 mo
120.787 194.949 121.296 194.739 121.671 194.364 cv
122.046 193.988 122.257 193.48 122.257 192.949 cv
122.257 192.419 122.046 191.91 121.671 191.535 cv
121.296 191.16 120.787 190.949 120.257 190.949 cv
119.726 190.949 119.218 191.16 118.843 191.535 cv
118.468 191.91 118.257 192.419 118.257 192.949 cv
118.257 193.48 118.468 193.988 118.843 194.364 cv
119.218 194.739 119.726 194.949 120.257 194.949 cv
cp
f
118.518 175.981 mo
119.048 175.981 119.557 175.77 119.932 175.395 cv
120.307 175.02 120.518 174.511 120.518 173.981 cv
120.518 173.45 120.307 172.941 119.932 172.566 cv
119.557 172.191 119.048 171.981 118.518 171.981 cv
117.987 171.981 117.478 172.191 117.103 172.566 cv
116.728 172.941 116.518 173.45 116.518 173.981 cv
116.518 174.511 116.728 175.02 117.103 175.395 cv
117.478 175.77 117.987 175.981 118.518 175.981 cv
cp
f
122.014 164.23 mo
122.544 164.23 123.053 164.019 123.428 163.644 cv
123.803 163.269 124.014 162.76 124.014 162.23 cv
124.014 161.699 123.803 161.191 123.428 160.815 cv
123.053 160.44 122.544 160.23 122.014 160.23 cv
121.484 160.23 120.975 160.44 120.6 160.815 cv
120.225 161.191 120.014 161.699 120.014 162.23 cv
120.014 162.76 120.225 163.269 120.6 163.644 cv
120.975 164.019 121.484 164.23 122.014 164.23 cv
cp
f
121.492 179.427 mo
122.022 179.427 122.531 179.216 122.906 178.841 cv
123.281 178.466 123.492 177.957 123.492 177.427 cv
123.492 176.896 123.281 176.388 122.906 176.013 cv
122.531 175.637 122.022 175.427 121.492 175.427 cv
120.962 175.427 120.453 175.637 120.078 176.013 cv
119.703 176.388 119.492 176.896 119.492 177.427 cv
119.492 177.957 119.703 178.466 120.078 178.841 cv
120.453 179.216 120.962 179.427 121.492 179.427 cv
cp
f
120.371 176.034 mo
120.902 176.034 121.41 175.823 121.785 175.448 cv
122.16 175.073 122.371 174.564 122.371 174.034 cv
122.371 173.503 122.16 172.995 121.785 172.62 cv
121.41 172.245 120.902 172.034 120.371 172.034 cv
119.841 172.034 119.332 172.245 118.957 172.62 cv
118.582 172.995 118.371 173.503 118.371 174.034 cv
118.371 174.564 118.582 175.073 118.957 175.448 cv
119.332 175.823 119.841 176.034 120.371 176.034 cv
cp
f
121.887 199.352 mo
122.417 199.352 122.926 199.142 123.301 198.767 cv
123.676 198.392 123.887 197.883 123.887 197.352 cv
123.887 196.822 123.676 196.313 123.301 195.938 cv
122.926 195.563 122.417 195.352 121.887 195.352 cv
121.356 195.352 120.847 195.563 120.472 195.938 cv
120.097 196.313 119.887 196.822 119.887 197.352 cv
119.887 197.883 120.097 198.392 120.472 198.767 cv
120.847 199.142 121.356 199.352 121.887 199.352 cv
cp
f
125.185 55.4239 mo
125.715 55.4239 126.224 55.2132 126.599 54.8381 cv
126.974 54.4631 127.185 53.9543 127.185 53.4239 cv
127.185 52.8935 126.974 52.3847 126.599 52.0097 cv
126.224 51.6346 125.715 51.4239 125.185 51.4239 cv
124.655 51.4239 124.146 51.6346 123.771 52.0097 cv
123.396 52.3847 123.185 52.8935 123.185 53.4239 cv
123.185 53.9543 123.396 54.4631 123.771 54.8381 cv
124.146 55.2132 124.655 55.4239 125.185 55.4239 cv
cp
f
122.422 61.1846 mo
122.953 61.1846 123.461 60.9739 123.836 60.5988 cv
124.211 60.2238 124.422 59.715 124.422 59.1846 cv
124.422 58.6542 124.211 58.1454 123.836 57.7704 cv
123.461 57.3953 122.953 57.1846 122.422 57.1846 cv
121.892 57.1846 121.383 57.3953 121.008 57.7704 cv
120.633 58.1454 120.422 58.6542 120.422 59.1846 cv
120.422 59.715 120.633 60.2238 121.008 60.5988 cv
121.383 60.9739 121.892 61.1846 122.422 61.1846 cv
cp
f
124.933 103.438 mo
125.463 103.438 125.972 103.227 126.347 102.852 cv
126.722 102.477 126.933 101.968 126.933 101.438 cv
126.933 100.907 126.722 100.399 126.347 100.024 cv
125.972 99.6484 125.463 99.4377 124.933 99.4377 cv
124.402 99.4377 123.894 99.6484 123.518 100.024 cv
123.143 100.399 122.933 100.907 122.933 101.438 cv
122.933 101.968 123.143 102.477 123.518 102.852 cv
123.894 103.227 124.402 103.438 124.933 103.438 cv
cp
f
119.066 81.0876 mo
119.596 81.0876 120.105 80.8769 120.48 80.5018 cv
120.855 80.1268 121.066 79.618 121.066 79.0876 cv
121.066 78.5572 120.855 78.0484 120.48 77.6734 cv
120.105 77.2983 119.596 77.0876 119.066 77.0876 cv
118.536 77.0876 118.027 77.2983 117.652 77.6734 cv
117.277 78.0484 117.066 78.5572 117.066 79.0876 cv
117.066 79.618 117.277 80.1268 117.652 80.5018 cv
118.027 80.8769 118.536 81.0876 119.066 81.0876 cv
cp
f
125.449 82.5562 mo
125.979 82.5562 126.488 82.3455 126.863 81.9705 cv
127.238 81.5954 127.449 81.0867 127.449 80.5562 cv
127.449 80.0258 127.238 79.5171 126.863 79.142 cv
126.488 78.767 125.979 78.5562 125.449 78.5562 cv
124.918 78.5562 124.409 78.767 124.034 79.142 cv
123.659 79.5171 123.449 80.0258 123.449 80.5562 cv
123.449 81.0867 123.659 81.5954 124.034 81.9705 cv
124.409 82.3455 124.918 82.5562 125.449 82.5562 cv
cp
f
122.998 61.4791 mo
123.529 61.4791 124.037 61.2684 124.413 60.8934 cv
124.788 60.5183 124.998 60.0096 124.998 59.4791 cv
124.998 58.9487 124.788 58.44 124.413 58.0649 cv
124.037 57.6899 123.529 57.4791 122.998 57.4791 cv
122.468 57.4791 121.959 57.6899 121.584 58.0649 cv
121.209 58.44 120.998 58.9487 120.998 59.4791 cv
120.998 60.0096 121.209 60.5183 121.584 60.8934 cv
121.959 61.2684 122.468 61.4791 122.998 61.4791 cv
cp
f
119.448 188.728 mo
119.978 188.728 120.487 188.517 120.862 188.142 cv
121.237 187.767 121.448 187.258 121.448 186.728 cv
121.448 186.197 121.237 185.688 120.862 185.313 cv
120.487 184.938 119.978 184.728 119.448 184.728 cv
118.918 184.728 118.409 184.938 118.034 185.313 cv
117.659 185.688 117.448 186.197 117.448 186.728 cv
117.448 187.258 117.659 187.767 118.034 188.142 cv
118.409 188.517 118.918 188.728 119.448 188.728 cv
cp
f
122.967 60.4782 mo
123.497 60.4782 124.006 60.2674 124.381 59.8924 cv
124.756 59.5173 124.967 59.0086 124.967 58.4782 cv
124.967 57.9477 124.756 57.439 124.381 57.0639 cv
124.006 56.6889 123.497 56.4782 122.967 56.4782 cv
122.437 56.4782 121.928 56.6889 121.553 57.0639 cv
121.178 57.439 120.967 57.9477 120.967 58.4782 cv
120.967 59.0086 121.178 59.5173 121.553 59.8924 cv
121.928 60.2674 122.437 60.4782 122.967 60.4782 cv
cp
f
118.864 198.324 mo
119.394 198.324 119.903 198.114 120.278 197.738 cv
120.653 197.363 120.864 196.855 120.864 196.324 cv
120.864 195.794 120.653 195.285 120.278 194.91 cv
119.903 194.535 119.394 194.324 118.864 194.324 cv
118.333 194.324 117.824 194.535 117.449 194.91 cv
117.074 195.285 116.864 195.794 116.864 196.324 cv
116.864 196.855 117.074 197.363 117.449 197.738 cv
117.824 198.114 118.333 198.324 118.864 198.324 cv
cp
f
117.844 46.2753 mo
118.374 46.2753 118.883 46.0645 119.258 45.6895 cv
119.633 45.3144 119.844 44.8057 119.844 44.2753 cv
119.844 43.7449 119.633 43.2361 119.258 42.8611 cv
118.883 42.486 118.374 42.2753 117.844 42.2753 cv
117.313 42.2753 116.805 42.486 116.43 42.8611 cv
116.055 43.2361 115.844 43.7449 115.844 44.2753 cv
115.844 44.8057 116.055 45.3144 116.43 45.6895 cv
116.805 46.0645 117.313 46.2753 117.844 46.2753 cv
cp
f
124.041 181.702 mo
124.571 181.702 125.08 181.491 125.455 181.116 cv
125.83 180.741 126.041 180.232 126.041 179.702 cv
126.041 179.171 125.83 178.663 125.455 178.287 cv
125.08 177.912 124.571 177.702 124.041 177.702 cv
123.511 177.702 123.002 177.912 122.627 178.287 cv
122.252 178.663 122.041 179.171 122.041 179.702 cv
122.041 180.232 122.252 180.741 122.627 181.116 cv
123.002 181.491 123.511 181.702 124.041 181.702 cv
cp
f
121.13 74.2142 mo
121.66 74.2142 122.169 74.0035 122.544 73.6284 cv
122.919 73.2534 123.13 72.7446 123.13 72.2142 cv
123.13 71.6838 122.919 71.1751 122.544 70.8 cv
122.169 70.425 121.66 70.2142 121.13 70.2142 cv
120.599 70.2142 120.09 70.425 119.715 70.8 cv
119.34 71.1751 119.13 71.6838 119.13 72.2142 cv
119.13 72.7446 119.34 73.2534 119.715 73.6284 cv
120.09 74.0035 120.599 74.2142 121.13 74.2142 cv
cp
f
122.711 144.818 mo
123.241 144.818 123.75 144.607 124.125 144.232 cv
124.5 143.857 124.711 143.349 124.711 142.818 cv
124.711 142.288 124.5 141.779 124.125 141.404 cv
123.75 141.029 123.241 140.818 122.711 140.818 cv
122.181 140.818 121.672 141.029 121.297 141.404 cv
120.922 141.779 120.711 142.288 120.711 142.818 cv
120.711 143.349 120.922 143.857 121.297 144.232 cv
121.672 144.607 122.181 144.818 122.711 144.818 cv
cp
f
124.914 208.276 mo
125.444 208.276 125.953 208.066 126.328 207.691 cv
126.703 207.315 126.914 206.807 126.914 206.276 cv
126.914 205.746 126.703 205.237 126.328 204.862 cv
125.953 204.487 125.444 204.276 124.914 204.276 cv
124.383 204.276 123.874 204.487 123.499 204.862 cv
123.124 205.237 122.914 205.746 122.914 206.276 cv
122.914 206.807 123.124 207.315 123.499 207.691 cv
123.874 208.066 124.383 208.276 124.914 208.276 cv
cp
f
124.664 197.909 mo
125.194 197.909 125.703 197.698 126.078 197.323 cv
126.453 196.948 126.664 196.44 126.664 195.909 cv
126.664 195.379 126.453 194.87 126.078 194.495 cv
125.703 194.12 125.194 193.909 124.664 193.909 cv
124.133 193.909 123.624 194.12 123.249 194.495 cv
122.874 194.87 122.664 195.379 122.664 195.909 cv
122.664 196.44 122.874 196.948 123.249 197.323 cv
123.624 197.698 124.133 197.909 124.664 197.909 cv
cp
f
119.005 34.1508 mo
119.536 34.1508 120.045 33.9401 120.42 33.5651 cv
120.795 33.19 121.005 32.6813 121.005 32.1508 cv
121.005 31.6204 120.795 31.1117 120.42 30.7366 cv
120.045 30.3616 119.536 30.1508 119.005 30.1508 cv
118.475 30.1508 117.966 30.3616 117.591 30.7366 cv
117.216 31.1117 117.005 31.6204 117.005 32.1508 cv
117.005 32.6813 117.216 33.19 117.591 33.5651 cv
117.966 33.9401 118.475 34.1508 119.005 34.1508 cv
cp
f
122.701 45.8723 mo
123.232 45.8723 123.74 45.6616 124.116 45.2866 cv
124.491 44.9115 124.701 44.4028 124.701 43.8723 cv
124.701 43.3419 124.491 42.8332 124.116 42.4581 cv
123.74 42.0831 123.232 41.8723 122.701 41.8723 cv
122.171 41.8723 121.662 42.0831 121.287 42.4581 cv
120.912 42.8332 120.701 43.3419 120.701 43.8723 cv
120.701 44.4028 120.912 44.9115 121.287 45.2866 cv
121.662 45.6616 122.171 45.8723 122.701 45.8723 cv
cp
f
124.551 78.0286 mo
125.082 78.0286 125.59 77.8179 125.965 77.4428 cv
126.34 77.0678 126.551 76.559 126.551 76.0286 cv
126.551 75.4982 126.34 74.9894 125.965 74.6144 cv
125.59 74.2393 125.082 74.0286 124.551 74.0286 cv
124.021 74.0286 123.512 74.2393 123.137 74.6144 cv
122.762 74.9894 122.551 75.4982 122.551 76.0286 cv
122.551 76.559 122.762 77.0678 123.137 77.4428 cv
123.512 77.8179 124.021 78.0286 124.551 78.0286 cv
cp
f
122.841 85.0252 mo
123.372 85.0252 123.881 84.8144 124.256 84.4394 cv
124.631 84.0643 124.841 83.5556 124.841 83.0252 cv
124.841 82.4948 124.631 81.986 124.256 81.611 cv
123.881 81.2359 123.372 81.0252 122.841 81.0252 cv
122.311 81.0252 121.802 81.2359 121.427 81.611 cv
121.052 81.986 120.841 82.4948 120.841 83.0252 cv
120.841 83.5556 121.052 84.0643 121.427 84.4394 cv
121.802 84.8144 122.311 85.0252 122.841 85.0252 cv
cp
f
123.3 156.181 mo
123.831 156.181 124.34 155.97 124.715 155.595 cv
125.09 155.22 125.3 154.711 125.3 154.181 cv
125.3 153.65 125.09 153.141 124.715 152.766 cv
124.34 152.391 123.831 152.181 123.3 152.181 cv
122.77 152.181 122.261 152.391 121.886 152.766 cv
121.511 153.141 121.3 153.65 121.3 154.181 cv
121.3 154.711 121.511 155.22 121.886 155.595 cv
122.261 155.97 122.77 156.181 123.3 156.181 cv
cp
f
121.032 164 mo
121.562 164 122.071 163.789 122.446 163.414 cv
122.821 163.039 123.032 162.53 123.032 162 cv
123.032 161.469 122.821 160.96 122.446 160.585 cv
122.071 160.21 121.562 160 121.032 160 cv
120.501 160 119.993 160.21 119.617 160.585 cv
119.242 160.96 119.032 161.469 119.032 162 cv
119.032 162.53 119.242 163.039 119.617 163.414 cv
119.993 163.789 120.501 164 121.032 164 cv
cp
f
120.937 54.4397 mo
121.467 54.4397 121.976 54.229 122.351 53.854 cv
122.726 53.4789 122.937 52.9702 122.937 52.4397 cv
122.937 51.9093 122.726 51.4006 122.351 51.0255 cv
121.976 50.6505 121.467 50.4397 120.937 50.4397 cv
120.406 50.4397 119.897 50.6505 119.522 51.0255 cv
119.147 51.4006 118.937 51.9093 118.937 52.4397 cv
118.937 52.9702 119.147 53.4789 119.522 53.854 cv
119.897 54.229 120.406 54.4397 120.937 54.4397 cv
cp
f
125.701 54.4697 mo
126.231 54.4697 126.74 54.259 127.115 53.8839 cv
127.49 53.5089 127.701 53.0001 127.701 52.4697 cv
127.701 51.9393 127.49 51.4305 127.115 51.0555 cv
126.74 50.6804 126.231 50.4697 125.701 50.4697 cv
125.171 50.4697 124.662 50.6804 124.287 51.0555 cv
123.912 51.4305 123.701 51.9393 123.701 52.4697 cv
123.701 53.0001 123.912 53.5089 124.287 53.8839 cv
124.662 54.259 125.171 54.4697 125.701 54.4697 cv
cp
f
122.721 101.753 mo
123.252 101.753 123.76 101.542 124.136 101.167 cv
124.511 100.792 124.721 100.283 124.721 99.7527 cv
124.721 99.2223 124.511 98.7136 124.136 98.3385 cv
123.76 97.9635 123.252 97.7527 122.721 97.7527 cv
122.191 97.7527 121.682 97.9635 121.307 98.3385 cv
120.932 98.7136 120.721 99.2223 120.721 99.7527 cv
120.721 100.283 120.932 100.792 121.307 101.167 cv
121.682 101.542 122.191 101.753 122.721 101.753 cv
cp
f
125.043 53.136 mo
125.573 53.136 126.082 52.9252 126.457 52.5502 cv
126.832 52.1751 127.043 51.6664 127.043 51.136 cv
127.043 50.6056 126.832 50.0968 126.457 49.7217 cv
126.082 49.3467 125.573 49.136 125.043 49.136 cv
124.513 49.136 124.004 49.3467 123.629 49.7217 cv
123.254 50.0968 123.043 50.6056 123.043 51.136 cv
123.043 51.6664 123.254 52.1751 123.629 52.5502 cv
124.004 52.9252 124.513 53.136 125.043 53.136 cv
cp
f
119.712 172.189 mo
120.243 172.189 120.751 171.978 121.126 171.603 cv
121.501 171.228 121.712 170.719 121.712 170.189 cv
121.712 169.658 121.501 169.15 121.126 168.775 cv
120.751 168.4 120.243 168.189 119.712 168.189 cv
119.182 168.189 118.673 168.4 118.298 168.775 cv
117.923 169.15 117.712 169.658 117.712 170.189 cv
117.712 170.719 117.923 171.228 118.298 171.603 cv
118.673 171.978 119.182 172.189 119.712 172.189 cv
cp
f
120.236 71.2056 mo
120.767 71.2056 121.276 70.9948 121.651 70.6198 cv
122.026 70.2447 122.236 69.736 122.236 69.2056 cv
122.236 68.6752 122.026 68.1664 121.651 67.7914 cv
121.276 67.4163 120.767 67.2056 120.236 67.2056 cv
119.706 67.2056 119.197 67.4163 118.822 67.7914 cv
118.447 68.1664 118.236 68.6752 118.236 69.2056 cv
118.236 69.736 118.447 70.2447 118.822 70.6198 cv
119.197 70.9948 119.706 71.2056 120.236 71.2056 cv
cp
f
126.421 208.843 mo
126.952 208.843 127.46 208.633 127.835 208.258 cv
128.21 207.883 128.421 207.374 128.421 206.843 cv
128.421 206.313 128.21 205.804 127.835 205.429 cv
127.46 205.054 126.952 204.843 126.421 204.843 cv
125.891 204.843 125.382 205.054 125.007 205.429 cv
124.632 205.804 124.421 206.313 124.421 206.843 cv
124.421 207.374 124.632 207.883 125.007 208.258 cv
125.382 208.633 125.891 208.843 126.421 208.843 cv
cp
f
120.318 87.1664 mo
120.848 87.1664 121.357 86.9557 121.732 86.5806 cv
122.107 86.2055 122.318 85.6968 122.318 85.1664 cv
122.318 84.636 122.107 84.1272 121.732 83.7522 cv
121.357 83.3771 120.848 83.1664 120.318 83.1664 cv
119.787 83.1664 119.279 83.3771 118.904 83.7522 cv
118.528 84.1272 118.318 84.636 118.318 85.1664 cv
118.318 85.6968 118.528 86.2055 118.904 86.5806 cv
119.279 86.9557 119.787 87.1664 120.318 87.1664 cv
cp
f
117.209 157.601 mo
117.739 157.601 118.248 157.39 118.623 157.015 cv
118.998 156.64 119.209 156.131 119.209 155.601 cv
119.209 155.071 118.998 154.562 118.623 154.187 cv
118.248 153.812 117.739 153.601 117.209 153.601 cv
116.679 153.601 116.17 153.812 115.795 154.187 cv
115.42 154.562 115.209 155.071 115.209 155.601 cv
115.209 156.131 115.42 156.64 115.795 157.015 cv
116.17 157.39 116.679 157.601 117.209 157.601 cv
cp
f
166.787 76.4636 mo
167.317 76.4636 167.826 76.2528 168.201 75.8778 cv
168.576 75.5027 168.787 74.994 168.787 74.4636 cv
168.787 73.9332 168.576 73.4244 168.201 73.0494 cv
167.826 72.6743 167.317 72.4636 166.787 72.4636 cv
166.257 72.4636 165.748 72.6743 165.373 73.0494 cv
164.998 73.4244 164.787 73.9332 164.787 74.4636 cv
164.787 74.994 164.998 75.5027 165.373 75.8778 cv
165.748 76.2528 166.257 76.4636 166.787 76.4636 cv
cp
f
174.906 54.1706 mo
175.436 54.1706 175.945 53.9599 176.32 53.5849 cv
176.695 53.2098 176.906 52.701 176.906 52.1706 cv
176.906 51.6402 176.695 51.1315 176.32 50.7564 cv
175.945 50.3814 175.436 50.1706 174.906 50.1706 cv
174.375 50.1706 173.867 50.3814 173.492 50.7564 cv
173.116 51.1315 172.906 51.6402 172.906 52.1706 cv
172.906 52.701 173.116 53.2098 173.492 53.5849 cv
173.867 53.9599 174.375 54.1706 174.906 54.1706 cv
cp
f
174.707 211.381 mo
175.237 211.381 175.746 211.17 176.121 210.795 cv
176.496 210.42 176.707 209.911 176.707 209.381 cv
176.707 208.85 176.496 208.342 176.121 207.966 cv
175.746 207.591 175.237 207.381 174.707 207.381 cv
174.176 207.381 173.668 207.591 173.292 207.966 cv
172.917 208.342 172.707 208.85 172.707 209.381 cv
172.707 209.911 172.917 210.42 173.292 210.795 cv
173.668 211.17 174.176 211.381 174.707 211.381 cv
cp
f
175.783 159.23 mo
176.313 159.23 176.822 159.019 177.197 158.644 cv
177.572 158.269 177.783 157.76 177.783 157.23 cv
177.783 156.699 177.572 156.191 177.197 155.816 cv
176.822 155.441 176.313 155.23 175.783 155.23 cv
175.253 155.23 174.744 155.441 174.369 155.816 cv
173.994 156.191 173.783 156.699 173.783 157.23 cv
173.783 157.76 173.994 158.269 174.369 158.644 cv
174.744 159.019 175.253 159.23 175.783 159.23 cv
cp
f
168.04 47.6481 mo
168.57 47.6481 169.079 47.4374 169.454 47.0623 cv
169.829 46.6873 170.04 46.1785 170.04 45.6481 cv
170.04 45.1177 169.829 44.609 169.454 44.2339 cv
169.079 43.8589 168.57 43.6481 168.04 43.6481 cv
167.509 43.6481 167.001 43.8589 166.625 44.2339 cv
166.25 44.609 166.04 45.1177 166.04 45.6481 cv
166.04 46.1785 166.25 46.6873 166.625 47.0623 cv
167.001 47.4374 167.509 47.6481 168.04 47.6481 cv
cp
f
175.03 140.382 mo
175.561 140.382 176.069 140.172 176.445 139.797 cv
176.82 139.422 177.03 138.913 177.03 138.382 cv
177.03 137.852 176.82 137.343 176.445 136.968 cv
176.069 136.593 175.561 136.382 175.03 136.382 cv
174.5 136.382 173.991 136.593 173.616 136.968 cv
173.241 137.343 173.03 137.852 173.03 138.382 cv
173.03 138.913 173.241 139.422 173.616 139.797 cv
173.991 140.172 174.5 140.382 175.03 140.382 cv
cp
f
171.781 44.7772 mo
172.311 44.7772 172.82 44.5665 173.195 44.1914 cv
173.57 43.8164 173.781 43.3076 173.781 42.7772 cv
173.781 42.2468 173.57 41.7381 173.195 41.363 cv
172.82 40.988 172.311 40.7772 171.781 40.7772 cv
171.251 40.7772 170.742 40.988 170.367 41.363 cv
169.992 41.7381 169.781 42.2468 169.781 42.7772 cv
169.781 43.3076 169.992 43.8164 170.367 44.1914 cv
170.742 44.5665 171.251 44.7772 171.781 44.7772 cv
cp
f
173.026 165.974 mo
173.557 165.974 174.065 165.764 174.44 165.389 cv
174.816 165.014 175.026 164.505 175.026 163.974 cv
175.026 163.444 174.816 162.935 174.44 162.56 cv
174.065 162.185 173.557 161.974 173.026 161.974 cv
172.496 161.974 171.987 162.185 171.612 162.56 cv
171.237 162.935 171.026 163.444 171.026 163.974 cv
171.026 164.505 171.237 165.014 171.612 165.389 cv
171.987 165.764 172.496 165.974 173.026 165.974 cv
cp
f
175.709 74.6844 mo
176.239 74.6844 176.748 74.4737 177.123 74.0986 cv
177.498 73.7236 177.709 73.2148 177.709 72.6844 cv
177.709 72.154 177.498 71.6452 177.123 71.2702 cv
176.748 70.8951 176.239 70.6844 175.709 70.6844 cv
175.178 70.6844 174.67 70.8951 174.295 71.2702 cv
173.92 71.6452 173.709 72.154 173.709 72.6844 cv
173.709 73.2148 173.92 73.7236 174.295 74.0986 cv
174.67 74.4737 175.178 74.6844 175.709 74.6844 cv
cp
f
172.292 125.732 mo
172.822 125.732 173.331 125.521 173.706 125.146 cv
174.081 124.771 174.292 124.262 174.292 123.732 cv
174.292 123.201 174.081 122.692 173.706 122.317 cv
173.331 121.942 172.822 121.732 172.292 121.732 cv
171.761 121.732 171.252 121.942 170.877 122.317 cv
170.502 122.692 170.292 123.201 170.292 123.732 cv
170.292 124.262 170.502 124.771 170.877 125.146 cv
171.252 125.521 171.761 125.732 172.292 125.732 cv
cp
f
168.158 37.7214 mo
168.689 37.7214 169.197 37.5107 169.572 37.1357 cv
169.947 36.7606 170.158 36.2518 170.158 35.7214 cv
170.158 35.191 169.947 34.6823 169.572 34.3072 cv
169.197 33.9322 168.689 33.7214 168.158 33.7214 cv
167.628 33.7214 167.119 33.9322 166.744 34.3072 cv
166.369 34.6823 166.158 35.191 166.158 35.7214 cv
166.158 36.2518 166.369 36.7606 166.744 37.1357 cv
167.119 37.5107 167.628 37.7214 168.158 37.7214 cv
cp
f
168.862 162.606 mo
169.393 162.606 169.901 162.395 170.276 162.02 cv
170.652 161.645 170.862 161.136 170.862 160.606 cv
170.862 160.075 170.652 159.567 170.276 159.192 cv
169.901 158.817 169.393 158.606 168.862 158.606 cv
168.332 158.606 167.823 158.817 167.448 159.192 cv
167.073 159.567 166.862 160.075 166.862 160.606 cv
166.862 161.136 167.073 161.645 167.448 162.02 cv
167.823 162.395 168.332 162.606 168.862 162.606 cv
cp
f
170.91 201.059 mo
171.441 201.059 171.949 200.848 172.324 200.473 cv
172.7 200.098 172.91 199.589 172.91 199.059 cv
172.91 198.528 172.7 198.019 172.324 197.644 cv
171.949 197.269 171.441 197.059 170.91 197.059 cv
170.38 197.059 169.871 197.269 169.496 197.644 cv
169.121 198.019 168.91 198.528 168.91 199.059 cv
168.91 199.589 169.121 200.098 169.496 200.473 cv
169.871 200.848 170.38 201.059 170.91 201.059 cv
cp
f
170.019 193.269 mo
170.55 193.269 171.059 193.058 171.434 192.683 cv
171.809 192.308 172.019 191.799 172.019 191.269 cv
172.019 190.739 171.809 190.23 171.434 189.855 cv
171.059 189.48 170.55 189.269 170.019 189.269 cv
169.489 189.269 168.98 189.48 168.605 189.855 cv
168.23 190.23 168.019 190.739 168.019 191.269 cv
168.019 191.799 168.23 192.308 168.605 192.683 cv
168.98 193.058 169.489 193.269 170.019 193.269 cv
cp
f
176.18 202.42 mo
176.71 202.42 177.219 202.209 177.594 201.834 cv
177.969 201.459 178.18 200.95 178.18 200.42 cv
178.18 199.889 177.969 199.381 177.594 199.006 cv
177.219 198.631 176.71 198.42 176.18 198.42 cv
175.649 198.42 175.14 198.631 174.765 199.006 cv
174.39 199.381 174.18 199.889 174.18 200.42 cv
174.18 200.95 174.39 201.459 174.765 201.834 cv
175.14 202.209 175.649 202.42 176.18 202.42 cv
cp
f
173.482 108.843 mo
174.012 108.843 174.521 108.632 174.896 108.257 cv
175.271 107.882 175.482 107.373 175.482 106.843 cv
175.482 106.312 175.271 105.803 174.896 105.428 cv
174.521 105.053 174.012 104.843 173.482 104.843 cv
172.952 104.843 172.443 105.053 172.068 105.428 cv
171.693 105.803 171.482 106.312 171.482 106.843 cv
171.482 107.373 171.693 107.882 172.068 108.257 cv
172.443 108.632 172.952 108.843 173.482 108.843 cv
cp
f
169.58 152.797 mo
170.111 152.797 170.619 152.586 170.995 152.211 cv
171.37 151.836 171.58 151.327 171.58 150.797 cv
171.58 150.266 171.37 149.757 170.995 149.382 cv
170.619 149.007 170.111 148.797 169.58 148.797 cv
169.05 148.797 168.541 149.007 168.166 149.382 cv
167.791 149.757 167.58 150.266 167.58 150.797 cv
167.58 151.327 167.791 151.836 168.166 152.211 cv
168.541 152.586 169.05 152.797 169.58 152.797 cv
cp
f
168.478 177.684 mo
169.009 177.684 169.518 177.474 169.893 177.099 cv
170.268 176.724 170.478 176.215 170.478 175.684 cv
170.478 175.154 170.268 174.645 169.893 174.27 cv
169.518 173.895 169.009 173.684 168.478 173.684 cv
167.948 173.684 167.439 173.895 167.064 174.27 cv
166.689 174.645 166.478 175.154 166.478 175.684 cv
166.478 176.215 166.689 176.724 167.064 177.099 cv
167.439 177.474 167.948 177.684 168.478 177.684 cv
cp
f
170.653 175.929 mo
171.184 175.929 171.692 175.718 172.067 175.343 cv
172.442 174.968 172.653 174.46 172.653 173.929 cv
172.653 173.399 172.442 172.89 172.067 172.515 cv
171.692 172.14 171.184 171.929 170.653 171.929 cv
170.123 171.929 169.614 172.14 169.239 172.515 cv
168.864 172.89 168.653 173.399 168.653 173.929 cv
168.653 174.46 168.864 174.968 169.239 175.343 cv
169.614 175.718 170.123 175.929 170.653 175.929 cv
cp
f
170.175 193.847 mo
170.706 193.847 171.215 193.636 171.59 193.261 cv
171.965 192.886 172.175 192.378 172.175 191.847 cv
172.175 191.317 171.965 190.808 171.59 190.433 cv
171.215 190.058 170.706 189.847 170.175 189.847 cv
169.645 189.847 169.136 190.058 168.761 190.433 cv
168.386 190.808 168.175 191.317 168.175 191.847 cv
168.175 192.378 168.386 192.886 168.761 193.261 cv
169.136 193.636 169.645 193.847 170.175 193.847 cv
cp
f
167.557 38.1254 mo
168.087 38.1254 168.596 37.9147 168.971 37.5396 cv
169.346 37.1646 169.557 36.6558 169.557 36.1254 cv
169.557 35.595 169.346 35.0863 168.971 34.7112 cv
168.596 34.3362 168.087 34.1254 167.557 34.1254 cv
167.026 34.1254 166.518 34.3362 166.143 34.7112 cv
165.768 35.0863 165.557 35.595 165.557 36.1254 cv
165.557 36.6558 165.768 37.1646 166.143 37.5396 cv
166.518 37.9147 167.026 38.1254 167.557 38.1254 cv
cp
f
171.424 80.2464 mo
171.954 80.2464 172.463 80.0357 172.838 79.6606 cv
173.213 79.2855 173.424 78.7768 173.424 78.2464 cv
173.424 77.716 173.213 77.2072 172.838 76.8322 cv
172.463 76.4571 171.954 76.2464 171.424 76.2464 cv
170.894 76.2464 170.385 76.4571 170.01 76.8322 cv
169.635 77.2072 169.424 77.716 169.424 78.2464 cv
169.424 78.7768 169.635 79.2855 170.01 79.6606 cv
170.385 80.0357 170.894 80.2464 171.424 80.2464 cv
cp
f
172.221 137.865 mo
172.751 137.865 173.26 137.654 173.635 137.279 cv
174.01 136.904 174.221 136.395 174.221 135.865 cv
174.221 135.335 174.01 134.826 173.635 134.451 cv
173.26 134.076 172.751 133.865 172.221 133.865 cv
171.69 133.865 171.181 134.076 170.806 134.451 cv
170.431 134.826 170.221 135.335 170.221 135.865 cv
170.221 136.395 170.431 136.904 170.806 137.279 cv
171.181 137.654 171.69 137.865 172.221 137.865 cv
cp
f
169.666 63.2248 mo
170.196 63.2248 170.705 63.0141 171.08 62.639 cv
171.455 62.264 171.666 61.7552 171.666 61.2248 cv
171.666 60.6944 171.455 60.1857 171.08 59.8106 cv
170.705 59.4356 170.196 59.2248 169.666 59.2248 cv
169.135 59.2248 168.627 59.4356 168.251 59.8106 cv
167.876 60.1857 167.666 60.6944 167.666 61.2248 cv
167.666 61.7552 167.876 62.264 168.251 62.639 cv
168.627 63.0141 169.135 63.2248 169.666 63.2248 cv
cp
f
174.073 76.0876 mo
174.604 76.0876 175.113 75.8768 175.488 75.5018 cv
175.863 75.1267 176.073 74.618 176.073 74.0876 cv
176.073 73.5572 175.863 73.0484 175.488 72.6733 cv
175.113 72.2983 174.604 72.0876 174.073 72.0876 cv
173.543 72.0876 173.034 72.2983 172.659 72.6733 cv
172.284 73.0484 172.073 73.5572 172.073 74.0876 cv
172.073 74.618 172.284 75.1267 172.659 75.5018 cv
173.034 75.8768 173.543 76.0876 174.073 76.0876 cv
cp
f
176.047 63.3858 mo
176.578 63.3858 177.087 63.1751 177.462 62.8001 cv
177.837 62.425 178.047 61.9162 178.047 61.3858 cv
178.047 60.8554 177.837 60.3467 177.462 59.9716 cv
177.087 59.5966 176.578 59.3858 176.047 59.3858 cv
175.517 59.3858 175.008 59.5966 174.633 59.9716 cv
174.258 60.3467 174.047 60.8554 174.047 61.3858 cv
174.047 61.9162 174.258 62.425 174.633 62.8001 cv
175.008 63.1751 175.517 63.3858 176.047 63.3858 cv
cp
f
166.836 208.414 mo
167.366 208.414 167.875 208.204 168.25 207.828 cv
168.625 207.453 168.836 206.945 168.836 206.414 cv
168.836 205.884 168.625 205.375 168.25 205 cv
167.875 204.625 167.366 204.414 166.836 204.414 cv
166.306 204.414 165.797 204.625 165.422 205 cv
165.047 205.375 164.836 205.884 164.836 206.414 cv
164.836 206.945 165.047 207.453 165.422 207.828 cv
165.797 208.204 166.306 208.414 166.836 208.414 cv
cp
f
174.087 62.0529 mo
174.617 62.0529 175.126 61.8422 175.501 61.4672 cv
175.876 61.0921 176.087 60.5833 176.087 60.0529 cv
176.087 59.5225 175.876 59.0138 175.501 58.6387 cv
175.126 58.2637 174.617 58.0529 174.087 58.0529 cv
173.557 58.0529 173.048 58.2637 172.673 58.6387 cv
172.298 59.0138 172.087 59.5225 172.087 60.0529 cv
172.087 60.5833 172.298 61.0921 172.673 61.4672 cv
173.048 61.8422 173.557 62.0529 174.087 62.0529 cv
cp
f
170.423 122.339 mo
170.954 122.339 171.463 122.128 171.838 121.753 cv
172.213 121.378 172.423 120.869 172.423 120.339 cv
172.423 119.808 172.213 119.3 171.838 118.925 cv
171.463 118.549 170.954 118.339 170.423 118.339 cv
169.893 118.339 169.384 118.549 169.009 118.925 cv
168.634 119.3 168.423 119.808 168.423 120.339 cv
168.423 120.869 168.634 121.378 169.009 121.753 cv
169.384 122.128 169.893 122.339 170.423 122.339 cv
cp
f
168.168 58.7249 mo
168.699 58.7249 169.207 58.5142 169.582 58.1391 cv
169.957 57.7641 170.168 57.2553 170.168 56.7249 cv
170.168 56.1945 169.957 55.6858 169.582 55.3107 cv
169.207 54.9356 168.699 54.7249 168.168 54.7249 cv
167.638 54.7249 167.129 54.9356 166.754 55.3107 cv
166.379 55.6858 166.168 56.1945 166.168 56.7249 cv
166.168 57.2553 166.379 57.7641 166.754 58.1391 cv
167.129 58.5142 167.638 58.7249 168.168 58.7249 cv
cp
f
170.409 169.048 mo
170.939 169.048 171.448 168.837 171.823 168.462 cv
172.198 168.087 172.409 167.578 172.409 167.048 cv
172.409 166.517 172.198 166.009 171.823 165.634 cv
171.448 165.259 170.939 165.048 170.409 165.048 cv
169.879 165.048 169.37 165.259 168.995 165.634 cv
168.62 166.009 168.409 166.517 168.409 167.048 cv
168.409 167.578 168.62 168.087 168.995 168.462 cv
169.37 168.837 169.879 169.048 170.409 169.048 cv
cp
f
173.854 73.9763 mo
174.384 73.9763 174.893 73.7656 175.268 73.3905 cv
175.643 73.0155 175.854 72.5067 175.854 71.9763 cv
175.854 71.4459 175.643 70.9371 175.268 70.5621 cv
174.893 70.187 174.384 69.9763 173.854 69.9763 cv
173.324 69.9763 172.815 70.187 172.44 70.5621 cv
172.065 70.9371 171.854 71.4459 171.854 71.9763 cv
171.854 72.5067 172.065 73.0155 172.44 73.3905 cv
172.815 73.7656 173.324 73.9763 173.854 73.9763 cv
cp
f
169.805 143.05 mo
170.335 143.05 170.844 142.84 171.219 142.465 cv
171.594 142.09 171.805 141.581 171.805 141.05 cv
171.805 140.52 171.594 140.011 171.219 139.636 cv
170.844 139.261 170.335 139.05 169.805 139.05 cv
169.274 139.05 168.766 139.261 168.39 139.636 cv
168.015 140.011 167.805 140.52 167.805 141.05 cv
167.805 141.581 168.015 142.09 168.39 142.465 cv
168.766 142.84 169.274 143.05 169.805 143.05 cv
cp
f
167.195 55.5872 mo
167.725 55.5872 168.234 55.3765 168.609 55.0014 cv
168.984 54.6264 169.195 54.1176 169.195 53.5872 cv
169.195 53.0568 168.984 52.5481 168.609 52.173 cv
168.234 51.798 167.725 51.5872 167.195 51.5872 cv
166.665 51.5872 166.156 51.798 165.781 52.173 cv
165.406 52.5481 165.195 53.0568 165.195 53.5872 cv
165.195 54.1176 165.406 54.6264 165.781 55.0014 cv
166.156 55.3765 166.665 55.5872 167.195 55.5872 cv
cp
f
172.364 186.388 mo
172.895 186.388 173.403 186.178 173.778 185.803 cv
174.154 185.428 174.364 184.919 174.364 184.388 cv
174.364 183.858 174.154 183.349 173.778 182.974 cv
173.403 182.599 172.895 182.388 172.364 182.388 cv
171.834 182.388 171.325 182.599 170.95 182.974 cv
170.575 183.349 170.364 183.858 170.364 184.388 cv
170.364 184.919 170.575 185.428 170.95 185.803 cv
171.325 186.178 171.834 186.388 172.364 186.388 cv
cp
f
166.837 44.8836 mo
167.368 44.8836 167.876 44.6729 168.251 44.2979 cv
168.626 43.9228 168.837 43.414 168.837 42.8836 cv
168.837 42.3532 168.626 41.8445 168.251 41.4694 cv
167.876 41.0944 167.368 40.8836 166.837 40.8836 cv
166.307 40.8836 165.798 41.0944 165.423 41.4694 cv
165.048 41.8445 164.837 42.3532 164.837 42.8836 cv
164.837 43.414 165.048 43.9228 165.423 44.2979 cv
165.798 44.6729 166.307 44.8836 166.837 44.8836 cv
cp
f
173.849 24.8269 mo
174.38 24.8269 174.889 24.6162 175.264 24.2411 cv
175.639 23.8661 175.849 23.3573 175.849 22.8269 cv
175.849 22.2965 175.639 21.7877 175.264 21.4127 cv
174.889 21.0376 174.38 20.8269 173.849 20.8269 cv
173.319 20.8269 172.81 21.0376 172.435 21.4127 cv
172.06 21.7877 171.849 22.2965 171.849 22.8269 cv
171.849 23.3573 172.06 23.8661 172.435 24.2411 cv
172.81 24.6162 173.319 24.8269 173.849 24.8269 cv
cp
f
172.995 81.5112 mo
173.525 81.5112 174.034 81.3005 174.409 80.9254 cv
174.784 80.5504 174.995 80.0416 174.995 79.5112 cv
174.995 78.9808 174.784 78.4721 174.409 78.097 cv
174.034 77.722 173.525 77.5112 172.995 77.5112 cv
172.465 77.5112 171.956 77.722 171.581 78.097 cv
171.206 78.4721 170.995 78.9808 170.995 79.5112 cv
170.995 80.0416 171.206 80.5504 171.581 80.9254 cv
171.956 81.3005 172.465 81.5112 172.995 81.5112 cv
cp
f
172.384 75.23 mo
172.915 75.23 173.423 75.0193 173.798 74.6443 cv
174.173 74.2692 174.384 73.7604 174.384 73.23 cv
174.384 72.6996 174.173 72.1909 173.798 71.8158 cv
173.423 71.4408 172.915 71.23 172.384 71.23 cv
171.854 71.23 171.345 71.4408 170.97 71.8158 cv
170.595 72.1909 170.384 72.6996 170.384 73.23 cv
170.384 73.7604 170.595 74.2692 170.97 74.6443 cv
171.345 75.0193 171.854 75.23 172.384 75.23 cv
cp
f
171.434 183.741 mo
171.964 183.741 172.473 183.53 172.848 183.155 cv
173.223 182.78 173.434 182.271 173.434 181.741 cv
173.434 181.211 173.223 180.702 172.848 180.327 cv
172.473 179.952 171.964 179.741 171.434 179.741 cv
170.903 179.741 170.395 179.952 170.02 180.327 cv
169.644 180.702 169.434 181.211 169.434 181.741 cv
169.434 182.271 169.644 182.78 170.02 183.155 cv
170.395 183.53 170.903 183.741 171.434 183.741 cv
cp
f
168.154 61.146 mo
168.685 61.146 169.193 60.9352 169.568 60.5602 cv
169.943 60.1851 170.154 59.6764 170.154 59.146 cv
170.154 58.6156 169.943 58.1068 169.568 57.7318 cv
169.193 57.3567 168.685 57.146 168.154 57.146 cv
167.624 57.146 167.115 57.3567 166.74 57.7318 cv
166.365 58.1068 166.154 58.6156 166.154 59.146 cv
166.154 59.6764 166.365 60.1851 166.74 60.5602 cv
167.115 60.9352 167.624 61.146 168.154 61.146 cv
cp
f
174.598 45.7574 mo
175.128 45.7574 175.637 45.5467 176.012 45.1717 cv
176.387 44.7966 176.598 44.2879 176.598 43.7574 cv
176.598 43.227 176.387 42.7183 176.012 42.3432 cv
175.637 41.9682 175.128 41.7574 174.598 41.7574 cv
174.067 41.7574 173.559 41.9682 173.184 42.3432 cv
172.808 42.7183 172.598 43.227 172.598 43.7574 cv
172.598 44.2879 172.808 44.7966 173.184 45.1717 cv
173.559 45.5467 174.067 45.7574 174.598 45.7574 cv
cp
f
173.178 40.8953 mo
173.708 40.8953 174.217 40.6845 174.592 40.3095 cv
174.967 39.9344 175.178 39.4257 175.178 38.8953 cv
175.178 38.3649 174.967 37.8561 174.592 37.4811 cv
174.217 37.106 173.708 36.8953 173.178 36.8953 cv
172.648 36.8953 172.139 37.106 171.764 37.4811 cv
171.389 37.8561 171.178 38.3649 171.178 38.8953 cv
171.178 39.4257 171.389 39.9344 171.764 40.3095 cv
172.139 40.6845 172.648 40.8953 173.178 40.8953 cv
cp
f
173.014 45.1605 mo
173.544 45.1605 174.053 44.9498 174.428 44.5747 cv
174.803 44.1997 175.014 43.6909 175.014 43.1605 cv
175.014 42.6301 174.803 42.1214 174.428 41.7463 cv
174.053 41.3713 173.544 41.1605 173.014 41.1605 cv
172.484 41.1605 171.975 41.3713 171.6 41.7463 cv
171.225 42.1214 171.014 42.6301 171.014 43.1605 cv
171.014 43.6909 171.225 44.1997 171.6 44.5747 cv
171.975 44.9498 172.484 45.1605 173.014 45.1605 cv
cp
f
175.834 54.1751 mo
176.364 54.1751 176.873 53.9644 177.248 53.5893 cv
177.623 53.2142 177.834 52.7055 177.834 52.1751 cv
177.834 51.6447 177.623 51.1359 177.248 50.7609 cv
176.873 50.3858 176.364 50.1751 175.834 50.1751 cv
175.304 50.1751 174.795 50.3858 174.42 50.7609 cv
174.045 51.1359 173.834 51.6447 173.834 52.1751 cv
173.834 52.7055 174.045 53.2142 174.42 53.5893 cv
174.795 53.9644 175.304 54.1751 175.834 54.1751 cv
cp
f
174.435 153.99 mo
174.966 153.99 175.475 153.78 175.85 153.405 cv
176.225 153.03 176.435 152.521 176.435 151.99 cv
176.435 151.46 176.225 150.951 175.85 150.576 cv
175.475 150.201 174.966 149.99 174.435 149.99 cv
173.905 149.99 173.396 150.201 173.021 150.576 cv
172.646 150.951 172.435 151.46 172.435 151.99 cv
172.435 152.521 172.646 153.03 173.021 153.405 cv
173.396 153.78 173.905 153.99 174.435 153.99 cv
cp
f
171.666 57.3885 mo
172.197 57.3885 172.705 57.1777 173.08 56.8027 cv
173.455 56.4276 173.666 55.9189 173.666 55.3885 cv
173.666 54.8581 173.455 54.3493 173.08 53.9742 cv
172.705 53.5992 172.197 53.3885 171.666 53.3885 cv
171.136 53.3885 170.627 53.5992 170.252 53.9742 cv
169.877 54.3493 169.666 54.8581 169.666 55.3885 cv
169.666 55.9189 169.877 56.4276 170.252 56.8027 cv
170.627 57.1777 171.136 57.3885 171.666 57.3885 cv
cp
f
175.853 67.7981 mo
176.384 67.7981 176.892 67.5874 177.267 67.2123 cv
177.642 66.8373 177.853 66.3285 177.853 65.7981 cv
177.853 65.2677 177.642 64.7589 177.267 64.3839 cv
176.892 64.0088 176.384 63.7981 175.853 63.7981 cv
175.323 63.7981 174.814 64.0088 174.439 64.3839 cv
174.064 64.7589 173.853 65.2677 173.853 65.7981 cv
173.853 66.3285 174.064 66.8373 174.439 67.2123 cv
174.814 67.5874 175.323 67.7981 175.853 67.7981 cv
cp
f
171.446 61.9104 mo
171.977 61.9104 172.486 61.6996 172.861 61.3246 cv
173.236 60.9495 173.446 60.4408 173.446 59.9104 cv
173.446 59.38 173.236 58.8712 172.861 58.4961 cv
172.486 58.1211 171.977 57.9104 171.446 57.9104 cv
170.916 57.9104 170.407 58.1211 170.032 58.4961 cv
169.657 58.8712 169.446 59.38 169.446 59.9104 cv
169.446 60.4408 169.657 60.9495 170.032 61.3246 cv
170.407 61.6996 170.916 61.9104 171.446 61.9104 cv
cp
f
170.293 146.791 mo
170.823 146.791 171.332 146.58 171.707 146.205 cv
172.082 145.83 172.293 145.321 172.293 144.791 cv
172.293 144.261 172.082 143.752 171.707 143.377 cv
171.332 143.002 170.823 142.791 170.293 142.791 cv
169.762 142.791 169.253 143.002 168.878 143.377 cv
168.503 143.752 168.293 144.261 168.293 144.791 cv
168.293 145.321 168.503 145.83 168.878 146.205 cv
169.253 146.58 169.762 146.791 170.293 146.791 cv
cp
f
218.986 87.7559 mo
219.516 87.7559 220.025 87.5452 220.4 87.1701 cv
220.775 86.7951 220.986 86.2863 220.986 85.7559 cv
220.986 85.2255 220.775 84.7168 220.4 84.3417 cv
220.025 83.9667 219.516 83.7559 218.986 83.7559 cv
218.455 83.7559 217.947 83.9667 217.571 84.3417 cv
217.196 84.7168 216.986 85.2255 216.986 85.7559 cv
216.986 86.2863 217.196 86.7951 217.571 87.1701 cv
217.947 87.5452 218.455 87.7559 218.986 87.7559 cv
cp
f
224.293 53.2322 mo
224.824 53.2322 225.332 53.0214 225.707 52.6464 cv
226.082 52.2713 226.293 51.7626 226.293 51.2322 cv
226.293 50.7018 226.082 50.193 225.707 49.818 cv
225.332 49.4429 224.824 49.2322 224.293 49.2322 cv
223.763 49.2322 223.254 49.4429 222.879 49.818 cv
222.504 50.193 222.293 50.7018 222.293 51.2322 cv
222.293 51.7626 222.504 52.2713 222.879 52.6464 cv
223.254 53.0214 223.763 53.2322 224.293 53.2322 cv
cp
f
219.27 206.128 mo
219.8 206.128 220.309 205.917 220.684 205.542 cv
221.059 205.167 221.27 204.659 221.27 204.128 cv
221.27 203.598 221.059 203.089 220.684 202.714 cv
220.309 202.339 219.8 202.128 219.27 202.128 cv
218.739 202.128 218.23 202.339 217.855 202.714 cv
217.48 203.089 217.27 203.598 217.27 204.128 cv
217.27 204.659 217.48 205.167 217.855 205.542 cv
218.23 205.917 218.739 206.128 219.27 206.128 cv
cp
f
218.405 186.125 mo
218.935 186.125 219.444 185.914 219.819 185.539 cv
220.194 185.164 220.405 184.655 220.405 184.125 cv
220.405 183.595 220.194 183.086 219.819 182.711 cv
219.444 182.336 218.935 182.125 218.405 182.125 cv
217.875 182.125 217.366 182.336 216.991 182.711 cv
216.616 183.086 216.405 183.595 216.405 184.125 cv
216.405 184.655 216.616 185.164 216.991 185.539 cv
217.366 185.914 217.875 186.125 218.405 186.125 cv
cp
f
220.056 47.6481 mo
220.586 47.6481 221.095 47.4374 221.47 47.0623 cv
221.845 46.6873 222.056 46.1785 222.056 45.6481 cv
222.056 45.1177 221.845 44.609 221.47 44.2339 cv
221.095 43.8589 220.586 43.6481 220.056 43.6481 cv
219.525 43.6481 219.016 43.8589 218.641 44.2339 cv
218.266 44.609 218.056 45.1177 218.056 45.6481 cv
218.056 46.1785 218.266 46.6873 218.641 47.0623 cv
219.016 47.4374 219.525 47.6481 220.056 47.6481 cv
cp
f
217.591 167.635 mo
218.122 167.635 218.63 167.424 219.005 167.049 cv
219.381 166.674 219.591 166.166 219.591 165.635 cv
219.591 165.105 219.381 164.596 219.005 164.221 cv
218.63 163.846 218.122 163.635 217.591 163.635 cv
217.061 163.635 216.552 163.846 216.177 164.221 cv
215.802 164.596 215.591 165.105 215.591 165.635 cv
215.591 166.166 215.802 166.674 216.177 167.049 cv
216.552 167.424 217.061 167.635 217.591 167.635 cv
cp
f
224.975 39.3603 mo
225.506 39.3603 226.014 39.1496 226.389 38.7745 cv
226.764 38.3995 226.975 37.8907 226.975 37.3603 cv
226.975 36.8299 226.764 36.3212 226.389 35.9461 cv
226.014 35.5711 225.506 35.3603 224.975 35.3603 cv
224.445 35.3603 223.936 35.5711 223.561 35.9461 cv
223.186 36.3212 222.975 36.8299 222.975 37.3603 cv
222.975 37.8907 223.186 38.3995 223.561 38.7745 cv
223.936 39.1496 224.445 39.3603 224.975 39.3603 cv
cp
f
220.21 165.392 mo
220.74 165.392 221.249 165.182 221.624 164.807 cv
221.999 164.431 222.21 163.923 222.21 163.392 cv
222.21 162.862 221.999 162.353 221.624 161.978 cv
221.249 161.603 220.74 161.392 220.21 161.392 cv
219.679 161.392 219.171 161.603 218.796 161.978 cv
218.42 162.353 218.21 162.862 218.21 163.392 cv
218.21 163.923 218.42 164.431 218.796 164.807 cv
219.171 165.182 219.679 165.392 220.21 165.392 cv
cp
f
218.305 70.1482 mo
218.836 70.1482 219.344 69.9374 219.719 69.5624 cv
220.094 69.1873 220.305 68.6786 220.305 68.1482 cv
220.305 67.6178 220.094 67.109 219.719 66.734 cv
219.344 66.3589 218.836 66.1482 218.305 66.1482 cv
217.775 66.1482 217.266 66.3589 216.891 66.734 cv
216.516 67.109 216.305 67.6178 216.305 68.1482 cv
216.305 68.6786 216.516 69.1873 216.891 69.5624 cv
217.266 69.9374 217.775 70.1482 218.305 70.1482 cv
cp
f
219.643 106.985 mo
220.174 106.985 220.683 106.774 221.058 106.399 cv
221.433 106.024 221.643 105.515 221.643 104.985 cv
221.643 104.454 221.433 103.945 221.058 103.57 cv
220.683 103.195 220.174 102.985 219.643 102.985 cv
219.113 102.985 218.604 103.195 218.229 103.57 cv
217.854 103.945 217.643 104.454 217.643 104.985 cv
217.643 105.515 217.854 106.024 218.229 106.399 cv
218.604 106.774 219.113 106.985 219.643 106.985 cv
cp
f
222.279 56.5548 mo
222.81 56.5548 223.318 56.3441 223.693 55.969 cv
224.069 55.594 224.279 55.0852 224.279 54.5548 cv
224.279 54.0244 224.069 53.5156 223.693 53.1406 cv
223.318 52.7655 222.81 52.5548 222.279 52.5548 cv
221.749 52.5548 221.24 52.7655 220.865 53.1406 cv
220.49 53.5156 220.279 54.0244 220.279 54.5548 cv
220.279 55.0852 220.49 55.594 220.865 55.969 cv
221.24 56.3441 221.749 56.5548 222.279 56.5548 cv
cp
f
217.609 169.686 mo
218.139 169.686 218.648 169.475 219.023 169.1 cv
219.398 168.725 219.609 168.216 219.609 167.686 cv
219.609 167.155 219.398 166.647 219.023 166.272 cv
218.648 165.897 218.139 165.686 217.609 165.686 cv
217.078 165.686 216.57 165.897 216.195 166.272 cv
215.82 166.647 215.609 167.155 215.609 167.686 cv
215.609 168.216 215.82 168.725 216.195 169.1 cv
216.57 169.475 217.078 169.686 217.609 169.686 cv
cp
f
222.891 204.569 mo
223.422 204.569 223.93 204.358 224.306 203.983 cv
224.681 203.608 224.891 203.099 224.891 202.569 cv
224.891 202.038 224.681 201.53 224.306 201.154 cv
223.93 200.779 223.422 200.569 222.891 200.569 cv
222.361 200.569 221.852 200.779 221.477 201.154 cv
221.102 201.53 220.891 202.038 220.891 202.569 cv
220.891 203.099 221.102 203.608 221.477 203.983 cv
221.852 204.358 222.361 204.569 222.891 204.569 cv
cp
f
218.706 193.746 mo
219.237 193.746 219.745 193.535 220.121 193.16 cv
220.496 192.785 220.706 192.276 220.706 191.746 cv
220.706 191.216 220.496 190.707 220.121 190.332 cv
219.745 189.957 219.237 189.746 218.706 189.746 cv
218.176 189.746 217.667 189.957 217.292 190.332 cv
216.917 190.707 216.706 191.216 216.706 191.746 cv
216.706 192.276 216.917 192.785 217.292 193.16 cv
217.667 193.535 218.176 193.746 218.706 193.746 cv
cp
f
223.699 197.503 mo
224.229 197.503 224.738 197.292 225.113 196.917 cv
225.488 196.542 225.699 196.033 225.699 195.503 cv
225.699 194.973 225.488 194.464 225.113 194.089 cv
224.738 193.714 224.229 193.503 223.699 193.503 cv
223.168 193.503 222.659 193.714 222.284 194.089 cv
221.909 194.464 221.699 194.973 221.699 195.503 cv
221.699 196.033 221.909 196.542 222.284 196.917 cv
222.659 197.292 223.168 197.503 223.699 197.503 cv
cp
f
218.475 153.933 mo
219.006 153.933 219.514 153.722 219.889 153.347 cv
220.264 152.972 220.475 152.463 220.475 151.933 cv
220.475 151.402 220.264 150.894 219.889 150.519 cv
219.514 150.144 219.006 149.933 218.475 149.933 cv
217.945 149.933 217.436 150.144 217.061 150.519 cv
216.686 150.894 216.475 151.402 216.475 151.933 cv
216.475 152.463 216.686 152.972 217.061 153.347 cv
217.436 153.722 217.945 153.933 218.475 153.933 cv
cp
f
218.724 156.627 mo
219.254 156.627 219.763 156.416 220.138 156.041 cv
220.513 155.666 220.724 155.157 220.724 154.627 cv
220.724 154.096 220.513 153.587 220.138 153.212 cv
219.763 152.837 219.254 152.627 218.724 152.627 cv
218.194 152.627 217.685 152.837 217.31 153.212 cv
216.935 153.587 216.724 154.096 216.724 154.627 cv
216.724 155.157 216.935 155.666 217.31 156.041 cv
217.685 156.416 218.194 156.627 218.724 156.627 cv
cp
f
217.885 171.725 mo
218.416 171.725 218.924 171.514 219.3 171.139 cv
219.675 170.764 219.885 170.255 219.885 169.725 cv
219.885 169.194 219.675 168.685 219.3 168.31 cv
218.924 167.935 218.416 167.725 217.885 167.725 cv
217.355 167.725 216.846 167.935 216.471 168.31 cv
216.096 168.685 215.885 169.194 215.885 169.725 cv
215.885 170.255 216.096 170.764 216.471 171.139 cv
216.846 171.514 217.355 171.725 217.885 171.725 cv
cp
f
225.229 169.808 mo
225.76 169.808 226.268 169.597 226.643 169.222 cv
227.018 168.847 227.229 168.338 227.229 167.808 cv
227.229 167.278 227.018 166.769 226.643 166.394 cv
226.268 166.019 225.76 165.808 225.229 165.808 cv
224.699 165.808 224.19 166.019 223.815 166.394 cv
223.44 166.769 223.229 167.278 223.229 167.808 cv
223.229 168.338 223.44 168.847 223.815 169.222 cv
224.19 169.597 224.699 169.808 225.229 169.808 cv
cp
f
224.851 190.291 mo
225.381 190.291 225.89 190.08 226.265 189.705 cv
226.64 189.33 226.851 188.821 226.851 188.291 cv
226.851 187.761 226.64 187.252 226.265 186.877 cv
225.89 186.502 225.381 186.291 224.851 186.291 cv
224.32 186.291 223.812 186.502 223.436 186.877 cv
223.061 187.252 222.851 187.761 222.851 188.291 cv
222.851 188.821 223.061 189.33 223.436 189.705 cv
223.812 190.08 224.32 190.291 224.851 190.291 cv
cp
f
218.384 40.9121 mo
218.914 40.9121 219.423 40.7014 219.798 40.3264 cv
220.173 39.9513 220.384 39.4425 220.384 38.9121 cv
220.384 38.3817 220.173 37.873 219.798 37.4979 cv
219.423 37.1229 218.914 36.9121 218.384 36.9121 cv
217.853 36.9121 217.344 37.1229 216.969 37.4979 cv
216.594 37.873 216.384 38.3817 216.384 38.9121 cv
216.384 39.4425 216.594 39.9513 216.969 40.3264 cv
217.344 40.7014 217.853 40.9121 218.384 40.9121 cv
cp
f
223.833 54.5504 mo
224.363 54.5504 224.872 54.3397 225.247 53.9646 cv
225.622 53.5896 225.833 53.0808 225.833 52.5504 cv
225.833 52.02 225.622 51.5113 225.247 51.1362 cv
224.872 50.7611 224.363 50.5504 223.833 50.5504 cv
223.302 50.5504 222.794 50.7611 222.419 51.1362 cv
222.044 51.5113 221.833 52.02 221.833 52.5504 cv
221.833 53.0808 222.044 53.5896 222.419 53.9646 cv
222.794 54.3397 223.302 54.5504 223.833 54.5504 cv
cp
f
218.49 136.182 mo
219.021 136.182 219.53 135.972 219.905 135.597 cv
220.28 135.221 220.49 134.713 220.49 134.182 cv
220.49 133.652 220.28 133.143 219.905 132.768 cv
219.53 132.393 219.021 132.182 218.49 132.182 cv
217.96 132.182 217.451 132.393 217.076 132.768 cv
216.701 133.143 216.49 133.652 216.49 134.182 cv
216.49 134.713 216.701 135.221 217.076 135.597 cv
217.451 135.972 217.96 136.182 218.49 136.182 cv
cp
f
222.215 78.3149 mo
222.745 78.3149 223.254 78.1042 223.629 77.7291 cv
224.004 77.354 224.215 76.8453 224.215 76.3149 cv
224.215 75.7845 224.004 75.2757 223.629 74.9007 cv
223.254 74.5256 222.745 74.3149 222.215 74.3149 cv
221.684 74.3149 221.176 74.5256 220.801 74.9007 cv
220.426 75.2757 220.215 75.7845 220.215 76.3149 cv
220.215 76.8453 220.426 77.354 220.801 77.7291 cv
221.176 78.1042 221.684 78.3149 222.215 78.3149 cv
cp
f
221.199 76.6 mo
221.729 76.6 222.238 76.3892 222.613 76.0142 cv
222.988 75.6391 223.199 75.1304 223.199 74.6 cv
223.199 74.0696 222.988 73.5608 222.613 73.1857 cv
222.238 72.8107 221.729 72.6 221.199 72.6 cv
220.668 72.6 220.16 72.8107 219.785 73.1857 cv
219.41 73.5608 219.199 74.0696 219.199 74.6 cv
219.199 75.1304 219.41 75.6391 219.785 76.0142 cv
220.16 76.3892 220.668 76.6 221.199 76.6 cv
cp
f
219.907 56.4258 mo
220.437 56.4258 220.946 56.2151 221.321 55.8401 cv
221.696 55.465 221.907 54.9563 221.907 54.4258 cv
221.907 53.8954 221.696 53.3867 221.321 53.0116 cv
220.946 52.6366 220.437 52.4258 219.907 52.4258 cv
219.377 52.4258 218.868 52.6366 218.493 53.0116 cv
218.118 53.3867 217.907 53.8954 217.907 54.4258 cv
217.907 54.9563 218.118 55.465 218.493 55.8401 cv
218.868 56.2151 219.377 56.4258 219.907 56.4258 cv
cp
f
223.923 191.436 mo
224.453 191.436 224.962 191.226 225.337 190.851 cv
225.712 190.476 225.923 189.967 225.923 189.436 cv
225.923 188.906 225.712 188.397 225.337 188.022 cv
224.962 187.647 224.453 187.436 223.923 187.436 cv
223.393 187.436 222.884 187.647 222.509 188.022 cv
222.134 188.397 221.923 188.906 221.923 189.436 cv
221.923 189.967 222.134 190.476 222.509 190.851 cv
222.884 191.226 223.393 191.436 223.923 191.436 cv
cp
f
220.457 58.3833 mo
220.987 58.3833 221.496 58.1726 221.871 57.7975 cv
222.246 57.4225 222.457 56.9137 222.457 56.3833 cv
222.457 55.8529 222.246 55.3442 221.871 54.9691 cv
221.496 54.5941 220.987 54.3833 220.457 54.3833 cv
219.926 54.3833 219.417 54.5941 219.042 54.9691 cv
218.667 55.3442 218.457 55.8529 218.457 56.3833 cv
218.457 56.9137 218.667 57.4225 219.042 57.7975 cv
219.417 58.1726 219.926 58.3833 220.457 58.3833 cv
cp
f
223.3 143.717 mo
223.83 143.717 224.339 143.506 224.714 143.131 cv
225.089 142.756 225.3 142.247 225.3 141.717 cv
225.3 141.186 225.089 140.678 224.714 140.303 cv
224.339 139.928 223.83 139.717 223.3 139.717 cv
222.77 139.717 222.261 139.928 221.886 140.303 cv
221.511 140.678 221.3 141.186 221.3 141.717 cv
221.3 142.247 221.511 142.756 221.886 143.131 cv
222.261 143.506 222.77 143.717 223.3 143.717 cv
cp
f
216.504 51.8339 mo
217.034 51.8339 217.543 51.6232 217.918 51.2481 cv
218.293 50.8731 218.504 50.3643 218.504 49.8339 cv
218.504 49.3035 218.293 48.7948 217.918 48.4197 cv
217.543 48.0447 217.034 47.8339 216.504 47.8339 cv
215.974 47.8339 215.465 48.0447 215.09 48.4197 cv
214.715 48.7948 214.504 49.3035 214.504 49.8339 cv
214.504 50.3643 214.715 50.8731 215.09 51.2481 cv
215.465 51.6232 215.974 51.8339 216.504 51.8339 cv
cp
f
220.6 181.166 mo
221.13 181.166 221.639 180.955 222.014 180.58 cv
222.389 180.205 222.6 179.696 222.6 179.166 cv
222.6 178.635 222.389 178.126 222.014 177.751 cv
221.639 177.376 221.13 177.166 220.6 177.166 cv
220.07 177.166 219.561 177.376 219.186 177.751 cv
218.811 178.126 218.6 178.635 218.6 179.166 cv
218.6 179.696 218.811 180.205 219.186 180.58 cv
219.561 180.955 220.07 181.166 220.6 181.166 cv
cp
f
218.2 91.5211 mo
218.731 91.5211 219.239 91.3104 219.615 90.9353 cv
219.99 90.5603 220.2 90.0515 220.2 89.5211 cv
220.2 88.9907 219.99 88.4819 219.615 88.1069 cv
219.239 87.7318 218.731 87.5211 218.2 87.5211 cv
217.67 87.5211 217.161 87.7318 216.786 88.1069 cv
216.411 88.4819 216.2 88.9907 216.2 89.5211 cv
216.2 90.0515 216.411 90.5603 216.786 90.9353 cv
217.161 91.3104 217.67 91.5211 218.2 91.5211 cv
cp
f
216.343 141.263 mo
216.874 141.263 217.382 141.052 217.757 140.677 cv
218.132 140.302 218.343 139.793 218.343 139.263 cv
218.343 138.732 218.132 138.223 217.757 137.848 cv
217.382 137.473 216.874 137.263 216.343 137.263 cv
215.813 137.263 215.304 137.473 214.929 137.848 cv
214.554 138.223 214.343 138.732 214.343 139.263 cv
214.343 139.793 214.554 140.302 214.929 140.677 cv
215.304 141.052 215.813 141.263 216.343 141.263 cv
cp
f
217.131 47.9959 mo
217.661 47.9959 218.17 47.7851 218.545 47.4101 cv
218.92 47.035 219.131 46.5263 219.131 45.9959 cv
219.131 45.4654 218.92 44.9567 218.545 44.5816 cv
218.17 44.2066 217.661 43.9959 217.131 43.9959 cv
216.601 43.9959 216.092 44.2066 215.717 44.5816 cv
215.342 44.9567 215.131 45.4654 215.131 45.9959 cv
215.131 46.5263 215.342 47.035 215.717 47.4101 cv
216.092 47.7851 216.601 47.9959 217.131 47.9959 cv
cp
f
225.305 198.519 mo
225.836 198.519 226.345 198.308 226.72 197.933 cv
227.095 197.558 227.305 197.049 227.305 196.519 cv
227.305 195.989 227.095 195.48 226.72 195.105 cv
226.345 194.73 225.836 194.519 225.305 194.519 cv
224.775 194.519 224.266 194.73 223.891 195.105 cv
223.516 195.48 223.305 195.989 223.305 196.519 cv
223.305 197.049 223.516 197.558 223.891 197.933 cv
224.266 198.308 224.775 198.519 225.305 198.519 cv
cp
f
220.666 39.5408 mo
221.196 39.5408 221.705 39.3301 222.08 38.955 cv
222.455 38.58 222.666 38.0712 222.666 37.5408 cv
222.666 37.0104 222.455 36.5016 222.08 36.1266 cv
221.705 35.7515 221.196 35.5408 220.666 35.5408 cv
220.135 35.5408 219.627 35.7515 219.252 36.1266 cv
218.877 36.5016 218.666 37.0104 218.666 37.5408 cv
218.666 38.0712 218.877 38.58 219.252 38.955 cv
219.627 39.3301 220.135 39.5408 220.666 39.5408 cv
cp
f
219.643 26.0668 mo
220.173 26.0668 220.682 25.8561 221.057 25.481 cv
221.432 25.106 221.643 24.5972 221.643 24.0668 cv
221.643 23.5364 221.432 23.0276 221.057 22.6526 cv
220.682 22.2775 220.173 22.0668 219.643 22.0668 cv
219.112 22.0668 218.604 22.2775 218.228 22.6526 cv
217.853 23.0276 217.643 23.5364 217.643 24.0668 cv
217.643 24.5972 217.853 25.106 218.228 25.481 cv
218.604 25.8561 219.112 26.0668 219.643 26.0668 cv
cp
f
225.607 110.327 mo
226.138 110.327 226.646 110.116 227.022 109.741 cv
227.397 109.366 227.607 108.858 227.607 108.327 cv
227.607 107.797 227.397 107.288 227.022 106.913 cv
226.646 106.538 226.138 106.327 225.607 106.327 cv
225.077 106.327 224.568 106.538 224.193 106.913 cv
223.818 107.288 223.607 107.797 223.607 108.327 cv
223.607 108.858 223.818 109.366 224.193 109.741 cv
224.568 110.116 225.077 110.327 225.607 110.327 cv
cp
f
217.966 109.349 mo
218.496 109.349 219.005 109.138 219.38 108.763 cv
219.755 108.388 219.966 107.879 219.966 107.349 cv
219.966 106.818 219.755 106.31 219.38 105.934 cv
219.005 105.559 218.496 105.349 217.966 105.349 cv
217.436 105.349 216.927 105.559 216.552 105.934 cv
216.177 106.31 215.966 106.818 215.966 107.349 cv
215.966 107.879 216.177 108.388 216.552 108.763 cv
216.927 109.138 217.436 109.349 217.966 109.349 cv
cp
f
220.23 181.961 mo
220.76 181.961 221.269 181.75 221.644 181.375 cv
222.019 181 222.23 180.491 222.23 179.961 cv
222.23 179.43 222.019 178.922 221.644 178.547 cv
221.269 178.172 220.76 177.961 220.23 177.961 cv
219.699 177.961 219.191 178.172 218.816 178.547 cv
218.441 178.922 218.23 179.43 218.23 179.961 cv
218.23 180.491 218.441 181 218.816 181.375 cv
219.191 181.75 219.699 181.961 220.23 181.961 cv
cp
f
225.467 154.125 mo
225.998 154.125 226.506 153.914 226.882 153.539 cv
227.257 153.164 227.467 152.656 227.467 152.125 cv
227.467 151.595 227.257 151.086 226.882 150.711 cv
226.506 150.336 225.998 150.125 225.467 150.125 cv
224.937 150.125 224.428 150.336 224.053 150.711 cv
223.678 151.086 223.467 151.595 223.467 152.125 cv
223.467 152.656 223.678 153.164 224.053 153.539 cv
224.428 153.914 224.937 154.125 225.467 154.125 cv
cp
f
219.619 40.8308 mo
220.149 40.8308 220.658 40.6201 221.033 40.245 cv
221.408 39.8699 221.619 39.3612 221.619 38.8308 cv
221.619 38.3004 221.408 37.7916 221.033 37.4166 cv
220.658 37.0415 220.149 36.8308 219.619 36.8308 cv
219.089 36.8308 218.58 37.0415 218.205 37.4166 cv
217.83 37.7916 217.619 38.3004 217.619 38.8308 cv
217.619 39.3612 217.83 39.8699 218.205 40.245 cv
218.58 40.6201 219.089 40.8308 219.619 40.8308 cv
cp
f
222.078 194.676 mo
222.608 194.676 223.117 194.465 223.492 194.09 cv
223.867 193.715 224.078 193.207 224.078 192.676 cv
224.078 192.146 223.867 191.637 223.492 191.262 cv
223.117 190.887 222.608 190.676 222.078 190.676 cv
221.547 190.676 221.039 190.887 220.663 191.262 cv
220.288 191.637 220.078 192.146 220.078 192.676 cv
220.078 193.207 220.288 193.715 220.663 194.09 cv
221.039 194.465 221.547 194.676 222.078 194.676 cv
cp
f
218.578 55.9881 mo
219.108 55.9881 219.617 55.7774 219.992 55.4023 cv
220.367 55.0273 220.578 54.5185 220.578 53.9881 cv
220.578 53.4577 220.367 52.949 219.992 52.5739 cv
219.617 52.1989 219.108 51.9881 218.578 51.9881 cv
218.048 51.9881 217.539 52.1989 217.164 52.5739 cv
216.789 52.949 216.578 53.4577 216.578 53.9881 cv
216.578 54.5185 216.789 55.0273 217.164 55.4023 cv
217.539 55.7774 218.048 55.9881 218.578 55.9881 cv
cp
f
223.948 44.3191 mo
224.478 44.3191 224.987 44.1084 225.362 43.7333 cv
225.737 43.3583 225.948 42.8495 225.948 42.3191 cv
225.948 41.7887 225.737 41.2799 225.362 40.9049 cv
224.987 40.5298 224.478 40.3191 223.948 40.3191 cv
223.418 40.3191 222.909 40.5298 222.534 40.9049 cv
222.159 41.2799 221.948 41.7887 221.948 42.3191 cv
221.948 42.8495 222.159 43.3583 222.534 43.7333 cv
222.909 44.1084 223.418 44.3191 223.948 44.3191 cv
cp
f
219.008 134.685 mo
219.538 134.685 220.047 134.474 220.422 134.099 cv
220.797 133.724 221.008 133.216 221.008 132.685 cv
221.008 132.155 220.797 131.646 220.422 131.271 cv
220.047 130.896 219.538 130.685 219.008 130.685 cv
218.478 130.685 217.969 130.896 217.594 131.271 cv
217.219 131.646 217.008 132.155 217.008 132.685 cv
217.008 133.216 217.219 133.724 217.594 134.099 cv
217.969 134.474 218.478 134.685 219.008 134.685 cv
cp
f
217.753 197.492 mo
218.284 197.492 218.792 197.281 219.167 196.906 cv
219.542 196.531 219.753 196.022 219.753 195.492 cv
219.753 194.961 219.542 194.453 219.167 194.077 cv
218.792 193.702 218.284 193.492 217.753 193.492 cv
217.223 193.492 216.714 193.702 216.339 194.077 cv
215.964 194.453 215.753 194.961 215.753 195.492 cv
215.753 196.022 215.964 196.531 216.339 196.906 cv
216.714 197.281 217.223 197.492 217.753 197.492 cv
cp
f
217.492 196.513 mo
218.023 196.513 218.532 196.302 218.907 195.927 cv
219.282 195.552 219.492 195.043 219.492 194.513 cv
219.492 193.983 219.282 193.474 218.907 193.099 cv
218.532 192.724 218.023 192.513 217.492 192.513 cv
216.962 192.513 216.453 192.724 216.078 193.099 cv
215.703 193.474 215.492 193.983 215.492 194.513 cv
215.492 195.043 215.703 195.552 216.078 195.927 cv
216.453 196.302 216.962 196.513 217.492 196.513 cv
cp
f
222.864 107.374 mo
223.394 107.374 223.903 107.163 224.278 106.788 cv
224.653 106.413 224.864 105.904 224.864 105.374 cv
224.864 104.843 224.653 104.334 224.278 103.959 cv
223.903 103.584 223.394 103.374 222.864 103.374 cv
222.333 103.374 221.824 103.584 221.449 103.959 cv
221.074 104.334 220.864 104.843 220.864 105.374 cv
220.864 105.904 221.074 106.413 221.449 106.788 cv
221.824 107.163 222.333 107.374 222.864 107.374 cv
cp
f
218.499 150.007 mo
219.029 150.007 219.538 149.796 219.913 149.421 cv
220.288 149.046 220.499 148.537 220.499 148.007 cv
220.499 147.476 220.288 146.968 219.913 146.592 cv
219.538 146.217 219.029 146.007 218.499 146.007 cv
217.969 146.007 217.46 146.217 217.085 146.592 cv
216.71 146.968 216.499 147.476 216.499 148.007 cv
216.499 148.537 216.71 149.046 217.085 149.421 cv
217.46 149.796 217.969 150.007 218.499 150.007 cv
cp
f
269.552 98.2535 mo
270.082 98.2535 270.591 98.0428 270.966 97.6678 cv
271.341 97.2927 271.552 96.7839 271.552 96.2535 cv
271.552 95.7231 271.341 95.2144 270.966 94.8393 cv
270.591 94.4643 270.082 94.2535 269.552 94.2535 cv
269.021 94.2535 268.512 94.4643 268.137 94.8393 cv
267.762 95.2144 267.552 95.7231 267.552 96.2535 cv
267.552 96.7839 267.762 97.2927 268.137 97.6678 cv
268.512 98.0428 269.021 98.2535 269.552 98.2535 cv
cp
f
271.129 69.5458 mo
271.659 69.5458 272.168 69.3351 272.543 68.96 cv
272.918 68.585 273.129 68.0762 273.129 67.5458 cv
273.129 67.0154 272.918 66.5067 272.543 66.1316 cv
272.168 65.7566 271.659 65.5458 271.129 65.5458 cv
270.599 65.5458 270.09 65.7566 269.715 66.1316 cv
269.34 66.5067 269.129 67.0154 269.129 67.5458 cv
269.129 68.0762 269.34 68.585 269.715 68.96 cv
270.09 69.3351 270.599 69.5458 271.129 69.5458 cv
cp
f
270.163 215.262 mo
270.694 215.262 271.203 215.052 271.578 214.676 cv
271.953 214.301 272.163 213.793 272.163 213.262 cv
272.163 212.732 271.953 212.223 271.578 211.848 cv
271.203 211.473 270.694 211.262 270.163 211.262 cv
269.633 211.262 269.124 211.473 268.749 211.848 cv
268.374 212.223 268.163 212.732 268.163 213.262 cv
268.163 213.793 268.374 214.301 268.749 214.676 cv
269.124 215.052 269.633 215.262 270.163 215.262 cv
cp
f
268.947 160.674 mo
269.478 160.674 269.987 160.463 270.362 160.088 cv
270.737 159.713 270.947 159.204 270.947 158.674 cv
270.947 158.144 270.737 157.635 270.362 157.26 cv
269.987 156.885 269.478 156.674 268.947 156.674 cv
268.417 156.674 267.908 156.885 267.533 157.26 cv
267.158 157.635 266.947 158.144 266.947 158.674 cv
266.947 159.204 267.158 159.713 267.533 160.088 cv
267.908 160.463 268.417 160.674 268.947 160.674 cv
cp
f
274.099 58.7309 mo
274.629 58.7309 275.138 58.5202 275.513 58.1451 cv
275.888 57.7701 276.099 57.2613 276.099 56.7309 cv
276.099 56.2005 275.888 55.6917 275.513 55.3167 cv
275.138 54.9416 274.629 54.7309 274.099 54.7309 cv
273.568 54.7309 273.06 54.9416 272.685 55.3167 cv
272.309 55.6917 272.099 56.2005 272.099 56.7309 cv
272.099 57.2613 272.309 57.7701 272.685 58.1451 cv
273.06 58.5202 273.568 58.7309 274.099 58.7309 cv
cp
f
270.279 175.317 mo
270.81 175.317 271.319 175.106 271.694 174.731 cv
272.069 174.356 272.279 173.847 272.279 173.317 cv
272.279 172.786 272.069 172.278 271.694 171.903 cv
271.319 171.528 270.81 171.317 270.279 171.317 cv
269.749 171.317 269.24 171.528 268.865 171.903 cv
268.49 172.278 268.279 172.786 268.279 173.317 cv
268.279 173.847 268.49 174.356 268.865 174.731 cv
269.24 175.106 269.749 175.317 270.279 175.317 cv
cp
f
270.912 164.693 mo
271.442 164.693 271.951 164.482 272.326 164.107 cv
272.701 163.732 272.912 163.223 272.912 162.693 cv
272.912 162.162 272.701 161.654 272.326 161.279 cv
271.951 160.904 271.442 160.693 270.912 160.693 cv
270.381 160.693 269.873 160.904 269.498 161.279 cv
269.123 161.654 268.912 162.162 268.912 162.693 cv
268.912 163.223 269.123 163.732 269.498 164.107 cv
269.873 164.482 270.381 164.693 270.912 164.693 cv
cp
f
269.992 183.128 mo
270.523 183.128 271.031 182.917 271.406 182.542 cv
271.782 182.167 271.992 181.658 271.992 181.128 cv
271.992 180.597 271.782 180.088 271.406 179.713 cv
271.031 179.338 270.523 179.128 269.992 179.128 cv
269.462 179.128 268.953 179.338 268.578 179.713 cv
268.203 180.088 267.992 180.597 267.992 181.128 cv
267.992 181.658 268.203 182.167 268.578 182.542 cv
268.953 182.917 269.462 183.128 269.992 183.128 cv
cp
f
271.018 131.281 mo
271.548 131.281 272.057 131.07 272.432 130.695 cv
272.807 130.32 273.018 129.811 273.018 129.281 cv
273.018 128.75 272.807 128.242 272.432 127.866 cv
272.057 127.491 271.548 127.281 271.018 127.281 cv
270.487 127.281 269.978 127.491 269.603 127.866 cv
269.228 128.242 269.018 128.75 269.018 129.281 cv
269.018 129.811 269.228 130.32 269.603 130.695 cv
269.978 131.07 270.487 131.281 271.018 131.281 cv
cp
f
274.457 177.784 mo
274.988 177.784 275.497 177.573 275.872 177.198 cv
276.247 176.823 276.457 176.314 276.457 175.784 cv
276.457 175.253 276.247 174.745 275.872 174.37 cv
275.497 173.995 274.988 173.784 274.457 173.784 cv
273.927 173.784 273.418 173.995 273.043 174.37 cv
272.668 174.745 272.457 175.253 272.457 175.784 cv
272.457 176.314 272.668 176.823 273.043 177.198 cv
273.418 177.573 273.927 177.784 274.457 177.784 cv
cp
f
266.531 213.145 mo
267.061 213.145 267.57 212.935 267.945 212.56 cv
268.32 212.185 268.531 211.676 268.531 211.145 cv
268.531 210.615 268.32 210.106 267.945 209.731 cv
267.57 209.356 267.061 209.145 266.531 209.145 cv
266 209.145 265.492 209.356 265.117 209.731 cv
264.742 210.106 264.531 210.615 264.531 211.145 cv
264.531 211.676 264.742 212.185 265.117 212.56 cv
265.492 212.935 266 213.145 266.531 213.145 cv
cp
f
270.273 175.336 mo
270.803 175.336 271.312 175.126 271.687 174.751 cv
272.062 174.376 272.273 173.867 272.273 173.336 cv
272.273 172.806 272.062 172.297 271.687 171.922 cv
271.312 171.547 270.803 171.336 270.273 171.336 cv
269.742 171.336 269.234 171.547 268.859 171.922 cv
268.484 172.297 268.273 172.806 268.273 173.336 cv
268.273 173.867 268.484 174.376 268.859 174.751 cv
269.234 175.126 269.742 175.336 270.273 175.336 cv
cp
f
272.007 209.722 mo
272.537 209.722 273.046 209.511 273.421 209.136 cv
273.796 208.761 274.007 208.253 274.007 207.722 cv
274.007 207.192 273.796 206.683 273.421 206.308 cv
273.046 205.933 272.537 205.722 272.007 205.722 cv
271.477 205.722 270.968 205.933 270.593 206.308 cv
270.218 206.683 270.007 207.192 270.007 207.722 cv
270.007 208.253 270.218 208.761 270.593 209.136 cv
270.968 209.511 271.477 209.722 272.007 209.722 cv
cp
f
275.461 197.098 mo
275.991 197.098 276.5 196.887 276.875 196.512 cv
277.25 196.137 277.461 195.628 277.461 195.098 cv
277.461 194.567 277.25 194.058 276.875 193.683 cv
276.5 193.308 275.991 193.098 275.461 193.098 cv
274.93 193.098 274.422 193.308 274.047 193.683 cv
273.672 194.058 273.461 194.567 273.461 195.098 cv
273.461 195.628 273.672 196.137 274.047 196.512 cv
274.422 196.887 274.93 197.098 275.461 197.098 cv
cp
f
273.079 210.243 mo
273.609 210.243 274.118 210.032 274.493 209.657 cv
274.868 209.282 275.079 208.773 275.079 208.243 cv
275.079 207.712 274.868 207.203 274.493 206.828 cv
274.118 206.453 273.609 206.243 273.079 206.243 cv
272.548 206.243 272.039 206.453 271.664 206.828 cv
271.289 207.203 271.079 207.712 271.079 208.243 cv
271.079 208.773 271.289 209.282 271.664 209.657 cv
272.039 210.032 272.548 210.243 273.079 210.243 cv
cp
f
274.87 162.293 mo
275.4 162.293 275.909 162.083 276.284 161.708 cv
276.659 161.333 276.87 160.824 276.87 160.293 cv
276.87 159.763 276.659 159.254 276.284 158.879 cv
275.909 158.504 275.4 158.293 274.87 158.293 cv
274.339 158.293 273.83 158.504 273.455 158.879 cv
273.08 159.254 272.87 159.763 272.87 160.293 cv
272.87 160.824 273.08 161.333 273.455 161.708 cv
273.83 162.083 274.339 162.293 274.87 162.293 cv
cp
f
272.94 163.001 mo
273.47 163.001 273.979 162.79 274.354 162.415 cv
274.729 162.04 274.94 161.531 274.94 161.001 cv
274.94 160.47 274.729 159.961 274.354 159.586 cv
273.979 159.211 273.47 159.001 272.94 159.001 cv
272.409 159.001 271.901 159.211 271.526 159.586 cv
271.15 159.961 270.94 160.47 270.94 161.001 cv
270.94 161.531 271.15 162.04 271.526 162.415 cv
271.901 162.79 272.409 163.001 272.94 163.001 cv
cp
f
265.9 183.751 mo
266.43 183.751 266.939 183.54 267.314 183.165 cv
267.689 182.79 267.9 182.281 267.9 181.751 cv
267.9 181.22 267.689 180.711 267.314 180.336 cv
266.939 179.961 266.43 179.751 265.9 179.751 cv
265.37 179.751 264.861 179.961 264.486 180.336 cv
264.111 180.711 263.9 181.22 263.9 181.751 cv
263.9 182.281 264.111 182.79 264.486 183.165 cv
264.861 183.54 265.37 183.751 265.9 183.751 cv
cp
f
268.875 184.729 mo
269.406 184.729 269.915 184.518 270.29 184.143 cv
270.665 183.768 270.875 183.259 270.875 182.729 cv
270.875 182.199 270.665 181.69 270.29 181.315 cv
269.915 180.94 269.406 180.729 268.875 180.729 cv
268.345 180.729 267.836 180.94 267.461 181.315 cv
267.086 181.69 266.875 182.199 266.875 182.729 cv
266.875 183.259 267.086 183.768 267.461 184.143 cv
267.836 184.518 268.345 184.729 268.875 184.729 cv
cp
f
267.815 207.168 mo
268.345 207.168 268.854 206.957 269.229 206.582 cv
269.604 206.207 269.815 205.698 269.815 205.168 cv
269.815 204.638 269.604 204.129 269.229 203.754 cv
268.854 203.379 268.345 203.168 267.815 203.168 cv
267.284 203.168 266.775 203.379 266.4 203.754 cv
266.025 204.129 265.815 204.638 265.815 205.168 cv
265.815 205.698 266.025 206.207 266.4 206.582 cv
266.775 206.957 267.284 207.168 267.815 207.168 cv
cp
f
270.809 67.2892 mo
271.34 67.2892 271.848 67.0785 272.224 66.7034 cv
272.599 66.3283 272.809 65.8196 272.809 65.2892 cv
272.809 64.7588 272.599 64.25 272.224 63.875 cv
271.848 63.4999 271.34 63.2892 270.809 63.2892 cv
270.279 63.2892 269.77 63.4999 269.395 63.875 cv
269.02 64.25 268.809 64.7588 268.809 65.2892 cv
268.809 65.8196 269.02 66.3283 269.395 66.7034 cv
269.77 67.0785 270.279 67.2892 270.809 67.2892 cv
cp
f
273.796 189.619 mo
274.326 189.619 274.835 189.408 275.21 189.033 cv
275.585 188.658 275.796 188.149 275.796 187.619 cv
275.796 187.088 275.585 186.58 275.21 186.205 cv
274.835 185.83 274.326 185.619 273.796 185.619 cv
273.265 185.619 272.756 185.83 272.381 186.205 cv
272.006 186.58 271.796 187.088 271.796 187.619 cv
271.796 188.149 272.006 188.658 272.381 189.033 cv
272.756 189.408 273.265 189.619 273.796 189.619 cv
cp
f
274.61 146.642 mo
275.141 146.642 275.649 146.432 276.024 146.057 cv
276.399 145.682 276.61 145.173 276.61 144.642 cv
276.61 144.112 276.399 143.603 276.024 143.228 cv
275.649 142.853 275.141 142.642 274.61 142.642 cv
274.08 142.642 273.571 142.853 273.196 143.228 cv
272.821 143.603 272.61 144.112 272.61 144.642 cv
272.61 145.173 272.821 145.682 273.196 146.057 cv
273.571 146.432 274.08 146.642 274.61 146.642 cv
cp
f
267.224 183.572 mo
267.754 183.572 268.263 183.361 268.638 182.986 cv
269.013 182.611 269.224 182.102 269.224 181.572 cv
269.224 181.041 269.013 180.532 268.638 180.157 cv
268.263 179.782 267.754 179.572 267.224 179.572 cv
266.693 179.572 266.184 179.782 265.809 180.157 cv
265.434 180.532 265.224 181.041 265.224 181.572 cv
265.224 182.102 265.434 182.611 265.809 182.986 cv
266.184 183.361 266.693 183.572 267.224 183.572 cv
cp
f
267.071 103.03 mo
267.601 103.03 268.11 102.819 268.485 102.444 cv
268.86 102.069 269.071 101.56 269.071 101.03 cv
269.071 100.499 268.86 99.9905 268.485 99.6155 cv
268.11 99.2404 267.601 99.0297 267.071 99.0297 cv
266.54 99.0297 266.031 99.2404 265.656 99.6155 cv
265.281 99.9905 265.071 100.499 265.071 101.03 cv
265.071 101.56 265.281 102.069 265.656 102.444 cv
266.031 102.819 266.54 103.03 267.071 103.03 cv
cp
f
265.836 196.247 mo
266.366 196.247 266.875 196.036 267.25 195.661 cv
267.625 195.286 267.836 194.777 267.836 194.247 cv
267.836 193.716 267.625 193.208 267.25 192.832 cv
266.875 192.457 266.366 192.247 265.836 192.247 cv
265.305 192.247 264.797 192.457 264.422 192.832 cv
264.047 193.208 263.836 193.716 263.836 194.247 cv
263.836 194.777 264.047 195.286 264.422 195.661 cv
264.797 196.036 265.305 196.247 265.836 196.247 cv
cp
f
272.332 206.793 mo
272.863 206.793 273.372 206.582 273.747 206.207 cv
274.122 205.832 274.332 205.323 274.332 204.793 cv
274.332 204.262 274.122 203.754 273.747 203.379 cv
273.372 203.004 272.863 202.793 272.332 202.793 cv
271.802 202.793 271.293 203.004 270.918 203.379 cv
270.543 203.754 270.332 204.262 270.332 204.793 cv
270.332 205.323 270.543 205.832 270.918 206.207 cv
271.293 206.582 271.802 206.793 272.332 206.793 cv
cp
f
266.893 102.211 mo
267.424 102.211 267.932 102 268.308 101.625 cv
268.683 101.25 268.893 100.741 268.893 100.211 cv
268.893 99.6805 268.683 99.1717 268.308 98.7967 cv
267.932 98.4216 267.424 98.2109 266.893 98.2109 cv
266.363 98.2109 265.854 98.4216 265.479 98.7967 cv
265.104 99.1717 264.893 99.6805 264.893 100.211 cv
264.893 100.741 265.104 101.25 265.479 101.625 cv
265.854 102 266.363 102.211 266.893 102.211 cv
cp
f
274.389 163.6 mo
274.919 163.6 275.428 163.39 275.803 163.015 cv
276.178 162.639 276.389 162.131 276.389 161.6 cv
276.389 161.07 276.178 160.561 275.803 160.186 cv
275.428 159.811 274.919 159.6 274.389 159.6 cv
273.858 159.6 273.349 159.811 272.974 160.186 cv
272.599 160.561 272.389 161.07 272.389 161.6 cv
272.389 162.131 272.599 162.639 272.974 163.015 cv
273.349 163.39 273.858 163.6 274.389 163.6 cv
cp
f
274.358 193.069 mo
274.889 193.069 275.397 192.858 275.772 192.483 cv
276.147 192.108 276.358 191.6 276.358 191.069 cv
276.358 190.539 276.147 190.03 275.772 189.655 cv
275.397 189.28 274.889 189.069 274.358 189.069 cv
273.828 189.069 273.319 189.28 272.944 189.655 cv
272.569 190.03 272.358 190.539 272.358 191.069 cv
272.358 191.6 272.569 192.108 272.944 192.483 cv
273.319 192.858 273.828 193.069 274.358 193.069 cv
cp
f
274.778 171.3 mo
275.308 171.3 275.817 171.089 276.192 170.714 cv
276.567 170.339 276.778 169.83 276.778 169.3 cv
276.778 168.769 276.567 168.261 276.192 167.886 cv
275.817 167.51 275.308 167.3 274.778 167.3 cv
274.248 167.3 273.739 167.51 273.364 167.886 cv
272.989 168.261 272.778 168.769 272.778 169.3 cv
272.778 169.83 272.989 170.339 273.364 170.714 cv
273.739 171.089 274.248 171.3 274.778 171.3 cv
cp
f
271.508 200.581 mo
272.038 200.581 272.547 200.37 272.922 199.995 cv
273.297 199.62 273.508 199.111 273.508 198.581 cv
273.508 198.051 273.297 197.542 272.922 197.167 cv
272.547 196.792 272.038 196.581 271.508 196.581 cv
270.977 196.581 270.468 196.792 270.093 197.167 cv
269.718 197.542 269.508 198.051 269.508 198.581 cv
269.508 199.111 269.718 199.62 270.093 199.995 cv
270.468 200.37 270.977 200.581 271.508 200.581 cv
cp
f
275.634 147.101 mo
276.164 147.101 276.673 146.89 277.048 146.515 cv
277.423 146.14 277.634 145.631 277.634 145.101 cv
277.634 144.571 277.423 144.062 277.048 143.687 cv
276.673 143.312 276.164 143.101 275.634 143.101 cv
275.103 143.101 274.595 143.312 274.219 143.687 cv
273.844 144.062 273.634 144.571 273.634 145.101 cv
273.634 145.631 273.844 146.14 274.219 146.515 cv
274.595 146.89 275.103 147.101 275.634 147.101 cv
cp
f
273.848 65.8654 mo
274.378 65.8654 274.887 65.6547 275.262 65.2796 cv
275.637 64.9046 275.848 64.3958 275.848 63.8654 cv
275.848 63.335 275.637 62.8262 275.262 62.4512 cv
274.887 62.0761 274.378 61.8654 273.848 61.8654 cv
273.317 61.8654 272.809 62.0761 272.434 62.4512 cv
272.059 62.8262 271.848 63.335 271.848 63.8654 cv
271.848 64.3958 272.059 64.9046 272.434 65.2796 cv
272.809 65.6547 273.317 65.8654 273.848 65.8654 cv
cp
f
266.581 205.418 mo
267.111 205.418 267.62 205.208 267.995 204.833 cv
268.37 204.458 268.581 203.949 268.581 203.418 cv
268.581 202.888 268.37 202.379 267.995 202.004 cv
267.62 201.629 267.111 201.418 266.581 201.418 cv
266.05 201.418 265.541 201.629 265.166 202.004 cv
264.791 202.379 264.581 202.888 264.581 203.418 cv
264.581 203.949 264.791 204.458 265.166 204.833 cv
265.541 205.208 266.05 205.418 266.581 205.418 cv
cp
f
270.571 191.565 mo
271.101 191.565 271.61 191.355 271.985 190.979 cv
272.36 190.604 272.571 190.096 272.571 189.565 cv
272.571 189.035 272.36 188.526 271.985 188.151 cv
271.61 187.776 271.101 187.565 270.571 187.565 cv
270.04 187.565 269.532 187.776 269.156 188.151 cv
268.781 188.526 268.571 189.035 268.571 189.565 cv
268.571 190.096 268.781 190.604 269.156 190.979 cv
269.532 191.355 270.04 191.565 270.571 191.565 cv
cp
f
273.565 52.3654 mo
274.095 52.3654 274.604 52.1547 274.979 51.7796 cv
275.354 51.4046 275.565 50.8958 275.565 50.3654 cv
275.565 49.835 275.354 49.3263 274.979 48.9512 cv
274.604 48.5762 274.095 48.3654 273.565 48.3654 cv
273.034 48.3654 272.526 48.5762 272.151 48.9512 cv
271.776 49.3263 271.565 49.835 271.565 50.3654 cv
271.565 50.8958 271.776 51.4046 272.151 51.7796 cv
272.526 52.1547 273.034 52.3654 273.565 52.3654 cv
cp
f
270.232 201.235 mo
270.762 201.235 271.271 201.024 271.646 200.649 cv
272.021 200.274 272.232 199.765 272.232 199.235 cv
272.232 198.705 272.021 198.196 271.646 197.821 cv
271.271 197.446 270.762 197.235 270.232 197.235 cv
269.701 197.235 269.192 197.446 268.817 197.821 cv
268.442 198.196 268.232 198.705 268.232 199.235 cv
268.232 199.765 268.442 200.274 268.817 200.649 cv
269.192 201.024 269.701 201.235 270.232 201.235 cv
cp
f
268.998 208.84 mo
269.529 208.84 270.037 208.63 270.412 208.254 cv
270.787 207.879 270.998 207.371 270.998 206.84 cv
270.998 206.31 270.787 205.801 270.412 205.426 cv
270.037 205.051 269.529 204.84 268.998 204.84 cv
268.468 204.84 267.959 205.051 267.584 205.426 cv
267.209 205.801 266.998 206.31 266.998 206.84 cv
266.998 207.371 267.209 207.879 267.584 208.254 cv
267.959 208.63 268.468 208.84 268.998 208.84 cv
cp
f
272.587 190.73 mo
273.117 190.73 273.626 190.519 274.001 190.144 cv
274.376 189.769 274.587 189.26 274.587 188.73 cv
274.587 188.2 274.376 187.691 274.001 187.316 cv
273.626 186.941 273.117 186.73 272.587 186.73 cv
272.057 186.73 271.548 186.941 271.173 187.316 cv
270.798 187.691 270.587 188.2 270.587 188.73 cv
270.587 189.26 270.798 189.769 271.173 190.144 cv
271.548 190.519 272.057 190.73 272.587 190.73 cv
cp
f
267.282 185.958 mo
267.812 185.958 268.321 185.747 268.696 185.372 cv
269.071 184.997 269.282 184.488 269.282 183.958 cv
269.282 183.427 269.071 182.918 268.696 182.543 cv
268.321 182.168 267.812 181.958 267.282 181.958 cv
266.752 181.958 266.243 182.168 265.868 182.543 cv
265.493 182.918 265.282 183.427 265.282 183.958 cv
265.282 184.488 265.493 184.997 265.868 185.372 cv
266.243 185.747 266.752 185.958 267.282 185.958 cv
cp
f
269.43 56.0993 mo
269.961 56.0993 270.469 55.8886 270.844 55.5135 cv
271.22 55.1385 271.43 54.6297 271.43 54.0993 cv
271.43 53.5689 271.22 53.0602 270.844 52.6851 cv
270.469 52.3101 269.961 52.0993 269.43 52.0993 cv
268.9 52.0993 268.391 52.3101 268.016 52.6851 cv
267.641 53.0602 267.43 53.5689 267.43 54.0993 cv
267.43 54.6297 267.641 55.1385 268.016 55.5135 cv
268.391 55.8886 268.9 56.0993 269.43 56.0993 cv
cp
f
268.753 90.1229 mo
269.283 90.1229 269.792 89.9121 270.167 89.5371 cv
270.542 89.162 270.753 88.6533 270.753 88.1229 cv
270.753 87.5925 270.542 87.0837 270.167 86.7087 cv
269.792 86.3336 269.283 86.1229 268.753 86.1229 cv
268.222 86.1229 267.714 86.3336 267.339 86.7087 cv
266.964 87.0837 266.753 87.5925 266.753 88.1229 cv
266.753 88.6533 266.964 89.162 267.339 89.5371 cv
267.714 89.9121 268.222 90.1229 268.753 90.1229 cv
cp
f
275.358 82.8206 mo
275.888 82.8206 276.397 82.6099 276.772 82.2348 cv
277.147 81.8598 277.358 81.351 277.358 80.8206 cv
277.358 80.2902 277.147 79.7814 276.772 79.4064 cv
276.397 79.0313 275.888 78.8206 275.358 78.8206 cv
274.828 78.8206 274.319 79.0313 273.944 79.4064 cv
273.569 79.7814 273.358 80.2902 273.358 80.8206 cv
273.358 81.351 273.569 81.8598 273.944 82.2348 cv
274.319 82.6099 274.828 82.8206 275.358 82.8206 cv
cp
f
267.974 83.6801 mo
268.504 83.6801 269.013 83.4693 269.388 83.0943 cv
269.763 82.7192 269.974 82.2105 269.974 81.6801 cv
269.974 81.1497 269.763 80.6409 269.388 80.2658 cv
269.013 79.8908 268.504 79.6801 267.974 79.6801 cv
267.443 79.6801 266.935 79.8908 266.56 80.2658 cv
266.185 80.6409 265.974 81.1497 265.974 81.6801 cv
265.974 82.2105 266.185 82.7192 266.56 83.0943 cv
266.935 83.4693 267.443 83.6801 267.974 83.6801 cv
cp
f
271.708 162.58 mo
272.238 162.58 272.747 162.37 273.122 161.995 cv
273.497 161.62 273.708 161.111 273.708 160.58 cv
273.708 160.05 273.497 159.541 273.122 159.166 cv
272.747 158.791 272.238 158.58 271.708 158.58 cv
271.177 158.58 270.668 158.791 270.293 159.166 cv
269.918 159.541 269.708 160.05 269.708 160.58 cv
269.708 161.111 269.918 161.62 270.293 161.995 cv
270.668 162.37 271.177 162.58 271.708 162.58 cv
cp
f
270.46 79.4782 mo
270.99 79.4782 271.499 79.2675 271.874 78.8924 cv
272.249 78.5174 272.46 78.0086 272.46 77.4782 cv
272.46 76.9478 272.249 76.439 271.874 76.064 cv
271.499 75.6889 270.99 75.4782 270.46 75.4782 cv
269.929 75.4782 269.42 75.6889 269.045 76.064 cv
268.67 76.439 268.46 76.9478 268.46 77.4782 cv
268.46 78.0086 268.67 78.5174 269.045 78.8924 cv
269.42 79.2675 269.929 79.4782 270.46 79.4782 cv
cp
f
272.184 197.36 mo
272.714 197.36 273.223 197.15 273.598 196.775 cv
273.973 196.4 274.184 195.891 274.184 195.36 cv
274.184 194.83 273.973 194.321 273.598 193.946 cv
273.223 193.571 272.714 193.36 272.184 193.36 cv
271.653 193.36 271.144 193.571 270.769 193.946 cv
270.394 194.321 270.184 194.83 270.184 195.36 cv
270.184 195.891 270.394 196.4 270.769 196.775 cv
271.144 197.15 271.653 197.36 272.184 197.36 cv
cp
f
274.001 156.298 mo
274.531 156.298 275.04 156.087 275.415 155.712 cv
275.79 155.337 276.001 154.828 276.001 154.298 cv
276.001 153.767 275.79 153.259 275.415 152.883 cv
275.04 152.508 274.531 152.298 274.001 152.298 cv
273.471 152.298 272.962 152.508 272.587 152.883 cv
272.212 153.259 272.001 153.767 272.001 154.298 cv
272.001 154.828 272.212 155.337 272.587 155.712 cv
272.962 156.087 273.471 156.298 274.001 156.298 cv
cp
f
267.476 160.594 mo
268.007 160.594 268.515 160.383 268.89 160.008 cv
269.265 159.633 269.476 159.125 269.476 158.594 cv
269.476 158.064 269.265 157.555 268.89 157.18 cv
268.515 156.805 268.007 156.594 267.476 156.594 cv
266.946 156.594 266.437 156.805 266.062 157.18 cv
265.687 157.555 265.476 158.064 265.476 158.594 cv
265.476 159.125 265.687 159.633 266.062 160.008 cv
266.437 160.383 266.946 160.594 267.476 160.594 cv
cp
f
324.638 89.4083 mo
325.169 89.4083 325.678 89.1976 326.053 88.8225 cv
326.428 88.4475 326.638 87.9387 326.638 87.4083 cv
326.638 86.8779 326.428 86.3692 326.053 85.9941 cv
325.678 85.6191 325.169 85.4083 324.638 85.4083 cv
324.108 85.4083 323.599 85.6191 323.224 85.9941 cv
322.849 86.3692 322.638 86.8779 322.638 87.4083 cv
322.638 87.9387 322.849 88.4475 323.224 88.8225 cv
323.599 89.1976 324.108 89.4083 324.638 89.4083 cv
cp
f
319.776 58.5385 mo
320.307 58.5385 320.815 58.3278 321.19 57.9527 cv
321.566 57.5776 321.776 57.0689 321.776 56.5385 cv
321.776 56.0081 321.566 55.4993 321.19 55.1243 cv
320.815 54.7492 320.307 54.5385 319.776 54.5385 cv
319.246 54.5385 318.737 54.7492 318.362 55.1243 cv
317.987 55.4993 317.776 56.0081 317.776 56.5385 cv
317.776 57.0689 317.987 57.5776 318.362 57.9527 cv
318.737 58.3278 319.246 58.5385 319.776 58.5385 cv
cp
f
315.627 211.879 mo
316.157 211.879 316.666 211.668 317.041 211.293 cv
317.416 210.918 317.627 210.41 317.627 209.879 cv
317.627 209.349 317.416 208.84 317.041 208.465 cv
316.666 208.09 316.157 207.879 315.627 207.879 cv
315.097 207.879 314.588 208.09 314.213 208.465 cv
313.838 208.84 313.627 209.349 313.627 209.879 cv
313.627 210.41 313.838 210.918 314.213 211.293 cv
314.588 211.668 315.097 211.879 315.627 211.879 cv
cp
f
320.171 157.979 mo
320.701 157.979 321.21 157.768 321.585 157.393 cv
321.96 157.018 322.171 156.51 322.171 155.979 cv
322.171 155.449 321.96 154.94 321.585 154.565 cv
321.21 154.19 320.701 153.979 320.171 153.979 cv
319.641 153.979 319.132 154.19 318.757 154.565 cv
318.382 154.94 318.171 155.449 318.171 155.979 cv
318.171 156.51 318.382 157.018 318.757 157.393 cv
319.132 157.768 319.641 157.979 320.171 157.979 cv
cp
f
321.6 54.4796 mo
322.13 54.4796 322.639 54.2689 323.014 53.8938 cv
323.389 53.5188 323.6 53.01 323.6 52.4796 cv
323.6 51.9492 323.389 51.4405 323.014 51.0654 cv
322.639 50.6904 322.13 50.4796 321.6 50.4796 cv
321.07 50.4796 320.561 50.6904 320.186 51.0654 cv
319.811 51.4405 319.6 51.9492 319.6 52.4796 cv
319.6 53.01 319.811 53.5188 320.186 53.8938 cv
320.561 54.2689 321.07 54.4796 321.6 54.4796 cv
cp
f
319.981 179.036 mo
320.511 179.036 321.02 178.825 321.395 178.45 cv
321.77 178.075 321.981 177.566 321.981 177.036 cv
321.981 176.505 321.77 175.996 321.395 175.621 cv
321.02 175.246 320.511 175.036 319.981 175.036 cv
319.45 175.036 318.942 175.246 318.567 175.621 cv
318.191 175.996 317.981 176.505 317.981 177.036 cv
317.981 177.566 318.191 178.075 318.567 178.45 cv
318.942 178.825 319.45 179.036 319.981 179.036 cv
cp
f
325.147 48.1587 mo
325.677 48.1587 326.186 47.9479 326.561 47.5729 cv
326.936 47.1978 327.147 46.6891 327.147 46.1587 cv
327.147 45.6283 326.936 45.1195 326.561 44.7444 cv
326.186 44.3694 325.677 44.1587 325.147 44.1587 cv
324.616 44.1587 324.108 44.3694 323.733 44.7444 cv
323.357 45.1195 323.147 45.6283 323.147 46.1587 cv
323.147 46.6891 323.357 47.1978 323.733 47.5729 cv
324.108 47.9479 324.616 48.1587 325.147 48.1587 cv
cp
f
318.502 166.899 mo
319.032 166.899 319.541 166.688 319.916 166.313 cv
320.291 165.938 320.502 165.429 320.502 164.899 cv
320.502 164.368 320.291 163.86 319.916 163.485 cv
319.541 163.11 319.032 162.899 318.502 162.899 cv
317.971 162.899 317.462 163.11 317.087 163.485 cv
316.712 163.86 316.502 164.368 316.502 164.899 cv
316.502 165.429 316.712 165.938 317.087 166.313 cv
317.462 166.688 317.971 166.899 318.502 166.899 cv
cp
f
319.912 76.2729 mo
320.443 76.2729 320.951 76.0622 321.326 75.6871 cv
321.701 75.3121 321.912 74.8033 321.912 74.2729 cv
321.912 73.7425 321.701 73.2337 321.326 72.8587 cv
320.951 72.4836 320.443 72.2729 319.912 72.2729 cv
319.382 72.2729 318.873 72.4836 318.498 72.8587 cv
318.123 73.2337 317.912 73.7425 317.912 74.2729 cv
317.912 74.8033 318.123 75.3121 318.498 75.6871 cv
318.873 76.0622 319.382 76.2729 319.912 76.2729 cv
cp
f
319.701 144.073 mo
320.231 144.073 320.74 143.862 321.115 143.487 cv
321.49 143.112 321.701 142.604 321.701 142.073 cv
321.701 141.543 321.49 141.034 321.115 140.659 cv
320.74 140.284 320.231 140.073 319.701 140.073 cv
319.17 140.073 318.662 140.284 318.287 140.659 cv
317.912 141.034 317.701 141.543 317.701 142.073 cv
317.701 142.604 317.912 143.112 318.287 143.487 cv
318.662 143.862 319.17 144.073 319.701 144.073 cv
cp
f
319.026 38.1722 mo
319.557 38.1722 320.065 37.9615 320.44 37.5864 cv
320.816 37.2113 321.026 36.7026 321.026 36.1722 cv
321.026 35.6418 320.816 35.133 320.44 34.758 cv
320.065 34.3829 319.557 34.1722 319.026 34.1722 cv
318.496 34.1722 317.987 34.3829 317.612 34.758 cv
317.237 35.133 317.026 35.6418 317.026 36.1722 cv
317.026 36.7026 317.237 37.2113 317.612 37.5864 cv
317.987 37.9615 318.496 38.1722 319.026 38.1722 cv
cp
f
323.009 155.061 mo
323.539 155.061 324.048 154.85 324.423 154.475 cv
324.798 154.1 325.009 153.591 325.009 153.061 cv
325.009 152.53 324.798 152.021 324.423 151.646 cv
324.048 151.271 323.539 151.061 323.009 151.061 cv
322.478 151.061 321.97 151.271 321.595 151.646 cv
321.219 152.021 321.009 152.53 321.009 153.061 cv
321.009 153.591 321.219 154.1 321.595 154.475 cv
321.97 154.85 322.478 155.061 323.009 155.061 cv
cp
f
325.144 204.007 mo
325.675 204.007 326.184 203.796 326.559 203.421 cv
326.934 203.046 327.144 202.538 327.144 202.007 cv
327.144 201.477 326.934 200.968 326.559 200.593 cv
326.184 200.218 325.675 200.007 325.144 200.007 cv
324.614 200.007 324.105 200.218 323.73 200.593 cv
323.355 200.968 323.144 201.477 323.144 202.007 cv
323.144 202.538 323.355 203.046 323.73 203.421 cv
324.105 203.796 324.614 204.007 325.144 204.007 cv
cp
f
322.265 194.453 mo
322.795 194.453 323.304 194.242 323.679 193.867 cv
324.054 193.492 324.265 192.983 324.265 192.453 cv
324.265 191.922 324.054 191.413 323.679 191.038 cv
323.304 190.663 322.795 190.453 322.265 190.453 cv
321.735 190.453 321.226 190.663 320.851 191.038 cv
320.476 191.413 320.265 191.922 320.265 192.453 cv
320.265 192.983 320.476 193.492 320.851 193.867 cv
321.226 194.242 321.735 194.453 322.265 194.453 cv
cp
f
323.369 201.466 mo
323.899 201.466 324.408 201.255 324.783 200.88 cv
325.158 200.505 325.369 199.996 325.369 199.466 cv
325.369 198.935 325.158 198.427 324.783 198.052 cv
324.408 197.677 323.899 197.466 323.369 197.466 cv
322.838 197.466 322.329 197.677 321.954 198.052 cv
321.579 198.427 321.369 198.935 321.369 199.466 cv
321.369 199.996 321.579 200.505 321.954 200.88 cv
322.329 201.255 322.838 201.466 323.369 201.466 cv
cp
f
319.645 155.669 mo
320.175 155.669 320.684 155.458 321.059 155.083 cv
321.434 154.708 321.645 154.199 321.645 153.669 cv
321.645 153.139 321.434 152.63 321.059 152.255 cv
320.684 151.88 320.175 151.669 319.645 151.669 cv
319.115 151.669 318.606 151.88 318.231 152.255 cv
317.856 152.63 317.645 153.139 317.645 153.669 cv
317.645 154.199 317.856 154.708 318.231 155.083 cv
318.606 155.458 319.115 155.669 319.645 155.669 cv
cp
f
324.25 162.543 mo
324.78 162.543 325.289 162.333 325.664 161.958 cv
326.039 161.582 326.25 161.074 326.25 160.543 cv
326.25 160.013 326.039 159.504 325.664 159.129 cv
325.289 158.754 324.78 158.543 324.25 158.543 cv
323.72 158.543 323.211 158.754 322.836 159.129 cv
322.461 159.504 322.25 160.013 322.25 160.543 cv
322.25 161.074 322.461 161.582 322.836 161.958 cv
323.211 162.333 323.72 162.543 324.25 162.543 cv
cp
f
315.802 183.57 mo
316.332 183.57 316.841 183.359 317.216 182.984 cv
317.591 182.609 317.802 182.1 317.802 181.57 cv
317.802 181.04 317.591 180.531 317.216 180.156 cv
316.841 179.781 316.332 179.57 315.802 179.57 cv
315.271 179.57 314.763 179.781 314.387 180.156 cv
314.012 180.531 313.802 181.04 313.802 181.57 cv
313.802 182.1 314.012 182.609 314.387 182.984 cv
314.763 183.359 315.271 183.57 315.802 183.57 cv
cp
f
323.161 178.357 mo
323.691 178.357 324.2 178.146 324.575 177.771 cv
324.95 177.396 325.161 176.887 325.161 176.357 cv
325.161 175.826 324.95 175.318 324.575 174.943 cv
324.2 174.567 323.691 174.357 323.161 174.357 cv
322.63 174.357 322.122 174.567 321.747 174.943 cv
321.371 175.318 321.161 175.826 321.161 176.357 cv
321.161 176.887 321.371 177.396 321.747 177.771 cv
322.122 178.146 322.63 178.357 323.161 178.357 cv
cp
f
316.144 199.674 mo
316.674 199.674 317.183 199.463 317.558 199.088 cv
317.933 198.713 318.144 198.204 318.144 197.674 cv
318.144 197.143 317.933 196.635 317.558 196.26 cv
317.183 195.885 316.674 195.674 316.144 195.674 cv
315.614 195.674 315.105 195.885 314.73 196.26 cv
314.355 196.635 314.144 197.143 314.144 197.674 cv
314.144 198.204 314.355 198.713 314.73 199.088 cv
315.105 199.463 315.614 199.674 316.144 199.674 cv
cp
f
318.906 41.5606 mo
319.437 41.5606 319.945 41.3499 320.32 40.9749 cv
320.695 40.5998 320.906 40.091 320.906 39.5606 cv
320.906 39.0302 320.695 38.5215 320.32 38.1464 cv
319.945 37.7714 319.437 37.5606 318.906 37.5606 cv
318.376 37.5606 317.867 37.7714 317.492 38.1464 cv
317.117 38.5215 316.906 39.0302 316.906 39.5606 cv
316.906 40.091 317.117 40.5998 317.492 40.9749 cv
317.867 41.3499 318.376 41.5606 318.906 41.5606 cv
cp
f
315.69 86.4373 mo
316.221 86.4373 316.729 86.2266 317.105 85.8516 cv
317.48 85.4765 317.69 84.9677 317.69 84.4373 cv
317.69 83.9069 317.48 83.3982 317.105 83.0231 cv
316.729 82.6481 316.221 82.4373 315.69 82.4373 cv
315.16 82.4373 314.651 82.6481 314.276 83.0231 cv
313.901 83.3982 313.69 83.9069 313.69 84.4373 cv
313.69 84.9677 313.901 85.4765 314.276 85.8516 cv
314.651 86.2266 315.16 86.4373 315.69 86.4373 cv
cp
f
321.682 131.589 mo
322.212 131.589 322.721 131.378 323.096 131.003 cv
323.471 130.628 323.682 130.119 323.682 129.589 cv
323.682 129.059 323.471 128.55 323.096 128.175 cv
322.721 127.8 322.212 127.589 321.682 127.589 cv
321.152 127.589 320.643 127.8 320.268 128.175 cv
319.893 128.55 319.682 129.059 319.682 129.589 cv
319.682 130.119 319.893 130.628 320.268 131.003 cv
320.643 131.378 321.152 131.589 321.682 131.589 cv
cp
f
316.707 85.8155 mo
317.237 85.8155 317.746 85.6047 318.121 85.2297 cv
318.496 84.8546 318.707 84.3459 318.707 83.8155 cv
318.707 83.2851 318.496 82.7763 318.121 82.4012 cv
317.746 82.0262 317.237 81.8155 316.707 81.8155 cv
316.176 81.8155 315.667 82.0262 315.292 82.4012 cv
314.917 82.7763 314.707 83.2851 314.707 83.8155 cv
314.707 84.3459 314.917 84.8546 315.292 85.2297 cv
315.667 85.6047 316.176 85.8155 316.707 85.8155 cv
cp
f
321.024 78.8843 mo
321.555 78.8843 322.064 78.6736 322.439 78.2985 cv
322.814 77.9235 323.024 77.4147 323.024 76.8843 cv
323.024 76.3539 322.814 75.8451 322.439 75.4701 cv
322.064 75.095 321.555 74.8843 321.024 74.8843 cv
320.494 74.8843 319.985 75.095 319.61 75.4701 cv
319.235 75.8451 319.024 76.3539 319.024 76.8843 cv
319.024 77.4147 319.235 77.9235 319.61 78.2985 cv
319.985 78.6736 320.494 78.8843 321.024 78.8843 cv
cp
f
323.157 70.3647 mo
323.688 70.3647 324.197 70.154 324.572 69.7789 cv
324.947 69.4039 325.157 68.8951 325.157 68.3647 cv
325.157 67.8343 324.947 67.3256 324.572 66.9505 cv
324.197 66.5755 323.688 66.3647 323.157 66.3647 cv
322.627 66.3647 322.118 66.5755 321.743 66.9505 cv
321.368 67.3256 321.157 67.8343 321.157 68.3647 cv
321.157 68.8951 321.368 69.4039 321.743 69.7789 cv
322.118 70.154 322.627 70.3647 323.157 70.3647 cv
cp
f
318.826 190.769 mo
319.356 190.769 319.865 190.558 320.24 190.183 cv
320.615 189.808 320.826 189.299 320.826 188.769 cv
320.826 188.238 320.615 187.73 320.24 187.355 cv
319.865 186.979 319.356 186.769 318.826 186.769 cv
318.296 186.769 317.787 186.979 317.412 187.355 cv
317.037 187.73 316.826 188.238 316.826 188.769 cv
316.826 189.299 317.037 189.808 317.412 190.183 cv
317.787 190.558 318.296 190.769 318.826 190.769 cv
cp
f
321.471 58.2041 mo
322.002 58.2041 322.511 57.9934 322.886 57.6183 cv
323.261 57.2433 323.471 56.7345 323.471 56.2041 cv
323.471 55.6737 323.261 55.1649 322.886 54.7899 cv
322.511 54.4148 322.002 54.2041 321.471 54.2041 cv
320.941 54.2041 320.432 54.4148 320.057 54.7899 cv
319.682 55.1649 319.471 55.6737 319.471 56.2041 cv
319.471 56.7345 319.682 57.2433 320.057 57.6183 cv
320.432 57.9934 320.941 58.2041 321.471 58.2041 cv
cp
f
316.071 187.191 mo
316.601 187.191 317.11 186.98 317.485 186.605 cv
317.86 186.23 318.071 185.721 318.071 185.191 cv
318.071 184.66 317.86 184.151 317.485 183.776 cv
317.11 183.401 316.601 183.191 316.071 183.191 cv
315.541 183.191 315.032 183.401 314.657 183.776 cv
314.282 184.151 314.071 184.66 314.071 185.191 cv
314.071 185.721 314.282 186.23 314.657 186.605 cv
315.032 186.98 315.541 187.191 316.071 187.191 cv
cp
f
321.879 60.7861 mo
322.409 60.7861 322.918 60.5753 323.293 60.2003 cv
323.668 59.8252 323.879 59.3165 323.879 58.7861 cv
323.879 58.2557 323.668 57.7469 323.293 57.3719 cv
322.918 56.9968 322.409 56.7861 321.879 56.7861 cv
321.348 56.7861 320.84 56.9968 320.465 57.3719 cv
320.09 57.7469 319.879 58.2557 319.879 58.7861 cv
319.879 59.3165 320.09 59.8252 320.465 60.2003 cv
320.84 60.5753 321.348 60.7861 321.879 60.7861 cv
cp
f
317.564 167.611 mo
318.094 167.611 318.603 167.4 318.978 167.025 cv
319.353 166.65 319.564 166.141 319.564 165.611 cv
319.564 165.08 319.353 164.572 318.978 164.197 cv
318.603 163.822 318.094 163.611 317.564 163.611 cv
317.033 163.611 316.525 163.822 316.15 164.197 cv
315.775 164.572 315.564 165.08 315.564 165.611 cv
315.564 166.141 315.775 166.65 316.15 167.025 cv
316.525 167.4 317.033 167.611 317.564 167.611 cv
cp
f
316.117 90.748 mo
316.648 90.748 317.157 90.5372 317.532 90.1622 cv
317.907 89.7871 318.117 89.2784 318.117 88.748 cv
318.117 88.2176 317.907 87.7088 317.532 87.3337 cv
317.157 86.9587 316.648 86.748 316.117 86.748 cv
315.587 86.748 315.078 86.9587 314.703 87.3337 cv
314.328 87.7088 314.117 88.2176 314.117 88.748 cv
314.117 89.2784 314.328 89.7871 314.703 90.1622 cv
315.078 90.5372 315.587 90.748 316.117 90.748 cv
cp
f
320.173 143.576 mo
320.703 143.576 321.212 143.365 321.587 142.99 cv
321.962 142.615 322.173 142.106 322.173 141.576 cv
322.173 141.045 321.962 140.537 321.587 140.162 cv
321.212 139.787 320.703 139.576 320.173 139.576 cv
319.642 139.576 319.133 139.787 318.758 140.162 cv
318.383 140.537 318.173 141.045 318.173 141.576 cv
318.173 142.106 318.383 142.615 318.758 142.99 cv
319.133 143.365 319.642 143.576 320.173 143.576 cv
cp
f
317.58 58.9737 mo
318.11 58.9737 318.619 58.763 318.994 58.3879 cv
319.369 58.0129 319.58 57.5041 319.58 56.9737 cv
319.58 56.4433 319.369 55.9345 318.994 55.5595 cv
318.619 55.1844 318.11 54.9737 317.58 54.9737 cv
317.049 54.9737 316.54 55.1844 316.165 55.5595 cv
315.79 55.9345 315.58 56.4433 315.58 56.9737 cv
315.58 57.5041 315.79 58.0129 316.165 58.3879 cv
316.54 58.763 317.049 58.9737 317.58 58.9737 cv
cp
f
321.215 183.885 mo
321.746 183.885 322.254 183.675 322.629 183.3 cv
323.004 182.925 323.215 182.416 323.215 181.885 cv
323.215 181.355 323.004 180.846 322.629 180.471 cv
322.254 180.096 321.746 179.885 321.215 179.885 cv
320.685 179.885 320.176 180.096 319.801 180.471 cv
319.426 180.846 319.215 181.355 319.215 181.885 cv
319.215 182.416 319.426 182.925 319.801 183.3 cv
320.176 183.675 320.685 183.885 321.215 183.885 cv
cp
f
317.016 51.7564 mo
317.547 51.7564 318.056 51.5457 318.431 51.1706 cv
318.806 50.7956 319.016 50.2868 319.016 49.7564 cv
319.016 49.226 318.806 48.7173 318.431 48.3422 cv
318.056 47.9672 317.547 47.7564 317.016 47.7564 cv
316.486 47.7564 315.977 47.9672 315.602 48.3422 cv
315.227 48.7173 315.016 49.226 315.016 49.7564 cv
315.016 50.2868 315.227 50.7956 315.602 51.1706 cv
315.977 51.5457 316.486 51.7564 317.016 51.7564 cv
cp
f
324.809 29.7212 mo
325.339 29.7212 325.848 29.5105 326.223 29.1354 cv
326.598 28.7604 326.809 28.2516 326.809 27.7212 cv
326.809 27.1908 326.598 26.6821 326.223 26.307 cv
325.848 25.932 325.339 25.7212 324.809 25.7212 cv
324.278 25.7212 323.77 25.932 323.395 26.307 cv
323.019 26.6821 322.809 27.1908 322.809 27.7212 cv
322.809 28.2516 323.019 28.7604 323.395 29.1354 cv
323.77 29.5105 324.278 29.7212 324.809 29.7212 cv
cp
f
318.217 92.5321 mo
318.747 92.5321 319.256 92.3214 319.631 91.9463 cv
320.006 91.5713 320.217 91.0625 320.217 90.5321 cv
320.217 90.0017 320.006 89.4929 319.631 89.1179 cv
319.256 88.7428 318.747 88.5321 318.217 88.5321 cv
317.687 88.5321 317.178 88.7428 316.803 89.1179 cv
316.428 89.4929 316.217 90.0017 316.217 90.5321 cv
316.217 91.0625 316.428 91.5713 316.803 91.9463 cv
317.178 92.3214 317.687 92.5321 318.217 92.5321 cv
cp
f
324.217 81.8322 mo
324.748 81.8322 325.257 81.6214 325.632 81.2464 cv
326.007 80.8713 326.217 80.3626 326.217 79.8322 cv
326.217 79.3018 326.007 78.793 325.632 78.4179 cv
325.257 78.0429 324.748 77.8322 324.217 77.8322 cv
323.687 77.8322 323.178 78.0429 322.803 78.4179 cv
322.428 78.793 322.217 79.3018 322.217 79.8322 cv
322.217 80.3626 322.428 80.8713 322.803 81.2464 cv
323.178 81.6214 323.687 81.8322 324.217 81.8322 cv
cp
f
321.075 184.005 mo
321.605 184.005 322.114 183.794 322.489 183.419 cv
322.864 183.044 323.075 182.535 323.075 182.005 cv
323.075 181.474 322.864 180.966 322.489 180.591 cv
322.114 180.215 321.605 180.005 321.075 180.005 cv
320.544 180.005 320.036 180.215 319.661 180.591 cv
319.286 180.966 319.075 181.474 319.075 182.005 cv
319.075 182.535 319.286 183.044 319.661 183.419 cv
320.036 183.794 320.544 184.005 321.075 184.005 cv
cp
f
323.76 69.187 mo
324.29 69.187 324.799 68.9762 325.174 68.6012 cv
325.549 68.2261 325.76 67.7174 325.76 67.187 cv
325.76 66.6566 325.549 66.1478 325.174 65.7727 cv
324.799 65.3977 324.29 65.187 323.76 65.187 cv
323.229 65.187 322.721 65.3977 322.345 65.7727 cv
321.97 66.1478 321.76 66.6566 321.76 67.187 cv
321.76 67.7174 321.97 68.2261 322.345 68.6012 cv
322.721 68.9762 323.229 69.187 323.76 69.187 cv
cp
f
323.941 56.9609 mo
324.471 56.9609 324.98 56.7502 325.355 56.3751 cv
325.73 56.0001 325.941 55.4913 325.941 54.9609 cv
325.941 54.4305 325.73 53.9217 325.355 53.5467 cv
324.98 53.1716 324.471 52.9609 323.941 52.9609 cv
323.411 52.9609 322.902 53.1716 322.527 53.5467 cv
322.152 53.9217 321.941 54.4305 321.941 54.9609 cv
321.941 55.4913 322.152 56.0001 322.527 56.3751 cv
322.902 56.7502 323.411 56.9609 323.941 56.9609 cv
cp
f
324.48 56.6425 mo
325.011 56.6425 325.52 56.4318 325.895 56.0567 cv
326.27 55.6817 326.48 55.1729 326.48 54.6425 cv
326.48 54.1121 326.27 53.6034 325.895 53.2283 cv
325.52 52.8533 325.011 52.6425 324.48 52.6425 cv
323.95 52.6425 323.441 52.8533 323.066 53.2283 cv
322.691 53.6034 322.48 54.1121 322.48 54.6425 cv
322.48 55.1729 322.691 55.6817 323.066 56.0567 cv
323.441 56.4318 323.95 56.6425 324.48 56.6425 cv
cp
f
324.947 58.4872 mo
325.477 58.4872 325.986 58.2765 326.361 57.9014 cv
326.736 57.5263 326.947 57.0176 326.947 56.4872 cv
326.947 55.9568 326.736 55.448 326.361 55.073 cv
325.986 54.6979 325.477 54.4872 324.947 54.4872 cv
324.417 54.4872 323.908 54.6979 323.533 55.073 cv
323.158 55.448 322.947 55.9568 322.947 56.4872 cv
322.947 57.0176 323.158 57.5263 323.533 57.9014 cv
323.908 58.2765 324.417 58.4872 324.947 58.4872 cv
cp
f
321.467 63.2754 mo
321.997 63.2754 322.506 63.0646 322.881 62.6896 cv
323.256 62.3145 323.467 61.8058 323.467 61.2754 cv
323.467 60.745 323.256 60.2362 322.881 59.8611 cv
322.506 59.4861 321.997 59.2754 321.467 59.2754 cv
320.936 59.2754 320.428 59.4861 320.053 59.8611 cv
319.678 60.2362 319.467 60.745 319.467 61.2754 cv
319.467 61.8058 319.678 62.3145 320.053 62.6896 cv
320.428 63.0646 320.936 63.2754 321.467 63.2754 cv
cp
f
317.76 139.423 mo
318.29 139.423 318.799 139.212 319.174 138.837 cv
319.549 138.462 319.76 137.953 319.76 137.423 cv
319.76 136.892 319.549 136.384 319.174 136.009 cv
318.799 135.634 318.29 135.423 317.76 135.423 cv
317.229 135.423 316.721 135.634 316.346 136.009 cv
315.971 136.384 315.76 136.892 315.76 137.423 cv
315.76 137.953 315.971 138.462 316.346 138.837 cv
316.721 139.212 317.229 139.423 317.76 139.423 cv
cp
f
319.651 71.5843 mo
320.181 71.5843 320.69 71.3736 321.065 70.9986 cv
321.44 70.6235 321.651 70.1147 321.651 69.5843 cv
321.651 69.0539 321.44 68.5452 321.065 68.1701 cv
320.69 67.7951 320.181 67.5843 319.651 67.5843 cv
319.121 67.5843 318.612 67.7951 318.237 68.1701 cv
317.862 68.5452 317.651 69.0539 317.651 69.5843 cv
317.651 70.1147 317.862 70.6235 318.237 70.9986 cv
318.612 71.3736 319.121 71.5843 319.651 71.5843 cv
cp
f
318.997 124.973 mo
319.527 124.973 320.036 124.763 320.411 124.388 cv
320.786 124.012 320.997 123.504 320.997 122.973 cv
320.997 122.443 320.786 121.934 320.411 121.559 cv
320.036 121.184 319.527 120.973 318.997 120.973 cv
318.466 120.973 317.957 121.184 317.582 121.559 cv
317.207 121.934 316.997 122.443 316.997 122.973 cv
316.997 123.504 317.207 124.012 317.582 124.388 cv
317.957 124.763 318.466 124.973 318.997 124.973 cv
cp
f
320.138 62.4337 mo
320.669 62.4337 321.178 62.223 321.553 61.8479 cv
321.928 61.4729 322.138 60.9641 322.138 60.4337 cv
322.138 59.9033 321.928 59.3945 321.553 59.0195 cv
321.178 58.6444 320.669 58.4337 320.138 58.4337 cv
319.608 58.4337 319.099 58.6444 318.724 59.0195 cv
318.349 59.3945 318.138 59.9033 318.138 60.4337 cv
318.138 60.9641 318.349 61.4729 318.724 61.8479 cv
319.099 62.223 319.608 62.4337 320.138 62.4337 cv
cp
f
321.416 158.114 mo
321.947 158.114 322.455 157.903 322.83 157.528 cv
323.206 157.153 323.416 156.645 323.416 156.114 cv
323.416 155.584 323.206 155.075 322.83 154.7 cv
322.455 154.325 321.947 154.114 321.416 154.114 cv
320.886 154.114 320.377 154.325 320.002 154.7 cv
319.627 155.075 319.416 155.584 319.416 156.114 cv
319.416 156.645 319.627 157.153 320.002 157.528 cv
320.377 157.903 320.886 158.114 321.416 158.114 cv
cp
f
367.067 174.916 mo
367.597 174.916 368.106 174.705 368.481 174.33 cv
368.856 173.955 369.067 173.446 369.067 172.916 cv
369.067 172.385 368.856 171.877 368.481 171.502 cv
368.106 171.127 367.597 170.916 367.067 170.916 cv
366.536 170.916 366.028 171.127 365.653 171.502 cv
365.277 171.877 365.067 172.385 365.067 172.916 cv
365.067 173.446 365.277 173.955 365.653 174.33 cv
366.028 174.705 366.536 174.916 367.067 174.916 cv
cp
f
369.354 197.845 mo
369.884 197.845 370.393 197.634 370.768 197.259 cv
371.143 196.884 371.354 196.375 371.354 195.845 cv
371.354 195.314 371.143 194.806 370.768 194.43 cv
370.393 194.055 369.884 193.845 369.354 193.845 cv
368.823 193.845 368.314 194.055 367.939 194.43 cv
367.564 194.806 367.354 195.314 367.354 195.845 cv
367.354 196.375 367.564 196.884 367.939 197.259 cv
368.314 197.634 368.823 197.845 369.354 197.845 cv
cp
f
372.882 206.965 mo
373.413 206.965 373.921 206.754 374.297 206.379 cv
374.672 206.004 374.882 205.495 374.882 204.965 cv
374.882 204.435 374.672 203.926 374.297 203.551 cv
373.921 203.176 373.413 202.965 372.882 202.965 cv
372.352 202.965 371.843 203.176 371.468 203.551 cv
371.093 203.926 370.882 204.435 370.882 204.965 cv
370.882 205.495 371.093 206.004 371.468 206.379 cv
371.843 206.754 372.352 206.965 372.882 206.965 cv
cp
f
367.625 188.573 mo
368.156 188.573 368.665 188.363 369.04 187.988 cv
369.415 187.612 369.625 187.104 369.625 186.573 cv
369.625 186.043 369.415 185.534 369.04 185.159 cv
368.665 184.784 368.156 184.573 367.625 184.573 cv
367.095 184.573 366.586 184.784 366.211 185.159 cv
365.836 185.534 365.625 186.043 365.625 186.573 cv
365.625 187.104 365.836 187.612 366.211 187.988 cv
366.586 188.363 367.095 188.573 367.625 188.573 cv
cp
f
370.734 206.024 mo
371.265 206.024 371.774 205.813 372.149 205.438 cv
372.524 205.063 372.734 204.555 372.734 204.024 cv
372.734 203.494 372.524 202.985 372.149 202.61 cv
371.774 202.235 371.265 202.024 370.734 202.024 cv
370.204 202.024 369.695 202.235 369.32 202.61 cv
368.945 202.985 368.734 203.494 368.734 204.024 cv
368.734 204.555 368.945 205.063 369.32 205.438 cv
369.695 205.813 370.204 206.024 370.734 206.024 cv
cp
f
370.784 179.986 mo
371.315 179.986 371.823 179.775 372.198 179.4 cv
372.574 179.025 372.784 178.516 372.784 177.986 cv
372.784 177.455 372.574 176.946 372.198 176.571 cv
371.823 176.196 371.315 175.986 370.784 175.986 cv
370.254 175.986 369.745 176.196 369.37 176.571 cv
368.995 176.946 368.784 177.455 368.784 177.986 cv
368.784 178.516 368.995 179.025 369.37 179.4 cv
369.745 179.775 370.254 179.986 370.784 179.986 cv
cp
f
373.627 145.838 mo
374.158 145.838 374.666 145.627 375.042 145.252 cv
375.417 144.877 375.627 144.368 375.627 143.838 cv
375.627 143.307 375.417 142.799 375.042 142.424 cv
374.666 142.048 374.158 141.838 373.627 141.838 cv
373.097 141.838 372.588 142.048 372.213 142.424 cv
371.838 142.799 371.627 143.307 371.627 143.838 cv
371.627 144.368 371.838 144.877 372.213 145.252 cv
372.588 145.627 373.097 145.838 373.627 145.838 cv
cp
f
373.24 182.169 mo
373.771 182.169 374.279 181.958 374.655 181.583 cv
375.03 181.208 375.24 180.699 375.24 180.169 cv
375.24 179.638 375.03 179.13 374.655 178.755 cv
374.279 178.38 373.771 178.169 373.24 178.169 cv
372.71 178.169 372.201 178.38 371.826 178.755 cv
371.451 179.13 371.24 179.638 371.24 180.169 cv
371.24 180.699 371.451 181.208 371.826 181.583 cv
372.201 181.958 372.71 182.169 373.24 182.169 cv
cp
f
372.568 195.803 mo
373.098 195.803 373.607 195.592 373.982 195.217 cv
374.357 194.842 374.568 194.333 374.568 193.803 cv
374.568 193.273 374.357 192.764 373.982 192.389 cv
373.607 192.014 373.098 191.803 372.568 191.803 cv
372.038 191.803 371.529 192.014 371.154 192.389 cv
370.779 192.764 370.568 193.273 370.568 193.803 cv
370.568 194.333 370.779 194.842 371.154 195.217 cv
371.529 195.592 372.038 195.803 372.568 195.803 cv
cp
f
371.13 147.248 mo
371.66 147.248 372.169 147.038 372.544 146.663 cv
372.919 146.287 373.13 145.779 373.13 145.248 cv
373.13 144.718 372.919 144.209 372.544 143.834 cv
372.169 143.459 371.66 143.248 371.13 143.248 cv
370.599 143.248 370.091 143.459 369.716 143.834 cv
369.341 144.209 369.13 144.718 369.13 145.248 cv
369.13 145.779 369.341 146.287 369.716 146.663 cv
370.091 147.038 370.599 147.248 371.13 147.248 cv
cp
f
372.18 209.089 mo
372.71 209.089 373.219 208.878 373.594 208.503 cv
373.969 208.128 374.18 207.619 374.18 207.089 cv
374.18 206.559 373.969 206.05 373.594 205.675 cv
373.219 205.3 372.71 205.089 372.18 205.089 cv
371.649 205.089 371.141 205.3 370.766 205.675 cv
370.391 206.05 370.18 206.559 370.18 207.089 cv
370.18 207.619 370.391 208.128 370.766 208.503 cv
371.141 208.878 371.649 209.089 372.18 209.089 cv
cp
f
374.292 175.303 mo
374.822 175.303 375.331 175.092 375.706 174.717 cv
376.081 174.342 376.292 173.834 376.292 173.303 cv
376.292 172.773 376.081 172.264 375.706 171.889 cv
375.331 171.514 374.822 171.303 374.292 171.303 cv
373.762 171.303 373.253 171.514 372.878 171.889 cv
372.503 172.264 372.292 172.773 372.292 173.303 cv
372.292 173.834 372.503 174.342 372.878 174.717 cv
373.253 175.092 373.762 175.303 374.292 175.303 cv
cp
f
366.401 204.21 mo
366.932 204.21 367.44 203.999 367.815 203.624 cv
368.19 203.249 368.401 202.74 368.401 202.21 cv
368.401 201.679 368.19 201.171 367.815 200.796 cv
367.44 200.421 366.932 200.21 366.401 200.21 cv
365.871 200.21 365.362 200.421 364.987 200.796 cv
364.612 201.171 364.401 201.679 364.401 202.21 cv
364.401 202.74 364.612 203.249 364.987 203.624 cv
365.362 203.999 365.871 204.21 366.401 204.21 cv
cp
f
367.448 186.988 mo
367.979 186.988 368.488 186.778 368.863 186.403 cv
369.238 186.028 369.448 185.519 369.448 184.988 cv
369.448 184.458 369.238 183.949 368.863 183.574 cv
368.488 183.199 367.979 182.988 367.448 182.988 cv
366.918 182.988 366.409 183.199 366.034 183.574 cv
365.659 183.949 365.448 184.458 365.448 184.988 cv
365.448 185.519 365.659 186.028 366.034 186.403 cv
366.409 186.778 366.918 186.988 367.448 186.988 cv
cp
f
370.447 200.248 mo
370.977 200.248 371.486 200.037 371.861 199.662 cv
372.236 199.287 372.447 198.778 372.447 198.248 cv
372.447 197.717 372.236 197.209 371.861 196.833 cv
371.486 196.458 370.977 196.248 370.447 196.248 cv
369.917 196.248 369.408 196.458 369.033 196.833 cv
368.658 197.209 368.447 197.717 368.447 198.248 cv
368.447 198.778 368.658 199.287 369.033 199.662 cv
369.408 200.037 369.917 200.248 370.447 200.248 cv
cp
f
366.16 155.686 mo
366.691 155.686 367.2 155.475 367.575 155.1 cv
367.95 154.725 368.16 154.216 368.16 153.686 cv
368.16 153.155 367.95 152.647 367.575 152.272 cv
367.2 151.897 366.691 151.686 366.16 151.686 cv
365.63 151.686 365.121 151.897 364.746 152.272 cv
364.371 152.647 364.16 153.155 364.16 153.686 cv
364.16 154.216 364.371 154.725 364.746 155.1 cv
365.121 155.475 365.63 155.686 366.16 155.686 cv
cp
f
365.797 164.973 mo
366.327 164.973 366.836 164.762 367.211 164.387 cv
367.586 164.012 367.797 163.503 367.797 162.973 cv
367.797 162.442 367.586 161.934 367.211 161.559 cv
366.836 161.184 366.327 160.973 365.797 160.973 cv
365.267 160.973 364.758 161.184 364.383 161.559 cv
364.008 161.934 363.797 162.442 363.797 162.973 cv
363.797 163.503 364.008 164.012 364.383 164.387 cv
364.758 164.762 365.267 164.973 365.797 164.973 cv
cp
f
373.928 175.22 mo
374.458 175.22 374.967 175.009 375.342 174.634 cv
375.717 174.259 375.928 173.75 375.928 173.22 cv
375.928 172.689 375.717 172.181 375.342 171.806 cv
374.967 171.43 374.458 171.22 373.928 171.22 cv
373.397 171.22 372.889 171.43 372.514 171.806 cv
372.139 172.181 371.928 172.689 371.928 173.22 cv
371.928 173.75 372.139 174.259 372.514 174.634 cv
372.889 175.009 373.397 175.22 373.928 175.22 cv
cp
f
368.75 174.998 mo
369.28 174.998 369.789 174.787 370.164 174.412 cv
370.539 174.037 370.75 173.528 370.75 172.998 cv
370.75 172.468 370.539 171.959 370.164 171.584 cv
369.789 171.209 369.28 170.998 368.75 170.998 cv
368.219 170.998 367.71 171.209 367.335 171.584 cv
366.96 171.959 366.75 172.468 366.75 172.998 cv
366.75 173.528 366.96 174.037 367.335 174.412 cv
367.71 174.787 368.219 174.998 368.75 174.998 cv
cp
f
368.252 190.773 mo
368.782 190.773 369.291 190.562 369.666 190.187 cv
370.041 189.812 370.252 189.304 370.252 188.773 cv
370.252 188.243 370.041 187.734 369.666 187.359 cv
369.291 186.984 368.782 186.773 368.252 186.773 cv
367.722 186.773 367.213 186.984 366.838 187.359 cv
366.463 187.734 366.252 188.243 366.252 188.773 cv
366.252 189.304 366.463 189.812 366.838 190.187 cv
367.213 190.562 367.722 190.773 368.252 190.773 cv
cp
f
365.951 183.261 mo
366.481 183.261 366.99 183.05 367.365 182.675 cv
367.74 182.3 367.951 181.791 367.951 181.261 cv
367.951 180.73 367.74 180.221 367.365 179.846 cv
366.99 179.471 366.481 179.261 365.951 179.261 cv
365.42 179.261 364.911 179.471 364.536 179.846 cv
364.161 180.221 363.951 180.73 363.951 181.261 cv
363.951 181.791 364.161 182.3 364.536 182.675 cv
364.911 183.05 365.42 183.261 365.951 183.261 cv
cp
f
368.016 185.369 mo
368.546 185.369 369.055 185.158 369.43 184.783 cv
369.805 184.408 370.016 183.9 370.016 183.369 cv
370.016 182.839 369.805 182.33 369.43 181.955 cv
369.055 181.58 368.546 181.369 368.016 181.369 cv
367.485 181.369 366.977 181.58 366.602 181.955 cv
366.227 182.33 366.016 182.839 366.016 183.369 cv
366.016 183.9 366.227 184.408 366.602 184.783 cv
366.977 185.158 367.485 185.369 368.016 185.369 cv
cp
f
374.609 134.636 mo
375.139 134.636 375.648 134.425 376.023 134.05 cv
376.398 133.675 376.609 133.166 376.609 132.636 cv
376.609 132.106 376.398 131.597 376.023 131.222 cv
375.648 130.847 375.139 130.636 374.609 130.636 cv
374.078 130.636 373.569 130.847 373.194 131.222 cv
372.819 131.597 372.609 132.106 372.609 132.636 cv
372.609 133.166 372.819 133.675 373.194 134.05 cv
373.569 134.425 374.078 134.636 374.609 134.636 cv
cp
f
370.221 185.527 mo
370.752 185.527 371.261 185.316 371.636 184.941 cv
372.011 184.566 372.221 184.057 372.221 183.527 cv
372.221 182.996 372.011 182.488 371.636 182.113 cv
371.261 181.737 370.752 181.527 370.221 181.527 cv
369.691 181.527 369.182 181.737 368.807 182.113 cv
368.432 182.488 368.221 182.996 368.221 183.527 cv
368.221 184.057 368.432 184.566 368.807 184.941 cv
369.182 185.316 369.691 185.527 370.221 185.527 cv
cp
f
370.65 183.13 mo
371.18 183.13 371.689 182.919 372.064 182.544 cv
372.439 182.169 372.65 181.66 372.65 181.13 cv
372.65 180.6 372.439 180.091 372.064 179.716 cv
371.689 179.341 371.18 179.13 370.65 179.13 cv
370.12 179.13 369.611 179.341 369.236 179.716 cv
368.861 180.091 368.65 180.6 368.65 181.13 cv
368.65 181.66 368.861 182.169 369.236 182.544 cv
369.611 182.919 370.12 183.13 370.65 183.13 cv
cp
f
371.116 196.998 mo
371.646 196.998 372.155 196.787 372.53 196.412 cv
372.905 196.037 373.116 195.529 373.116 194.998 cv
373.116 194.468 372.905 193.959 372.53 193.584 cv
372.155 193.209 371.646 192.998 371.116 192.998 cv
370.585 192.998 370.077 193.209 369.701 193.584 cv
369.326 193.959 369.116 194.468 369.116 194.998 cv
369.116 195.529 369.326 196.037 369.701 196.412 cv
370.077 196.787 370.585 196.998 371.116 196.998 cv
cp
f
367.192 207.785 mo
367.722 207.785 368.231 207.574 368.606 207.199 cv
368.981 206.824 369.192 206.315 369.192 205.785 cv
369.192 205.254 368.981 204.746 368.606 204.371 cv
368.231 203.995 367.722 203.785 367.192 203.785 cv
366.661 203.785 366.153 203.995 365.778 204.371 cv
365.403 204.746 365.192 205.254 365.192 205.785 cv
365.192 206.315 365.403 206.824 365.778 207.199 cv
366.153 207.574 366.661 207.785 367.192 207.785 cv
cp
f
368.076 214.623 mo
368.607 214.623 369.116 214.412 369.491 214.037 cv
369.866 213.662 370.076 213.153 370.076 212.623 cv
370.076 212.092 369.866 211.583 369.491 211.208 cv
369.116 210.833 368.607 210.623 368.076 210.623 cv
367.546 210.623 367.037 210.833 366.662 211.208 cv
366.287 211.583 366.076 212.092 366.076 212.623 cv
366.076 213.153 366.287 213.662 366.662 214.037 cv
367.037 214.412 367.546 214.623 368.076 214.623 cv
cp
f
370.165 196.293 mo
370.695 196.293 371.204 196.082 371.579 195.707 cv
371.954 195.332 372.165 194.823 372.165 194.293 cv
372.165 193.762 371.954 193.253 371.579 192.878 cv
371.204 192.503 370.695 192.293 370.165 192.293 cv
369.634 192.293 369.126 192.503 368.751 192.878 cv
368.376 193.253 368.165 193.762 368.165 194.293 cv
368.165 194.823 368.376 195.332 368.751 195.707 cv
369.126 196.082 369.634 196.293 370.165 196.293 cv
cp
f
368.531 185.158 mo
369.061 185.158 369.57 184.947 369.945 184.572 cv
370.32 184.197 370.531 183.688 370.531 183.158 cv
370.531 182.628 370.32 182.119 369.945 181.744 cv
369.57 181.369 369.061 181.158 368.531 181.158 cv
368 181.158 367.492 181.369 367.117 181.744 cv
366.742 182.119 366.531 182.628 366.531 183.158 cv
366.531 183.688 366.742 184.197 367.117 184.572 cv
367.492 184.947 368 185.158 368.531 185.158 cv
cp
f
373.659 177.519 mo
374.189 177.519 374.698 177.309 375.073 176.934 cv
375.448 176.559 375.659 176.05 375.659 175.519 cv
375.659 174.989 375.448 174.48 375.073 174.105 cv
374.698 173.73 374.189 173.519 373.659 173.519 cv
373.128 173.519 372.62 173.73 372.244 174.105 cv
371.869 174.48 371.659 174.989 371.659 175.519 cv
371.659 176.05 371.869 176.559 372.244 176.934 cv
372.62 177.309 373.128 177.519 373.659 177.519 cv
cp
f
370.938 200.001 mo
371.468 200.001 371.977 199.79 372.352 199.415 cv
372.727 199.04 372.938 198.532 372.938 198.001 cv
372.938 197.471 372.727 196.962 372.352 196.587 cv
371.977 196.212 371.468 196.001 370.938 196.001 cv
370.407 196.001 369.898 196.212 369.523 196.587 cv
369.148 196.962 368.938 197.471 368.938 198.001 cv
368.938 198.532 369.148 199.04 369.523 199.415 cv
369.898 199.79 370.407 200.001 370.938 200.001 cv
cp
f
370.918 198.587 mo
371.448 198.587 371.957 198.377 372.332 198.002 cv
372.707 197.626 372.918 197.118 372.918 196.587 cv
372.918 196.057 372.707 195.548 372.332 195.173 cv
371.957 194.798 371.448 194.587 370.918 194.587 cv
370.388 194.587 369.879 194.798 369.504 195.173 cv
369.129 195.548 368.918 196.057 368.918 196.587 cv
368.918 197.118 369.129 197.626 369.504 198.002 cv
369.879 198.377 370.388 198.587 370.918 198.587 cv
cp
f
366.758 195.563 mo
367.288 195.563 367.797 195.353 368.172 194.978 cv
368.547 194.602 368.758 194.094 368.758 193.563 cv
368.758 193.033 368.547 192.524 368.172 192.149 cv
367.797 191.774 367.288 191.563 366.758 191.563 cv
366.227 191.563 365.718 191.774 365.343 192.149 cv
364.968 192.524 364.758 193.033 364.758 193.563 cv
364.758 194.094 364.968 194.602 365.343 194.978 cv
365.718 195.353 366.227 195.563 366.758 195.563 cv
cp
f
369.01 192.55 mo
369.54 192.55 370.049 192.339 370.424 191.964 cv
370.799 191.589 371.01 191.08 371.01 190.55 cv
371.01 190.02 370.799 189.511 370.424 189.136 cv
370.049 188.761 369.54 188.55 369.01 188.55 cv
368.48 188.55 367.971 188.761 367.596 189.136 cv
367.221 189.511 367.01 190.02 367.01 190.55 cv
367.01 191.08 367.221 191.589 367.596 191.964 cv
367.971 192.339 368.48 192.55 369.01 192.55 cv
cp
f
370.168 206.111 mo
370.698 206.111 371.207 205.9 371.582 205.525 cv
371.957 205.15 372.168 204.641 372.168 204.111 cv
372.168 203.581 371.957 203.072 371.582 202.697 cv
371.207 202.322 370.698 202.111 370.168 202.111 cv
369.637 202.111 369.128 202.322 368.753 202.697 cv
368.378 203.072 368.168 203.581 368.168 204.111 cv
368.168 204.641 368.378 205.15 368.753 205.525 cv
369.128 205.9 369.637 206.111 370.168 206.111 cv
cp
f
373.314 171.101 mo
373.844 171.101 374.353 170.89 374.728 170.515 cv
375.103 170.14 375.314 169.631 375.314 169.101 cv
375.314 168.571 375.103 168.062 374.728 167.687 cv
374.353 167.312 373.844 167.101 373.314 167.101 cv
372.784 167.101 372.275 167.312 371.9 167.687 cv
371.525 168.062 371.314 168.571 371.314 169.101 cv
371.314 169.631 371.525 170.14 371.9 170.515 cv
372.275 170.89 372.784 171.101 373.314 171.101 cv
cp
f
371.618 203.347 mo
372.148 203.347 372.657 203.136 373.032 202.761 cv
373.407 202.386 373.618 201.878 373.618 201.347 cv
373.618 200.817 373.407 200.308 373.032 199.933 cv
372.657 199.558 372.148 199.347 371.618 199.347 cv
371.088 199.347 370.579 199.558 370.204 199.933 cv
369.829 200.308 369.618 200.817 369.618 201.347 cv
369.618 201.878 369.829 202.386 370.204 202.761 cv
370.579 203.136 371.088 203.347 371.618 203.347 cv
cp
f
372.628 204.633 mo
373.158 204.633 373.667 204.422 374.042 204.047 cv
374.417 203.672 374.628 203.163 374.628 202.633 cv
374.628 202.103 374.417 201.594 374.042 201.219 cv
373.667 200.844 373.158 200.633 372.628 200.633 cv
372.098 200.633 371.589 200.844 371.214 201.219 cv
370.839 201.594 370.628 202.103 370.628 202.633 cv
370.628 203.163 370.839 203.672 371.214 204.047 cv
371.589 204.422 372.098 204.633 372.628 204.633 cv
cp
f
373.951 161.983 mo
374.481 161.983 374.99 161.772 375.365 161.397 cv
375.74 161.022 375.951 160.513 375.951 159.983 cv
375.951 159.452 375.74 158.944 375.365 158.569 cv
374.99 158.193 374.481 157.983 373.951 157.983 cv
373.42 157.983 372.912 158.193 372.537 158.569 cv
372.161 158.944 371.951 159.452 371.951 159.983 cv
371.951 160.513 372.161 161.022 372.537 161.397 cv
372.912 161.772 373.42 161.983 373.951 161.983 cv
cp
f
370.298 200.449 mo
370.828 200.449 371.337 200.238 371.712 199.863 cv
372.087 199.488 372.298 198.979 372.298 198.449 cv
372.298 197.919 372.087 197.41 371.712 197.035 cv
371.337 196.66 370.828 196.449 370.298 196.449 cv
369.767 196.449 369.259 196.66 368.884 197.035 cv
368.508 197.41 368.298 197.919 368.298 198.449 cv
368.298 198.979 368.508 199.488 368.884 199.863 cv
369.259 200.238 369.767 200.449 370.298 200.449 cv
cp
f
370.845 208.017 mo
371.376 208.017 371.884 207.806 372.259 207.431 cv
372.635 207.056 372.845 206.547 372.845 206.017 cv
372.845 205.486 372.635 204.978 372.259 204.603 cv
371.884 204.228 371.376 204.017 370.845 204.017 cv
370.315 204.017 369.806 204.228 369.431 204.603 cv
369.056 204.978 368.845 205.486 368.845 206.017 cv
368.845 206.547 369.056 207.056 369.431 207.431 cv
369.806 207.806 370.315 208.017 370.845 208.017 cv
cp
f
365.245 207.69 mo
365.776 207.69 366.284 207.479 366.66 207.104 cv
367.035 206.729 367.245 206.22 367.245 205.69 cv
367.245 205.159 367.035 204.651 366.66 204.276 cv
366.284 203.901 365.776 203.69 365.245 203.69 cv
364.715 203.69 364.206 203.901 363.831 204.276 cv
363.456 204.651 363.245 205.159 363.245 205.69 cv
363.245 206.22 363.456 206.729 363.831 207.104 cv
364.206 207.479 364.715 207.69 365.245 207.69 cv
cp
f
369.523 197.414 mo
370.054 197.414 370.563 197.203 370.938 196.828 cv
371.313 196.453 371.523 195.944 371.523 195.414 cv
371.523 194.883 371.313 194.375 370.938 194 cv
370.563 193.625 370.054 193.414 369.523 193.414 cv
368.993 193.414 368.484 193.625 368.109 194 cv
367.734 194.375 367.523 194.883 367.523 195.414 cv
367.523 195.944 367.734 196.453 368.109 196.828 cv
368.484 197.203 368.993 197.414 369.523 197.414 cv
cp
f
372.084 197.544 mo
372.614 197.544 373.123 197.333 373.498 196.958 cv
373.873 196.583 374.084 196.074 374.084 195.544 cv
374.084 195.013 373.873 194.505 373.498 194.129 cv
373.123 193.754 372.614 193.544 372.084 193.544 cv
371.553 193.544 371.044 193.754 370.669 194.129 cv
370.294 194.505 370.084 195.013 370.084 195.544 cv
370.084 196.074 370.294 196.583 370.669 196.958 cv
371.044 197.333 371.553 197.544 372.084 197.544 cv
cp
f
370.817 152.086 mo
371.347 152.086 371.856 151.876 372.231 151.501 cv
372.606 151.126 372.817 150.617 372.817 150.086 cv
372.817 149.556 372.606 149.047 372.231 148.672 cv
371.856 148.297 371.347 148.086 370.817 148.086 cv
370.286 148.086 369.778 148.297 369.403 148.672 cv
369.027 149.047 368.817 149.556 368.817 150.086 cv
368.817 150.617 369.027 151.126 369.403 151.501 cv
369.778 151.876 370.286 152.086 370.817 152.086 cv
cp
f
365.034 218.072 mo
365.564 218.072 366.073 217.861 366.448 217.486 cv
366.823 217.111 367.034 216.602 367.034 216.072 cv
367.034 215.541 366.823 215.033 366.448 214.658 cv
366.073 214.283 365.564 214.072 365.034 214.072 cv
364.503 214.072 363.995 214.283 363.62 214.658 cv
363.244 215.033 363.034 215.541 363.034 216.072 cv
363.034 216.602 363.244 217.111 363.62 217.486 cv
363.995 217.861 364.503 218.072 365.034 218.072 cv
cp
f
373.728 206.103 mo
374.259 206.103 374.768 205.893 375.143 205.518 cv
375.518 205.142 375.728 204.634 375.728 204.103 cv
375.728 203.573 375.518 203.064 375.143 202.689 cv
374.768 202.314 374.259 202.103 373.728 202.103 cv
373.198 202.103 372.689 202.314 372.314 202.689 cv
371.939 203.064 371.728 203.573 371.728 204.103 cv
371.728 204.634 371.939 205.142 372.314 205.518 cv
372.689 205.893 373.198 206.103 373.728 206.103 cv
cp
f
369.82 214.071 mo
370.35 214.071 370.859 213.86 371.234 213.485 cv
371.609 213.11 371.82 212.601 371.82 212.071 cv
371.82 211.54 371.609 211.032 371.234 210.657 cv
370.859 210.281 370.35 210.071 369.82 210.071 cv
369.289 210.071 368.781 210.281 368.406 210.657 cv
368.031 211.032 367.82 211.54 367.82 212.071 cv
367.82 212.601 368.031 213.11 368.406 213.485 cv
368.781 213.86 369.289 214.071 369.82 214.071 cv
cp
f
373.443 149.528 mo
373.973 149.528 374.482 149.317 374.857 148.942 cv
375.232 148.567 375.443 148.058 375.443 147.528 cv
375.443 146.997 375.232 146.489 374.857 146.114 cv
374.482 145.738 373.973 145.528 373.443 145.528 cv
372.913 145.528 372.404 145.738 372.029 146.114 cv
371.654 146.489 371.443 146.997 371.443 147.528 cv
371.443 148.058 371.654 148.567 372.029 148.942 cv
372.404 149.317 372.913 149.528 373.443 149.528 cv
cp
f
420.179 220.88 mo
420.709 220.88 421.218 220.669 421.593 220.294 cv
421.968 219.919 422.179 219.41 422.179 218.88 cv
422.179 218.35 421.968 217.841 421.593 217.466 cv
421.218 217.091 420.709 216.88 420.179 216.88 cv
419.648 216.88 419.139 217.091 418.764 217.466 cv
418.389 217.841 418.179 218.35 418.179 218.88 cv
418.179 219.41 418.389 219.919 418.764 220.294 cv
419.139 220.669 419.648 220.88 420.179 220.88 cv
cp
f
421.56 208.335 mo
422.091 208.335 422.599 208.124 422.974 207.749 cv
423.349 207.374 423.56 206.865 423.56 206.335 cv
423.56 205.804 423.349 205.295 422.974 204.92 cv
422.599 204.545 422.091 204.335 421.56 204.335 cv
421.03 204.335 420.521 204.545 420.146 204.92 cv
419.771 205.295 419.56 205.804 419.56 206.335 cv
419.56 206.865 419.771 207.374 420.146 207.749 cv
420.521 208.124 421.03 208.335 421.56 208.335 cv
cp
f
421.6 203.475 mo
422.13 203.475 422.639 203.264 423.014 202.889 cv
423.389 202.514 423.6 202.006 423.6 201.475 cv
423.6 200.945 423.389 200.436 423.014 200.061 cv
422.639 199.686 422.13 199.475 421.6 199.475 cv
421.069 199.475 420.561 199.686 420.186 200.061 cv
419.811 200.436 419.6 200.945 419.6 201.475 cv
419.6 202.006 419.811 202.514 420.186 202.889 cv
420.561 203.264 421.069 203.475 421.6 203.475 cv
cp
f
414.977 199.74 mo
415.507 199.74 416.016 199.529 416.391 199.154 cv
416.766 198.779 416.977 198.27 416.977 197.74 cv
416.977 197.21 416.766 196.701 416.391 196.326 cv
416.016 195.951 415.507 195.74 414.977 195.74 cv
414.446 195.74 413.937 195.951 413.562 196.326 cv
413.187 196.701 412.977 197.21 412.977 197.74 cv
412.977 198.27 413.187 198.779 413.562 199.154 cv
413.937 199.529 414.446 199.74 414.977 199.74 cv
cp
f
419.456 213.889 mo
419.987 213.889 420.496 213.679 420.871 213.304 cv
421.246 212.929 421.456 212.42 421.456 211.889 cv
421.456 211.359 421.246 210.85 420.871 210.475 cv
420.496 210.1 419.987 209.889 419.456 209.889 cv
418.926 209.889 418.417 210.1 418.042 210.475 cv
417.667 210.85 417.456 211.359 417.456 211.889 cv
417.456 212.42 417.667 212.929 418.042 213.304 cv
418.417 213.679 418.926 213.889 419.456 213.889 cv
cp
f
423.805 183.433 mo
424.336 183.433 424.844 183.222 425.219 182.847 cv
425.594 182.472 425.805 181.963 425.805 181.433 cv
425.805 180.903 425.594 180.394 425.219 180.019 cv
424.844 179.644 424.336 179.433 423.805 179.433 cv
423.275 179.433 422.766 179.644 422.391 180.019 cv
422.016 180.394 421.805 180.903 421.805 181.433 cv
421.805 181.963 422.016 182.472 422.391 182.847 cv
422.766 183.222 423.275 183.433 423.805 183.433 cv
cp
f
423.203 189.567 mo
423.733 189.567 424.242 189.356 424.617 188.981 cv
424.992 188.606 425.203 188.097 425.203 187.567 cv
425.203 187.036 424.992 186.528 424.617 186.153 cv
424.242 185.778 423.733 185.567 423.203 185.567 cv
422.672 185.567 422.164 185.778 421.788 186.153 cv
421.413 186.528 421.203 187.036 421.203 187.567 cv
421.203 188.097 421.413 188.606 421.788 188.981 cv
422.164 189.356 422.672 189.567 423.203 189.567 cv
cp
f
422.736 185.969 mo
423.266 185.969 423.775 185.759 424.15 185.383 cv
424.525 185.008 424.736 184.5 424.736 183.969 cv
424.736 183.439 424.525 182.93 424.15 182.555 cv
423.775 182.18 423.266 181.969 422.736 181.969 cv
422.205 181.969 421.696 182.18 421.321 182.555 cv
420.946 182.93 420.736 183.439 420.736 183.969 cv
420.736 184.5 420.946 185.008 421.321 185.383 cv
421.696 185.759 422.205 185.969 422.736 185.969 cv
cp
f
421.821 201.224 mo
422.351 201.224 422.86 201.013 423.235 200.638 cv
423.61 200.263 423.821 199.754 423.821 199.224 cv
423.821 198.693 423.61 198.184 423.235 197.809 cv
422.86 197.434 422.351 197.224 421.821 197.224 cv
421.29 197.224 420.782 197.434 420.407 197.809 cv
420.032 198.184 419.821 198.693 419.821 199.224 cv
419.821 199.754 420.032 200.263 420.407 200.638 cv
420.782 201.013 421.29 201.224 421.821 201.224 cv
cp
f
415.09 190.349 mo
415.62 190.349 416.129 190.139 416.504 189.764 cv
416.879 189.389 417.09 188.88 417.09 188.349 cv
417.09 187.819 416.879 187.31 416.504 186.935 cv
416.129 186.56 415.62 186.349 415.09 186.349 cv
414.559 186.349 414.051 186.56 413.676 186.935 cv
413.301 187.31 413.09 187.819 413.09 188.349 cv
413.09 188.88 413.301 189.389 413.676 189.764 cv
414.051 190.139 414.559 190.349 415.09 190.349 cv
cp
f
423.419 206.884 mo
423.95 206.884 424.459 206.673 424.834 206.298 cv
425.209 205.923 425.419 205.414 425.419 204.884 cv
425.419 204.353 425.209 203.845 424.834 203.47 cv
424.459 203.094 423.95 202.884 423.419 202.884 cv
422.889 202.884 422.38 203.094 422.005 203.47 cv
421.63 203.845 421.419 204.353 421.419 204.884 cv
421.419 205.414 421.63 205.923 422.005 206.298 cv
422.38 206.673 422.889 206.884 423.419 206.884 cv
cp
f
414.972 193.352 mo
415.502 193.352 416.011 193.141 416.386 192.766 cv
416.761 192.391 416.972 191.882 416.972 191.352 cv
416.972 190.822 416.761 190.313 416.386 189.938 cv
416.011 189.563 415.502 189.352 414.972 189.352 cv
414.441 189.352 413.932 189.563 413.557 189.938 cv
413.182 190.313 412.972 190.822 412.972 191.352 cv
412.972 191.882 413.182 192.391 413.557 192.766 cv
413.932 193.141 414.441 193.352 414.972 193.352 cv
cp
f
417.95 209.363 mo
418.48 209.363 418.989 209.152 419.364 208.777 cv
419.739 208.402 419.95 207.893 419.95 207.363 cv
419.95 206.832 419.739 206.324 419.364 205.949 cv
418.989 205.573 418.48 205.363 417.95 205.363 cv
417.42 205.363 416.911 205.573 416.536 205.949 cv
416.161 206.324 415.95 206.832 415.95 207.363 cv
415.95 207.893 416.161 208.402 416.536 208.777 cv
416.911 209.152 417.42 209.363 417.95 209.363 cv
cp
f
419.882 199.103 mo
420.412 199.103 420.921 198.892 421.296 198.517 cv
421.671 198.142 421.882 197.633 421.882 197.103 cv
421.882 196.572 421.671 196.064 421.296 195.689 cv
420.921 195.314 420.412 195.103 419.882 195.103 cv
419.352 195.103 418.843 195.314 418.468 195.689 cv
418.093 196.064 417.882 196.572 417.882 197.103 cv
417.882 197.633 418.093 198.142 418.468 198.517 cv
418.843 198.892 419.352 199.103 419.882 199.103 cv
cp
f
423.282 204.181 mo
423.812 204.181 424.321 203.97 424.696 203.595 cv
425.071 203.22 425.282 202.711 425.282 202.181 cv
425.282 201.651 425.071 201.142 424.696 200.767 cv
424.321 200.392 423.812 200.181 423.282 200.181 cv
422.751 200.181 422.243 200.392 421.868 200.767 cv
421.492 201.142 421.282 201.651 421.282 202.181 cv
421.282 202.711 421.492 203.22 421.868 203.595 cv
422.243 203.97 422.751 204.181 423.282 204.181 cv
cp
f
418.49 176.234 mo
419.02 176.234 419.529 176.024 419.904 175.649 cv
420.279 175.274 420.49 174.765 420.49 174.234 cv
420.49 173.704 420.279 173.195 419.904 172.82 cv
419.529 172.445 419.02 172.234 418.49 172.234 cv
417.96 172.234 417.451 172.445 417.076 172.82 cv
416.701 173.195 416.49 173.704 416.49 174.234 cv
416.49 174.765 416.701 175.274 417.076 175.649 cv
417.451 176.024 417.96 176.234 418.49 176.234 cv
cp
f
424.03 208.334 mo
424.56 208.334 425.069 208.123 425.444 207.748 cv
425.819 207.373 426.03 206.864 426.03 206.334 cv
426.03 205.803 425.819 205.295 425.444 204.92 cv
425.069 204.544 424.56 204.334 424.03 204.334 cv
423.5 204.334 422.991 204.544 422.616 204.92 cv
422.241 205.295 422.03 205.803 422.03 206.334 cv
422.03 206.864 422.241 207.373 422.616 207.748 cv
422.991 208.123 423.5 208.334 424.03 208.334 cv
cp
f
415.323 205.907 mo
415.853 205.907 416.362 205.696 416.737 205.321 cv
417.112 204.946 417.323 204.438 417.323 203.907 cv
417.323 203.377 417.112 202.868 416.737 202.493 cv
416.362 202.118 415.853 201.907 415.323 201.907 cv
414.792 201.907 414.284 202.118 413.909 202.493 cv
413.534 202.868 413.323 203.377 413.323 203.907 cv
413.323 204.438 413.534 204.946 413.909 205.321 cv
414.284 205.696 414.792 205.907 415.323 205.907 cv
cp
f
417.889 204.094 mo
418.42 204.094 418.929 203.883 419.304 203.508 cv
419.679 203.133 419.889 202.624 419.889 202.094 cv
419.889 201.564 419.679 201.055 419.304 200.68 cv
418.929 200.305 418.42 200.094 417.889 200.094 cv
417.359 200.094 416.85 200.305 416.475 200.68 cv
416.1 201.055 415.889 201.564 415.889 202.094 cv
415.889 202.624 416.1 203.133 416.475 203.508 cv
416.85 203.883 417.359 204.094 417.889 204.094 cv
cp
f
418.691 191.761 mo
419.221 191.761 419.73 191.55 420.105 191.175 cv
420.48 190.8 420.691 190.291 420.691 189.761 cv
420.691 189.23 420.48 188.722 420.105 188.347 cv
419.73 187.972 419.221 187.761 418.691 187.761 cv
418.16 187.761 417.652 187.972 417.277 188.347 cv
416.902 188.722 416.691 189.23 416.691 189.761 cv
416.691 190.291 416.902 190.8 417.277 191.175 cv
417.652 191.55 418.16 191.761 418.691 191.761 cv
cp
f
420.572 199.57 mo
421.102 199.57 421.611 199.359 421.986 198.984 cv
422.361 198.609 422.572 198.1 422.572 197.57 cv
422.572 197.04 422.361 196.531 421.986 196.156 cv
421.611 195.781 421.102 195.57 420.572 195.57 cv
420.042 195.57 419.533 195.781 419.158 196.156 cv
418.783 196.531 418.572 197.04 418.572 197.57 cv
418.572 198.1 418.783 198.609 419.158 198.984 cv
419.533 199.359 420.042 199.57 420.572 199.57 cv
cp
f
416.89 187.528 mo
417.421 187.528 417.929 187.317 418.305 186.942 cv
418.68 186.567 418.89 186.058 418.89 185.528 cv
418.89 184.997 418.68 184.488 418.305 184.113 cv
417.929 183.738 417.421 183.528 416.89 183.528 cv
416.36 183.528 415.851 183.738 415.476 184.113 cv
415.101 184.488 414.89 184.997 414.89 185.528 cv
414.89 186.058 415.101 186.567 415.476 186.942 cv
415.851 187.317 416.36 187.528 416.89 187.528 cv
cp
f
415.833 204.1 mo
416.364 204.1 416.872 203.89 417.248 203.515 cv
417.623 203.14 417.833 202.631 417.833 202.1 cv
417.833 201.57 417.623 201.061 417.248 200.686 cv
416.872 200.311 416.364 200.1 415.833 200.1 cv
415.303 200.1 414.794 200.311 414.419 200.686 cv
414.044 201.061 413.833 201.57 413.833 202.1 cv
413.833 202.631 414.044 203.14 414.419 203.515 cv
414.794 203.89 415.303 204.1 415.833 204.1 cv
cp
f
421.114 187.848 mo
421.644 187.848 422.153 187.637 422.528 187.262 cv
422.903 186.887 423.114 186.379 423.114 185.848 cv
423.114 185.318 422.903 184.809 422.528 184.434 cv
422.153 184.059 421.644 183.848 421.114 183.848 cv
420.583 183.848 420.074 184.059 419.699 184.434 cv
419.324 184.809 419.114 185.318 419.114 185.848 cv
419.114 186.379 419.324 186.887 419.699 187.262 cv
420.074 187.637 420.583 187.848 421.114 187.848 cv
cp
f
419.755 199.271 mo
420.286 199.271 420.794 199.06 421.169 198.685 cv
421.544 198.31 421.755 197.802 421.755 197.271 cv
421.755 196.741 421.544 196.232 421.169 195.857 cv
420.794 195.482 420.286 195.271 419.755 195.271 cv
419.225 195.271 418.716 195.482 418.341 195.857 cv
417.966 196.232 417.755 196.741 417.755 197.271 cv
417.755 197.802 417.966 198.31 418.341 198.685 cv
418.716 199.06 419.225 199.271 419.755 199.271 cv
cp
f
419.945 204.103 mo
420.475 204.103 420.984 203.892 421.359 203.517 cv
421.734 203.142 421.945 202.633 421.945 202.103 cv
421.945 201.573 421.734 201.064 421.359 200.689 cv
420.984 200.314 420.475 200.103 419.945 200.103 cv
419.415 200.103 418.906 200.314 418.531 200.689 cv
418.156 201.064 417.945 201.573 417.945 202.103 cv
417.945 202.633 418.156 203.142 418.531 203.517 cv
418.906 203.892 419.415 204.103 419.945 204.103 cv
cp
f
415.747 208.432 mo
416.277 208.432 416.786 208.221 417.161 207.846 cv
417.536 207.471 417.747 206.962 417.747 206.432 cv
417.747 205.902 417.536 205.393 417.161 205.018 cv
416.786 204.643 416.277 204.432 415.747 204.432 cv
415.216 204.432 414.707 204.643 414.332 205.018 cv
413.957 205.393 413.747 205.902 413.747 206.432 cv
413.747 206.962 413.957 207.471 414.332 207.846 cv
414.707 208.221 415.216 208.432 415.747 208.432 cv
cp
f
414.897 215.39 mo
415.428 215.39 415.936 215.18 416.311 214.805 cv
416.686 214.43 416.897 213.921 416.897 213.39 cv
416.897 212.86 416.686 212.351 416.311 211.976 cv
415.936 211.601 415.428 211.39 414.897 211.39 cv
414.367 211.39 413.858 211.601 413.483 211.976 cv
413.108 212.351 412.897 212.86 412.897 213.39 cv
412.897 213.921 413.108 214.43 413.483 214.805 cv
413.858 215.18 414.367 215.39 414.897 215.39 cv
cp
f
418.609 192.944 mo
419.14 192.944 419.648 192.733 420.024 192.358 cv
420.399 191.983 420.609 191.475 420.609 190.944 cv
420.609 190.414 420.399 189.905 420.024 189.53 cv
419.648 189.155 419.14 188.944 418.609 188.944 cv
418.079 188.944 417.57 189.155 417.195 189.53 cv
416.82 189.905 416.609 190.414 416.609 190.944 cv
416.609 191.475 416.82 191.983 417.195 192.358 cv
417.57 192.733 418.079 192.944 418.609 192.944 cv
cp
f
421.217 200.94 mo
421.747 200.94 422.256 200.729 422.631 200.354 cv
423.006 199.979 423.217 199.47 423.217 198.94 cv
423.217 198.41 423.006 197.901 422.631 197.526 cv
422.256 197.151 421.747 196.94 421.217 196.94 cv
420.687 196.94 420.178 197.151 419.803 197.526 cv
419.428 197.901 419.217 198.41 419.217 198.94 cv
419.217 199.47 419.428 199.979 419.803 200.354 cv
420.178 200.729 420.687 200.94 421.217 200.94 cv
cp
f
416.21 203.228 mo
416.74 203.228 417.249 203.017 417.624 202.642 cv
417.999 202.267 418.21 201.758 418.21 201.228 cv
418.21 200.697 417.999 200.188 417.624 199.813 cv
417.249 199.438 416.74 199.228 416.21 199.228 cv
415.679 199.228 415.171 199.438 414.796 199.813 cv
414.42 200.188 414.21 200.697 414.21 201.228 cv
414.21 201.758 414.42 202.267 414.796 202.642 cv
415.171 203.017 415.679 203.228 416.21 203.228 cv
cp
f
418.243 209.274 mo
418.773 209.274 419.282 209.064 419.657 208.689 cv
420.032 208.314 420.243 207.805 420.243 207.274 cv
420.243 206.744 420.032 206.235 419.657 205.86 cv
419.282 205.485 418.773 205.274 418.243 205.274 cv
417.713 205.274 417.204 205.485 416.829 205.86 cv
416.454 206.235 416.243 206.744 416.243 207.274 cv
416.243 207.805 416.454 208.314 416.829 208.689 cv
417.204 209.064 417.713 209.274 418.243 209.274 cv
cp
f
417.91 214.937 mo
418.44 214.937 418.949 214.726 419.324 214.351 cv
419.699 213.976 419.91 213.468 419.91 212.937 cv
419.91 212.407 419.699 211.898 419.324 211.523 cv
418.949 211.148 418.44 210.937 417.91 210.937 cv
417.379 210.937 416.871 211.148 416.495 211.523 cv
416.12 211.898 415.91 212.407 415.91 212.937 cv
415.91 213.468 416.12 213.976 416.495 214.351 cv
416.871 214.726 417.379 214.937 417.91 214.937 cv
cp
f
415.159 197.556 mo
415.69 197.556 416.199 197.345 416.574 196.97 cv
416.949 196.595 417.159 196.087 417.159 195.556 cv
417.159 195.026 416.949 194.517 416.574 194.142 cv
416.199 193.767 415.69 193.556 415.159 193.556 cv
414.629 193.556 414.12 193.767 413.745 194.142 cv
413.37 194.517 413.159 195.026 413.159 195.556 cv
413.159 196.087 413.37 196.595 413.745 196.97 cv
414.12 197.345 414.629 197.556 415.159 197.556 cv
cp
f
422.948 194.484 mo
423.478 194.484 423.987 194.273 424.362 193.898 cv
424.737 193.523 424.948 193.014 424.948 192.484 cv
424.948 191.953 424.737 191.445 424.362 191.07 cv
423.987 190.695 423.478 190.484 422.948 190.484 cv
422.417 190.484 421.908 190.695 421.533 191.07 cv
421.158 191.445 420.948 191.953 420.948 192.484 cv
420.948 193.014 421.158 193.523 421.533 193.898 cv
421.908 194.273 422.417 194.484 422.948 194.484 cv
cp
f
417.89 192.375 mo
418.42 192.375 418.929 192.164 419.304 191.789 cv
419.679 191.414 419.89 190.905 419.89 190.375 cv
419.89 189.844 419.679 189.336 419.304 188.961 cv
418.929 188.586 418.42 188.375 417.89 188.375 cv
417.359 188.375 416.851 188.586 416.475 188.961 cv
416.1 189.336 415.89 189.844 415.89 190.375 cv
415.89 190.905 416.1 191.414 416.475 191.789 cv
416.851 192.164 417.359 192.375 417.89 192.375 cv
cp
f
423.197 202.392 mo
423.727 202.392 424.236 202.181 424.611 201.806 cv
424.986 201.431 425.197 200.923 425.197 200.392 cv
425.197 199.862 424.986 199.353 424.611 198.978 cv
424.236 198.603 423.727 198.392 423.197 198.392 cv
422.666 198.392 422.158 198.603 421.783 198.978 cv
421.408 199.353 421.197 199.862 421.197 200.392 cv
421.197 200.923 421.408 201.431 421.783 201.806 cv
422.158 202.181 422.666 202.392 423.197 202.392 cv
cp
f
418.775 194.124 mo
419.306 194.124 419.814 193.913 420.189 193.538 cv
420.564 193.163 420.775 192.655 420.775 192.124 cv
420.775 191.594 420.564 191.085 420.189 190.71 cv
419.814 190.335 419.306 190.124 418.775 190.124 cv
418.245 190.124 417.736 190.335 417.361 190.71 cv
416.986 191.085 416.775 191.594 416.775 192.124 cv
416.775 192.655 416.986 193.163 417.361 193.538 cv
417.736 193.913 418.245 194.124 418.775 194.124 cv
cp
f
424.139 188.224 mo
424.669 188.224 425.178 188.014 425.553 187.639 cv
425.928 187.264 426.139 186.755 426.139 186.224 cv
426.139 185.694 425.928 185.185 425.553 184.81 cv
425.178 184.435 424.669 184.224 424.139 184.224 cv
423.608 184.224 423.099 184.435 422.724 184.81 cv
422.349 185.185 422.139 185.694 422.139 186.224 cv
422.139 186.755 422.349 187.264 422.724 187.639 cv
423.099 188.014 423.608 188.224 424.139 188.224 cv
cp
f
423.218 197.423 mo
423.749 197.423 424.258 197.212 424.633 196.837 cv
425.008 196.462 425.218 195.953 425.218 195.423 cv
425.218 194.892 425.008 194.383 424.633 194.008 cv
424.258 193.633 423.749 193.423 423.218 193.423 cv
422.688 193.423 422.179 193.633 421.804 194.008 cv
421.429 194.383 421.218 194.892 421.218 195.423 cv
421.218 195.953 421.429 196.462 421.804 196.837 cv
422.179 197.212 422.688 197.423 423.218 197.423 cv
cp
f
423.553 213.458 mo
424.084 213.458 424.592 213.247 424.967 212.872 cv
425.342 212.497 425.553 211.989 425.553 211.458 cv
425.553 210.928 425.342 210.419 424.967 210.044 cv
424.592 209.669 424.084 209.458 423.553 209.458 cv
423.023 209.458 422.514 209.669 422.139 210.044 cv
421.764 210.419 421.553 210.928 421.553 211.458 cv
421.553 211.989 421.764 212.497 422.139 212.872 cv
422.514 213.247 423.023 213.458 423.553 213.458 cv
cp
f
417.077 195.704 mo
417.607 195.704 418.116 195.493 418.491 195.118 cv
418.866 194.743 419.077 194.235 419.077 193.704 cv
419.077 193.174 418.866 192.665 418.491 192.29 cv
418.116 191.915 417.607 191.704 417.077 191.704 cv
416.547 191.704 416.038 191.915 415.663 192.29 cv
415.288 192.665 415.077 193.174 415.077 193.704 cv
415.077 194.235 415.288 194.743 415.663 195.118 cv
416.038 195.493 416.547 195.704 417.077 195.704 cv
cp
f
421.326 216.386 mo
421.856 216.386 422.365 216.175 422.74 215.8 cv
423.115 215.425 423.326 214.916 423.326 214.386 cv
423.326 213.855 423.115 213.347 422.74 212.972 cv
422.365 212.597 421.856 212.386 421.326 212.386 cv
420.795 212.386 420.286 212.597 419.911 212.972 cv
419.536 213.347 419.326 213.855 419.326 214.386 cv
419.326 214.916 419.536 215.425 419.911 215.8 cv
420.286 216.175 420.795 216.386 421.326 216.386 cv
cp
f
417.663 195.843 mo
418.193 195.843 418.702 195.633 419.077 195.257 cv
419.452 194.882 419.663 194.374 419.663 193.843 cv
419.663 193.313 419.452 192.804 419.077 192.429 cv
418.702 192.054 418.193 191.843 417.663 191.843 cv
417.133 191.843 416.624 192.054 416.249 192.429 cv
415.874 192.804 415.663 193.313 415.663 193.843 cv
415.663 194.374 415.874 194.882 416.249 195.257 cv
416.624 195.633 417.133 195.843 417.663 195.843 cv
cp
f
424.104 196.32 mo
424.635 196.32 425.144 196.11 425.519 195.735 cv
425.894 195.36 426.104 194.851 426.104 194.32 cv
426.104 193.79 425.894 193.281 425.519 192.906 cv
425.144 192.531 424.635 192.32 424.104 192.32 cv
423.574 192.32 423.065 192.531 422.69 192.906 cv
422.315 193.281 422.104 193.79 422.104 194.32 cv
422.104 194.851 422.315 195.36 422.69 195.735 cv
423.065 196.11 423.574 196.32 424.104 196.32 cv
cp
f
423.637 213.065 mo
424.167 213.065 424.676 212.855 425.051 212.48 cv
425.426 212.105 425.637 211.596 425.637 211.065 cv
425.637 210.535 425.426 210.026 425.051 209.651 cv
424.676 209.276 424.167 209.065 423.637 209.065 cv
423.107 209.065 422.598 209.276 422.223 209.651 cv
421.848 210.026 421.637 210.535 421.637 211.065 cv
421.637 211.596 421.848 212.105 422.223 212.48 cv
422.598 212.855 423.107 213.065 423.637 213.065 cv
cp
f
424.077 207.954 mo
424.607 207.954 425.116 207.743 425.491 207.368 cv
425.866 206.993 426.077 206.484 426.077 205.954 cv
426.077 205.423 425.866 204.914 425.491 204.539 cv
425.116 204.164 424.607 203.954 424.077 203.954 cv
423.546 203.954 423.038 204.164 422.663 204.539 cv
422.287 204.914 422.077 205.423 422.077 205.954 cv
422.077 206.484 422.287 206.993 422.663 207.368 cv
423.038 207.743 423.546 207.954 424.077 207.954 cv
cp
f
423.87 205.299 mo
424.4 205.299 424.909 205.089 425.284 204.713 cv
425.659 204.338 425.87 203.83 425.87 203.299 cv
425.87 202.769 425.659 202.26 425.284 201.885 cv
424.909 201.51 424.4 201.299 423.87 201.299 cv
423.339 201.299 422.831 201.51 422.456 201.885 cv
422.081 202.26 421.87 202.769 421.87 203.299 cv
421.87 203.83 422.081 204.338 422.456 204.713 cv
422.831 205.089 423.339 205.299 423.87 205.299 cv
cp
f
424.034 191.365 mo
424.564 191.365 425.073 191.154 425.448 190.779 cv
425.823 190.404 426.034 189.895 426.034 189.365 cv
426.034 188.835 425.823 188.326 425.448 187.951 cv
425.073 187.576 424.564 187.365 424.034 187.365 cv
423.503 187.365 422.994 187.576 422.619 187.951 cv
422.244 188.326 422.034 188.835 422.034 189.365 cv
422.034 189.895 422.244 190.404 422.619 190.779 cv
422.994 191.154 423.503 191.365 424.034 191.365 cv
cp
f
473.601 187.34 mo
474.131 187.34 474.64 187.13 475.015 186.754 cv
475.39 186.379 475.601 185.871 475.601 185.34 cv
475.601 184.81 475.39 184.301 475.015 183.926 cv
474.64 183.551 474.131 183.34 473.601 183.34 cv
473.071 183.34 472.562 183.551 472.187 183.926 cv
471.812 184.301 471.601 184.81 471.601 185.34 cv
471.601 185.871 471.812 186.379 472.187 186.754 cv
472.562 187.13 473.071 187.34 473.601 187.34 cv
cp
f
472.576 196.959 mo
473.106 196.959 473.615 196.748 473.99 196.373 cv
474.365 195.998 474.576 195.489 474.576 194.959 cv
474.576 194.428 474.365 193.92 473.99 193.545 cv
473.615 193.17 473.106 192.959 472.576 192.959 cv
472.046 192.959 471.537 193.17 471.162 193.545 cv
470.787 193.92 470.576 194.428 470.576 194.959 cv
470.576 195.489 470.787 195.998 471.162 196.373 cv
471.537 196.748 472.046 196.959 472.576 196.959 cv
cp
f
470.418 218.556 mo
470.948 218.556 471.457 218.345 471.832 217.97 cv
472.207 217.595 472.418 217.087 472.418 216.556 cv
472.418 216.026 472.207 215.517 471.832 215.142 cv
471.457 214.767 470.948 214.556 470.418 214.556 cv
469.887 214.556 469.379 214.767 469.004 215.142 cv
468.629 215.517 468.418 216.026 468.418 216.556 cv
468.418 217.087 468.629 217.595 469.004 217.97 cv
469.379 218.345 469.887 218.556 470.418 218.556 cv
cp
f
465.45 182.761 mo
465.981 182.761 466.489 182.55 466.865 182.175 cv
467.24 181.8 467.45 181.291 467.45 180.761 cv
467.45 180.231 467.24 179.722 466.865 179.347 cv
466.489 178.972 465.981 178.761 465.45 178.761 cv
464.92 178.761 464.411 178.972 464.036 179.347 cv
463.661 179.722 463.45 180.231 463.45 180.761 cv
463.45 181.291 463.661 181.8 464.036 182.175 cv
464.411 182.55 464.92 182.761 465.45 182.761 cv
cp
f
464.706 208.713 mo
465.236 208.713 465.745 208.503 466.12 208.128 cv
466.495 207.752 466.706 207.244 466.706 206.713 cv
466.706 206.183 466.495 205.674 466.12 205.299 cv
465.745 204.924 465.236 204.713 464.706 204.713 cv
464.175 204.713 463.666 204.924 463.291 205.299 cv
462.916 205.674 462.706 206.183 462.706 206.713 cv
462.706 207.244 462.916 207.752 463.291 208.128 cv
463.666 208.503 464.175 208.713 464.706 208.713 cv
cp
f
469.128 180.501 mo
469.659 180.501 470.167 180.291 470.543 179.916 cv
470.918 179.541 471.128 179.032 471.128 178.501 cv
471.128 177.971 470.918 177.462 470.543 177.087 cv
470.167 176.712 469.659 176.501 469.128 176.501 cv
468.598 176.501 468.089 176.712 467.714 177.087 cv
467.339 177.462 467.128 177.971 467.128 178.501 cv
467.128 179.032 467.339 179.541 467.714 179.916 cv
468.089 180.291 468.598 180.501 469.128 180.501 cv
cp
f
467.849 156.267 mo
468.38 156.267 468.888 156.056 469.263 155.681 cv
469.639 155.306 469.849 154.797 469.849 154.267 cv
469.849 153.736 469.639 153.227 469.263 152.852 cv
468.888 152.477 468.38 152.267 467.849 152.267 cv
467.319 152.267 466.81 152.477 466.435 152.852 cv
466.06 153.227 465.849 153.736 465.849 154.267 cv
465.849 154.797 466.06 155.306 466.435 155.681 cv
466.81 156.056 467.319 156.267 467.849 156.267 cv
cp
f
465.395 191.071 mo
465.926 191.071 466.434 190.86 466.809 190.485 cv
467.184 190.11 467.395 189.601 467.395 189.071 cv
467.395 188.54 467.184 188.032 466.809 187.656 cv
466.434 187.281 465.926 187.071 465.395 187.071 cv
464.865 187.071 464.356 187.281 463.981 187.656 cv
463.606 188.032 463.395 188.54 463.395 189.071 cv
463.395 189.601 463.606 190.11 463.981 190.485 cv
464.356 190.86 464.865 191.071 465.395 191.071 cv
cp
f
464.291 199.504 mo
464.821 199.504 465.33 199.293 465.705 198.918 cv
466.08 198.543 466.291 198.034 466.291 197.504 cv
466.291 196.974 466.08 196.465 465.705 196.09 cv
465.33 195.715 464.821 195.504 464.291 195.504 cv
463.76 195.504 463.252 195.715 462.877 196.09 cv
462.501 196.465 462.291 196.974 462.291 197.504 cv
462.291 198.034 462.501 198.543 462.877 198.918 cv
463.252 199.293 463.76 199.504 464.291 199.504 cv
cp
f
466.33 162.617 mo
466.861 162.617 467.369 162.407 467.744 162.032 cv
468.119 161.657 468.33 161.148 468.33 160.617 cv
468.33 160.087 468.119 159.578 467.744 159.203 cv
467.369 158.828 466.861 158.617 466.33 158.617 cv
465.8 158.617 465.291 158.828 464.916 159.203 cv
464.541 159.578 464.33 160.087 464.33 160.617 cv
464.33 161.148 464.541 161.657 464.916 162.032 cv
465.291 162.407 465.8 162.617 466.33 162.617 cv
cp
f
467.759 205.725 mo
468.29 205.725 468.798 205.514 469.174 205.139 cv
469.549 204.764 469.759 204.255 469.759 203.725 cv
469.759 203.194 469.549 202.686 469.174 202.311 cv
468.798 201.935 468.29 201.725 467.759 201.725 cv
467.229 201.725 466.72 201.935 466.345 202.311 cv
465.97 202.686 465.759 203.194 465.759 203.725 cv
465.759 204.255 465.97 204.764 466.345 205.139 cv
466.72 205.514 467.229 205.725 467.759 205.725 cv
cp
f
468.504 169.653 mo
469.034 169.653 469.543 169.442 469.918 169.067 cv
470.293 168.692 470.504 168.183 470.504 167.653 cv
470.504 167.122 470.293 166.613 469.918 166.238 cv
469.543 165.863 469.034 165.653 468.504 165.653 cv
467.974 165.653 467.465 165.863 467.09 166.238 cv
466.715 166.613 466.504 167.122 466.504 167.653 cv
466.504 168.183 466.715 168.692 467.09 169.067 cv
467.465 169.442 467.974 169.653 468.504 169.653 cv
cp
f
466.325 208.354 mo
466.855 208.354 467.364 208.144 467.739 207.769 cv
468.114 207.394 468.325 206.885 468.325 206.354 cv
468.325 205.824 468.114 205.315 467.739 204.94 cv
467.364 204.565 466.855 204.354 466.325 204.354 cv
465.794 204.354 465.285 204.565 464.91 204.94 cv
464.535 205.315 464.325 205.824 464.325 206.354 cv
464.325 206.885 464.535 207.394 464.91 207.769 cv
465.285 208.144 465.794 208.354 466.325 208.354 cv
cp
f
468.017 195.002 mo
468.547 195.002 469.056 194.791 469.431 194.416 cv
469.806 194.041 470.017 193.533 470.017 193.002 cv
470.017 192.472 469.806 191.963 469.431 191.588 cv
469.056 191.213 468.547 191.002 468.017 191.002 cv
467.486 191.002 466.978 191.213 466.603 191.588 cv
466.227 191.963 466.017 192.472 466.017 193.002 cv
466.017 193.533 466.227 194.041 466.603 194.416 cv
466.978 194.791 467.486 195.002 468.017 195.002 cv
cp
f
469.363 213.75 mo
469.894 213.75 470.402 213.54 470.777 213.165 cv
471.152 212.79 471.363 212.281 471.363 211.75 cv
471.363 211.22 471.152 210.711 470.777 210.336 cv
470.402 209.961 469.894 209.75 469.363 209.75 cv
468.833 209.75 468.324 209.961 467.949 210.336 cv
467.574 210.711 467.363 211.22 467.363 211.75 cv
467.363 212.281 467.574 212.79 467.949 213.165 cv
468.324 213.54 468.833 213.75 469.363 213.75 cv
cp
f
473.995 154.809 mo
474.525 154.809 475.034 154.599 475.409 154.224 cv
475.784 153.848 475.995 153.34 475.995 152.809 cv
475.995 152.279 475.784 151.77 475.409 151.395 cv
475.034 151.02 474.525 150.809 473.995 150.809 cv
473.464 150.809 472.956 151.02 472.58 151.395 cv
472.205 151.77 471.995 152.279 471.995 152.809 cv
471.995 153.34 472.205 153.848 472.58 154.224 cv
472.956 154.599 473.464 154.809 473.995 154.809 cv
cp
f
470.501 152.596 mo
471.031 152.596 471.54 152.386 471.915 152.011 cv
472.29 151.636 472.501 151.127 472.501 150.596 cv
472.501 150.066 472.29 149.557 471.915 149.182 cv
471.54 148.807 471.031 148.596 470.501 148.596 cv
469.97 148.596 469.462 148.807 469.087 149.182 cv
468.712 149.557 468.501 150.066 468.501 150.596 cv
468.501 151.127 468.712 151.636 469.087 152.011 cv
469.462 152.386 469.97 152.596 470.501 152.596 cv
cp
f
467.361 189.211 mo
467.891 189.211 468.4 189 468.775 188.625 cv
469.15 188.25 469.361 187.742 469.361 187.211 cv
469.361 186.681 469.15 186.172 468.775 185.797 cv
468.4 185.422 467.891 185.211 467.361 185.211 cv
466.83 185.211 466.322 185.422 465.947 185.797 cv
465.571 186.172 465.361 186.681 465.361 187.211 cv
465.361 187.742 465.571 188.25 465.947 188.625 cv
466.322 189 466.83 189.211 467.361 189.211 cv
cp
f
469.596 170.792 mo
470.127 170.792 470.635 170.581 471.01 170.206 cv
471.385 169.831 471.596 169.322 471.596 168.792 cv
471.596 168.261 471.385 167.752 471.01 167.377 cv
470.635 167.002 470.127 166.792 469.596 166.792 cv
469.066 166.792 468.557 167.002 468.182 167.377 cv
467.807 167.752 467.596 168.261 467.596 168.792 cv
467.596 169.322 467.807 169.831 468.182 170.206 cv
468.557 170.581 469.066 170.792 469.596 170.792 cv
cp
f
467.536 199.212 mo
468.067 199.212 468.575 199.001 468.95 198.626 cv
469.325 198.251 469.536 197.742 469.536 197.212 cv
469.536 196.681 469.325 196.173 468.95 195.798 cv
468.575 195.422 468.067 195.212 467.536 195.212 cv
467.006 195.212 466.497 195.422 466.122 195.798 cv
465.747 196.173 465.536 196.681 465.536 197.212 cv
465.536 197.742 465.747 198.251 466.122 198.626 cv
466.497 199.001 467.006 199.212 467.536 199.212 cv
cp
f
469.225 187.502 mo
469.755 187.502 470.264 187.291 470.639 186.916 cv
471.014 186.541 471.225 186.032 471.225 185.502 cv
471.225 184.972 471.014 184.463 470.639 184.088 cv
470.264 183.713 469.755 183.502 469.225 183.502 cv
468.694 183.502 468.186 183.713 467.811 184.088 cv
467.436 184.463 467.225 184.972 467.225 185.502 cv
467.225 186.032 467.436 186.541 467.811 186.916 cv
468.186 187.291 468.694 187.502 469.225 187.502 cv
cp
f
466.568 187.494 mo
467.098 187.494 467.607 187.283 467.982 186.908 cv
468.357 186.533 468.568 186.024 468.568 185.494 cv
468.568 184.964 468.357 184.455 467.982 184.08 cv
467.607 183.705 467.098 183.494 466.568 183.494 cv
466.037 183.494 465.528 183.705 465.153 184.08 cv
464.778 184.455 464.568 184.964 464.568 185.494 cv
464.568 186.024 464.778 186.533 465.153 186.908 cv
465.528 187.283 466.037 187.494 466.568 187.494 cv
cp
f
473.782 155.465 mo
474.312 155.465 474.821 155.254 475.196 154.879 cv
475.571 154.504 475.782 153.996 475.782 153.465 cv
475.782 152.935 475.571 152.426 475.196 152.051 cv
474.821 151.676 474.312 151.465 473.782 151.465 cv
473.252 151.465 472.743 151.676 472.368 152.051 cv
471.993 152.426 471.782 152.935 471.782 153.465 cv
471.782 153.996 471.993 154.504 472.368 154.879 cv
472.743 155.254 473.252 155.465 473.782 155.465 cv
cp
f
472.446 203.745 mo
472.976 203.745 473.485 203.534 473.86 203.159 cv
474.235 202.784 474.446 202.275 474.446 201.745 cv
474.446 201.215 474.235 200.706 473.86 200.331 cv
473.485 199.956 472.976 199.745 472.446 199.745 cv
471.916 199.745 471.407 199.956 471.032 200.331 cv
470.657 200.706 470.446 201.215 470.446 201.745 cv
470.446 202.275 470.657 202.784 471.032 203.159 cv
471.407 203.534 471.916 203.745 472.446 203.745 cv
cp
f
471.342 194.231 mo
471.872 194.231 472.381 194.021 472.756 193.646 cv
473.131 193.271 473.342 192.762 473.342 192.231 cv
473.342 191.701 473.131 191.192 472.756 190.817 cv
472.381 190.442 471.872 190.231 471.342 190.231 cv
470.811 190.231 470.303 190.442 469.927 190.817 cv
469.552 191.192 469.342 191.701 469.342 192.231 cv
469.342 192.762 469.552 193.271 469.927 193.646 cv
470.303 194.021 470.811 194.231 471.342 194.231 cv
cp
f
472.874 199.572 mo
473.405 199.572 473.914 199.361 474.289 198.986 cv
474.664 198.611 474.874 198.102 474.874 197.572 cv
474.874 197.041 474.664 196.533 474.289 196.158 cv
473.914 195.782 473.405 195.572 472.874 195.572 cv
472.344 195.572 471.835 195.782 471.46 196.158 cv
471.085 196.533 470.874 197.041 470.874 197.572 cv
470.874 198.102 471.085 198.611 471.46 198.986 cv
471.835 199.361 472.344 199.572 472.874 199.572 cv
cp
f
470.859 211.505 mo
471.39 211.505 471.899 211.294 472.274 210.919 cv
472.649 210.544 472.859 210.035 472.859 209.505 cv
472.859 208.974 472.649 208.465 472.274 208.09 cv
471.899 207.715 471.39 207.505 470.859 207.505 cv
470.329 207.505 469.82 207.715 469.445 208.09 cv
469.07 208.465 468.859 208.974 468.859 209.505 cv
468.859 210.035 469.07 210.544 469.445 210.919 cv
469.82 211.294 470.329 211.505 470.859 211.505 cv
cp
f
472.596 218.327 mo
473.126 218.327 473.635 218.117 474.01 217.742 cv
474.385 217.367 474.596 216.858 474.596 216.327 cv
474.596 215.797 474.385 215.288 474.01 214.913 cv
473.635 214.538 473.126 214.327 472.596 214.327 cv
472.065 214.327 471.557 214.538 471.182 214.913 cv
470.807 215.288 470.596 215.797 470.596 216.327 cv
470.596 216.858 470.807 217.367 471.182 217.742 cv
471.557 218.117 472.065 218.327 472.596 218.327 cv
cp
f
468.047 196.771 mo
468.577 196.771 469.086 196.56 469.461 196.185 cv
469.836 195.81 470.047 195.302 470.047 194.771 cv
470.047 194.241 469.836 193.732 469.461 193.357 cv
469.086 192.982 468.577 192.771 468.047 192.771 cv
467.517 192.771 467.008 192.982 466.633 193.357 cv
466.258 193.732 466.047 194.241 466.047 194.771 cv
466.047 195.302 466.258 195.81 466.633 196.185 cv
467.008 196.56 467.517 196.771 468.047 196.771 cv
cp
f
466.431 189.03 mo
466.962 189.03 467.47 188.82 467.846 188.444 cv
468.221 188.069 468.431 187.561 468.431 187.03 cv
468.431 186.5 468.221 185.991 467.846 185.616 cv
467.47 185.241 466.962 185.03 466.431 185.03 cv
465.901 185.03 465.392 185.241 465.017 185.616 cv
464.642 185.991 464.431 186.5 464.431 187.03 cv
464.431 187.561 464.642 188.069 465.017 188.444 cv
465.392 188.82 465.901 189.03 466.431 189.03 cv
cp
f
466.896 180.029 mo
467.426 180.029 467.935 179.818 468.31 179.443 cv
468.685 179.068 468.896 178.559 468.896 178.029 cv
468.896 177.498 468.685 176.99 468.31 176.615 cv
467.935 176.24 467.426 176.029 466.896 176.029 cv
466.365 176.029 465.857 176.24 465.481 176.615 cv
465.106 176.99 464.896 177.498 464.896 178.029 cv
464.896 178.559 465.106 179.068 465.481 179.443 cv
465.857 179.818 466.365 180.029 466.896 180.029 cv
cp
f
473.238 206.618 mo
473.769 206.618 474.278 206.407 474.653 206.032 cv
475.028 205.657 475.238 205.148 475.238 204.618 cv
475.238 204.087 475.028 203.578 474.653 203.203 cv
474.278 202.828 473.769 202.618 473.238 202.618 cv
472.708 202.618 472.199 202.828 471.824 203.203 cv
471.449 203.578 471.238 204.087 471.238 204.618 cv
471.238 205.148 471.449 205.657 471.824 206.032 cv
472.199 206.407 472.708 206.618 473.238 206.618 cv
cp
f
472.239 196.951 mo
472.77 196.951 473.278 196.74 473.653 196.365 cv
474.029 195.99 474.239 195.481 474.239 194.951 cv
474.239 194.42 474.029 193.912 473.653 193.537 cv
473.278 193.162 472.77 192.951 472.239 192.951 cv
471.709 192.951 471.2 193.162 470.825 193.537 cv
470.45 193.912 470.239 194.42 470.239 194.951 cv
470.239 195.481 470.45 195.99 470.825 196.365 cv
471.2 196.74 471.709 196.951 472.239 196.951 cv
cp
f
469.675 193.639 mo
470.205 193.639 470.714 193.428 471.089 193.053 cv
471.464 192.678 471.675 192.17 471.675 191.639 cv
471.675 191.109 471.464 190.6 471.089 190.225 cv
470.714 189.85 470.205 189.639 469.675 189.639 cv
469.144 189.639 468.635 189.85 468.26 190.225 cv
467.885 190.6 467.675 191.109 467.675 191.639 cv
467.675 192.17 467.885 192.678 468.26 193.053 cv
468.635 193.428 469.144 193.639 469.675 193.639 cv
cp
f
465.592 205.258 mo
466.122 205.258 466.631 205.047 467.006 204.672 cv
467.381 204.297 467.592 203.788 467.592 203.258 cv
467.592 202.728 467.381 202.219 467.006 201.844 cv
466.631 201.469 466.122 201.258 465.592 201.258 cv
465.062 201.258 464.553 201.469 464.178 201.844 cv
463.803 202.219 463.592 202.728 463.592 203.258 cv
463.592 203.788 463.803 204.297 464.178 204.672 cv
464.553 205.047 465.062 205.258 465.592 205.258 cv
cp
f
469.281 194.013 mo
469.812 194.013 470.321 193.802 470.696 193.427 cv
471.071 193.052 471.281 192.544 471.281 192.013 cv
471.281 191.483 471.071 190.974 470.696 190.599 cv
470.321 190.224 469.812 190.013 469.281 190.013 cv
468.751 190.013 468.242 190.224 467.867 190.599 cv
467.492 190.974 467.281 191.483 467.281 192.013 cv
467.281 192.544 467.492 193.052 467.867 193.427 cv
468.242 193.802 468.751 194.013 469.281 194.013 cv
cp
f
464.375 170.807 mo
464.905 170.807 465.414 170.597 465.789 170.221 cv
466.164 169.846 466.375 169.338 466.375 168.807 cv
466.375 168.277 466.164 167.768 465.789 167.393 cv
465.414 167.018 464.905 166.807 464.375 166.807 cv
463.844 166.807 463.335 167.018 462.96 167.393 cv
462.585 167.768 462.375 168.277 462.375 168.807 cv
462.375 169.338 462.585 169.846 462.96 170.221 cv
463.335 170.597 463.844 170.807 464.375 170.807 cv
cp
f
467.482 209.537 mo
468.013 209.537 468.522 209.326 468.897 208.951 cv
469.272 208.576 469.482 208.068 469.482 207.537 cv
469.482 207.007 469.272 206.498 468.897 206.123 cv
468.522 205.748 468.013 205.537 467.482 205.537 cv
466.952 205.537 466.443 205.748 466.068 206.123 cv
465.693 206.498 465.482 207.007 465.482 207.537 cv
465.482 208.068 465.693 208.576 466.068 208.951 cv
466.443 209.326 466.952 209.537 467.482 209.537 cv
cp
f
471.958 201.243 mo
472.488 201.243 472.997 201.032 473.372 200.657 cv
473.747 200.282 473.958 199.773 473.958 199.243 cv
473.958 198.712 473.747 198.204 473.372 197.828 cv
472.997 197.453 472.488 197.243 471.958 197.243 cv
471.428 197.243 470.919 197.453 470.544 197.828 cv
470.169 198.204 469.958 198.712 469.958 199.243 cv
469.958 199.773 470.169 200.282 470.544 200.657 cv
470.919 201.032 471.428 201.243 471.958 201.243 cv
cp
f
464.426 169.301 mo
464.956 169.301 465.465 169.091 465.84 168.716 cv
466.215 168.341 466.426 167.832 466.426 167.301 cv
466.426 166.771 466.215 166.262 465.84 165.887 cv
465.465 165.512 464.956 165.301 464.426 165.301 cv
463.895 165.301 463.386 165.512 463.011 165.887 cv
462.636 166.262 462.426 166.771 462.426 167.301 cv
462.426 167.832 462.636 168.341 463.011 168.716 cv
463.386 169.091 463.895 169.301 464.426 169.301 cv
cp
f
470.65 209.285 mo
471.181 209.285 471.689 209.074 472.064 208.699 cv
472.439 208.324 472.65 207.816 472.65 207.285 cv
472.65 206.755 472.439 206.246 472.064 205.871 cv
471.689 205.496 471.181 205.285 470.65 205.285 cv
470.12 205.285 469.611 205.496 469.236 205.871 cv
468.861 206.246 468.65 206.755 468.65 207.285 cv
468.65 207.816 468.861 208.324 469.236 208.699 cv
469.611 209.074 470.12 209.285 470.65 209.285 cv
cp
f
469.396 206.566 mo
469.926 206.566 470.435 206.355 470.81 205.98 cv
471.185 205.605 471.396 205.096 471.396 204.566 cv
471.396 204.036 471.185 203.527 470.81 203.152 cv
470.435 202.777 469.926 202.566 469.396 202.566 cv
468.866 202.566 468.357 202.777 467.982 203.152 cv
467.607 203.527 467.396 204.036 467.396 204.566 cv
467.396 205.096 467.607 205.605 467.982 205.98 cv
468.357 206.355 468.866 206.566 469.396 206.566 cv
cp
f
470.16 202.199 mo
470.691 202.199 471.2 201.989 471.575 201.613 cv
471.95 201.238 472.16 200.73 472.16 200.199 cv
472.16 199.669 471.95 199.16 471.575 198.785 cv
471.2 198.41 470.691 198.199 470.16 198.199 cv
469.63 198.199 469.121 198.41 468.746 198.785 cv
468.371 199.16 468.16 199.669 468.16 200.199 cv
468.16 200.73 468.371 201.238 468.746 201.613 cv
469.121 201.989 469.63 202.199 470.16 202.199 cv
cp
f
471.739 197.812 mo
472.269 197.812 472.778 197.601 473.153 197.226 cv
473.528 196.851 473.739 196.343 473.739 195.812 cv
473.739 195.282 473.528 194.773 473.153 194.398 cv
472.778 194.023 472.269 193.812 471.739 193.812 cv
471.208 193.812 470.7 194.023 470.324 194.398 cv
469.949 194.773 469.739 195.282 469.739 195.812 cv
469.739 196.343 469.949 196.851 470.324 197.226 cv
470.7 197.601 471.208 197.812 471.739 197.812 cv
cp
f
468.056 189.231 mo
468.587 189.231 469.095 189.02 469.47 188.645 cv
469.845 188.27 470.056 187.761 470.056 187.231 cv
470.056 186.7 469.845 186.191 469.47 185.816 cv
469.095 185.441 468.587 185.231 468.056 185.231 cv
467.526 185.231 467.017 185.441 466.642 185.816 cv
466.267 186.191 466.056 186.7 466.056 187.231 cv
466.056 187.761 466.267 188.27 466.642 188.645 cv
467.017 189.02 467.526 189.231 468.056 189.231 cv
cp
f
473.464 164.794 mo
473.995 164.794 474.503 164.584 474.878 164.209 cv
475.253 163.833 475.464 163.325 475.464 162.794 cv
475.464 162.264 475.253 161.755 474.878 161.38 cv
474.503 161.005 473.995 160.794 473.464 160.794 cv
472.934 160.794 472.425 161.005 472.05 161.38 cv
471.675 161.755 471.464 162.264 471.464 162.794 cv
471.464 163.325 471.675 163.833 472.05 164.209 cv
472.425 164.584 472.934 164.794 473.464 164.794 cv
cp
f
471.762 220.784 mo
472.293 220.784 472.801 220.573 473.176 220.198 cv
473.552 219.823 473.762 219.314 473.762 218.784 cv
473.762 218.253 473.552 217.744 473.176 217.369 cv
472.801 216.994 472.293 216.784 471.762 216.784 cv
471.232 216.784 470.723 216.994 470.348 217.369 cv
469.973 217.744 469.762 218.253 469.762 218.784 cv
469.762 219.314 469.973 219.823 470.348 220.198 cv
470.723 220.573 471.232 220.784 471.762 220.784 cv
cp
f
464.873 209.86 mo
465.403 209.86 465.912 209.65 466.287 209.275 cv
466.662 208.9 466.873 208.391 466.873 207.86 cv
466.873 207.33 466.662 206.821 466.287 206.446 cv
465.912 206.071 465.403 205.86 464.873 205.86 cv
464.342 205.86 463.833 206.071 463.458 206.446 cv
463.083 206.821 462.873 207.33 462.873 207.86 cv
462.873 208.391 463.083 208.9 463.458 209.275 cv
463.833 209.65 464.342 209.86 464.873 209.86 cv
cp
f
473.784 211.656 mo
474.315 211.656 474.823 211.446 475.198 211.071 cv
475.573 210.695 475.784 210.187 475.784 209.656 cv
475.784 209.126 475.573 208.617 475.198 208.242 cv
474.823 207.867 474.315 207.656 473.784 207.656 cv
473.254 207.656 472.745 207.867 472.37 208.242 cv
471.995 208.617 471.784 209.126 471.784 209.656 cv
471.784 210.187 471.995 210.695 472.37 211.071 cv
472.745 211.446 473.254 211.656 473.784 211.656 cv
cp
f
467.483 159.688 mo
468.014 159.688 468.523 159.477 468.898 159.102 cv
469.273 158.727 469.483 158.218 469.483 157.688 cv
469.483 157.157 469.273 156.649 468.898 156.273 cv
468.523 155.898 468.014 155.688 467.483 155.688 cv
466.953 155.688 466.444 155.898 466.069 156.273 cv
465.694 156.649 465.483 157.157 465.483 157.688 cv
465.483 158.218 465.694 158.727 466.069 159.102 cv
466.444 159.477 466.953 159.688 467.483 159.688 cv
cp
f
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
